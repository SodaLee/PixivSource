[
    {
        "bookSourceComment": "Pixiv 书源（更新时间：2024-09-04）\n\n可用功能：✅搜索✅发现✅添加链接✅订阅源\n搜索小说：✅小说名称✅作者名称✅小说标签\n发现小说：✅关注作者✅追更列表✅推荐✅收藏\n添加网址：✅Pixiv小说链接✅Pixiv系列小说链接\n订阅用法：点击订阅源打开小说/系列小说，【刷新】，点击【加入书架】按钮添加小说到书架\n\n书源发布：兽人阅读频道 https://t.me/FurryReading\n项目地址：https://github.com/windyhusky/PixivSource\n规则订阅：https://cdn.jsdelivr.net/gh/windyhusky/PixivSource@main/pixiv.json\nhttps://raw.githubusercontent.com/windyhusky/PixivSource/main/pixiv.json",
        "bookSourceGroup": "🔞 Pixiv",
        "bookSourceName": "Pixiv",
        "bookSourceType": 0,
        "bookSourceUrl": "https://www.pixiv.net",
        "bookUrlPattern": "(https?://)?(www\\.)?pixiv\\.net(/ajax)?/novel/(show\\.php\\?id=|series/)?\\d+",
        "customOrder": 0,
        "enabled": true,
        "enabledCookieJar": false,
        "enabledExplore": true,
        "exploreUrl": "[\n  {\n    \"title\": \"关注作者\",\n    \"url\": \"https://www.pixiv.net/ajax/follow_latest/novel?p={{page}}&mode=all&lang=zh\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\":0.3\n    }\n  },\n    {\n    \"title\": \"追更列表\",\n    \"url\": \"https://www.pixiv.net/ajax/watch_list/novel?p={{page}}&new=1&lang=zh\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\":0.3\n    }\n  },\n  {\n    \"title\": \"推荐小说\",\n    \"url\": \"https://www.pixiv.net/ajax/top/novel?mode=all&lang=zh\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\":0.3\n    }\n  },\n  {\n    \"title\": \"收藏小说\",\n    \"url\": \"https://www.pixiv.net/ajax/user/{{cache.get(\\\"pixiv:uid\\\")}}/novels/bookmarks?tag=&offset={{(page-1)*24}}&limit=24&rest=show&lang=zh\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\":0.3\n    }\n  }\n]",
        "header": "{\"referer\":\"https://www.pixiv.net\"}",
        "lastUpdateTime": 1725938891123,
        "loginCheckJs": "var util = {}\n\nfunction objStringify(obj) {\n    return JSON.stringify(obj, (n, v) => {\n        if (typeof v == \"function\")\n            return v.toString();\n        return v;\n    });\n}\n\nfunction publicFunc() {\n    let u = {}\n\n    u.cacheGetAndSet = (key, supplyFunc) => {\n        let v = cache.get(key)\n        if (v === undefined || v === null) {\n            v = JSON.stringify(supplyFunc())\n            // 缓存10分钟\n            cache.put(key, v, 600)\n        }\n        return JSON.parse(v)\n    }\n    u.getAjaxJson = (url) => {\n        return util.cacheGetAndSet(url, () => {\n            return JSON.parse(java.ajax(url))\n        })\n    }\n    u.getWebviewJson = (url, parseFunc) => {\n        return util.cacheGetAndSet(url, () => {\n            let html = java.webView(null, url, null)\n            return JSON.parse(parseFunc(html))\n        })\n    }\n    u.debugFunc = (func) => {\n        if (String(source.getVariable()) === \"debug\") {\n            func()\n        }\n    }\n\n    u.urlNovelDetailed = (nid) => {\n        return `https://www.pixiv.net/ajax/novel/${nid}`\n    }\n    u.urlSeries = (seriesId) => {\n        return `https://www.pixiv.net/ajax/novel/series/${seriesId}?lang=zh`\n    }\n    u.urlSeriesNovels = (seriesId, limit, offset) => {\n        if (limit > 30) {\n            limit = 30\n        }\n\n        if (limit < 10) {\n            limit = 10\n        }\n\n        return `https://www.pixiv.net/ajax/novel/series_content/${seriesId}?limit=${limit}&last_order=${offset}&order_by=asc&lang=zh`\n    }\n    u.searchNovel = (novelName, page) =>{\n        return `https://www.pixiv.net/ajax/search/novels/${encodeURI(novelName)}?word=${encodeURI(novelName)}&order=date_d&mode=all&p=${page}&s_mode=s_tag&lang=zh`\n    }\n    // 完全匹配用户名\n    u.urlSearchUser = (username) => {\n        return `https://www.pixiv.net/search_user.php?s_mode=s_usr&nick=${encodeURI(username)}&nick_mf=1`\n    }\n    u.urlUserAllWorks = (uid) => {\n        return `https://www.pixiv.net/ajax/user/${uid}/profile/all?lang=zh`\n    }\n    u.urlUserNovels = (uid, nidList) => {\n        return `https://www.pixiv.net/ajax/user/${uid}/novels?${nidList.map(v => \"ids[]=\" + v).join(\"&\")}`\n    }\n\n    u.urlIllustDetailed = (illustId) => {\n        return `https://www.pixiv.net/ajax/illust/${illustId}?lang=zh`\n    }\n    u.urlSeriesIllusts = (seriesId) => {\n        return `https://www.pixiv.net/ajax/series/${seriesId}?p=1&lang=zh`\n    }\n    u.urlCoverUrl = (url) => {\n        return `${url},{\"headers\": {\"Referer\":\"https://www.pixiv.net/\"}}`\n    }\n    u.urlIllustOriginal = function (illustId, order) {\n        let illustOriginal = util.getAjaxJson(util.urlIllustDetailed(illustId)).body.urls.original\n        if (order >= 1) {\n            illustOriginal = illustOriginal.replace(`_p0`, `_p${order - 1}`)\n        }\n        return illustOriginal\n        }\n\n    u.formatNovels = function (novels) {\n        novels.forEach(novel => {\n            novel.detailedUrl = util.urlNovelDetailed(novel.id)\n            const time = this.dateFormat(novel.updateDate);\n            novel.tags = novel.tags.join(\",\")\n            novel.coverUrl = util.urlCoverUrl(novel.url)\n            novel.description += `\\n更新时间:${time}`\n        })\n        return novels\n    }\n\n    u.dateFormat = function (str) {\n        let addZero = function (num) {\n            return num < 10 ? '0' + num : num;\n        }\n\n        let time = new Date(str);\n        let Y = time.getFullYear() + \"年\";\n        let M = addZero(time.getMonth() + 1) + \"月\";\n        let D = addZero(time.getDate()) + \"日\";\n        return Y + M + D;\n    }\n\n\n    util = u\n    java.put(\"util\", objStringify(u))\n}\n\npublicFunc()\n\n// 获取请求的user id方便其他ajax请求构造\nlet uid = java.getResponse().headers().get(\"x-userid\")\nif (uid != null) {\n    cache.put(\"pixiv:uid\", uid)\n}\njava.getStrResponse(null, null)",
        "loginUrl": "https://accounts.pixiv.net/login",
        "respondTime": 180000,
        "ruleBookInfo": {
            "author": "author",
            "coverUrl": "coverUrl",
            "init": "@js:\nvar util = objParse(String(java.get(\"util\")))\n\nfunction objParse(obj) {\n    return JSON.parse(obj, (n, v) => {\n        if (typeof v == \"string\" && v.match(\"()\")) {\n            return eval(`(${v})`)\n        }\n        return v;\n    })\n}\n\n(function (res) {\n    // 获取网址id，请求并解析数据\n    let isHtml = result.startsWith(\"<!DOCTYPE html>\")\n    if (isHtml) {\n        var novelId = 0\n        let isSeries = baseUrl.match(new RegExp(\"pixiv.net/(ajax/|)novel/series\"))\n        if (isSeries) {\n            let seriesId = baseUrl.match(new RegExp(\"\\\\d+\"))[0]\n            java.log(`系列ID：${seriesId}`)\n            // 获取系列第一篇小说的 id\n            let url = util.urlSeriesNovels(seriesId, 30, 0)\n            res = util.cacheGetAndSet(url, () => {\n                return JSON.parse(java.ajax(url))\n            })\n            novelId = res.body.thumbnails.novel[0].id\n            java.log(`小说ID：${novelId}`)\n            res = util.getAjaxJson(util.urlNovelDetailed(novelId)).body\n            // java.log(JSON.stringify(res))\n        } else {\n            let isNovel = baseUrl.match(new RegExp(\"pixiv.net/(ajax/|)novel\"))\n            if (isNovel) {\n                novelId = baseUrl.match(new RegExp(\"\\\\d+\"))[0]\n                java.log(`小说ID：${novelId}`)\n                res = util.getAjaxJson(util.urlNovelDetailed(novelId)).body\n                // java.log(JSON.stringify(res))\n            } else {\n                return []\n            }\n        }\n    } else {\n        // 从搜索直接获取 json\n        res = JSON.parse(result).body\n        if (res.total === 0) {\n            return []\n        }\n    }\n\n    let info = {}\n    info.author = res.userName\n    info.name = res.title\n    info.tags = res.userNovels[`${res.id}`].tags\n    info.wordCount = res.wordCount\n    info.latestChapter = null\n    info.desc = res.description\n    info.coverUrl = res.coverUrl\n    info.catalogUrl = util.urlNovelDetailed(res.id)\n\n    if (res.seriesNavData === undefined || res.seriesNavData === null) {\n        info.name = res.title\n        info.catalog = util.urlNovelDetailed(res.id)\n        info.tags.unshift('单本')\n    } else {\n        info.name = res.seriesNavData.title\n        info.catalog = util.urlSeries(res.seriesNavData.id)\n        info.tags.unshift('长篇')\n    }\n    info.tags = info.tags.join(\",\")\n\n    return info\n})();",
            "intro": "desc",
            "kind": "tags",
            "name": "name",
            "tocUrl": "catalogUrl",
            "wordCount": "wordCount"
        },
        "ruleContent": {
            "content": "@js:\nvar util = objParse(String(java.get(\"util\")))\n\nfunction objParse(obj) {\n    return JSON.parse(obj, (n, v) => {\n        if (typeof v == \"string\" && v.match(\"()\")) {\n            return eval(`(${v})`)\n        }\n        return v;\n    })\n}\n\n(() => {\n    let res = JSON.parse(result).body\n    let content = res.content\n    // 在正文内部添加小说描述\n    if (res.seriesNavData !== undefined && res.seriesNavData !== null && res.description !== \"\") {\n        content = res.description + \"\\n\" + \"——————————\\n\".repeat(2) + content\n    }\n\n    // 获取 [uploadedimage:] 的图片链接\n    let hasEmbeddedImages = res.textEmbeddedImages !== undefined && res.textEmbeddedImages !== null\n    if (hasEmbeddedImages) {\n        Object.keys(res.textEmbeddedImages).forEach((key) => {\n            content = content.replace(`[uploadedimage:${key}]`, `<img src=\"${res.textEmbeddedImages[key].urls.original}\">`)\n        })\n    }\n\n    // 获取 [pixivimage:] 的图片链接 [pixivimage:1234] [pixivimage:1234-1]\n    let matched = content.match(RegExp(/\\[pixivimage:(\\d+)-?(\\d+)]/gm))\n    if (matched) {\n        for (let i in matched) {\n            let illustId, order\n            let matched2 = matched[i].match(RegExp(\"(\\\\d+)-?(\\\\d+)\"))\n            let temp = matched2[0].split(\"-\")\n            illustId = temp[0]\n            if (temp.length === 2){\n                order = temp[1]\n            }\n            content = content.replace(`${matched[i]}`, `<img src=\"${util.urlIllustOriginal(illustId, order)}\">`)\n        }\n    }\n\n    // 替换 Pixiv 分页标记符号 [newpage]\n    matched = content.match(RegExp(/[ 　]*\\[newpage][ 　]*/gm))\n    if (matched) {\n        for (let i in matched){\n            java.log(matched[i])\n            content = content.replace(`${matched[i]}`, `${\"<p>​<p/>\".repeat(3)}`)\n        }\n    }\n\n    // 替换 Pixiv 章节标记符号 [chapter:]\n    matched = content.match(RegExp(/\\[chapter:(.*?)]/gm))\n    if (matched) {\n        for (let i in matched) {\n            let matched2 = matched[i].match(/\\[chapter:(.*?)]/m)\n            let chapter = matched2[1].trim()\n            content = content.replace(`${matched[i]}`, `${chapter}<p>​<p/>`)\n        }\n    }\n\n    // 替换 Pixiv 跳转页面标记符号 [[jump:]]\n    matched = content.match(RegExp(/\\[jump:(\\d+)]/gm))\n    if (matched) {\n        for (let i in matched) {\n            let page = matched[i].match(/\\d+/)\n            content = content.replace(`${matched[i]}`, `\\n\\n跳转至第${page}节`)\n        }\n    }\n\n    // 替换 Pixiv 链接标记符号 [[jumpuri: > ]]\n    matched = content.match(RegExp(/\\[\\[jumpuri:(.*?)>(.*?)]]/gm))\n    if (matched) {\n        for (let i in matched) {\n            let matched2 = matched[i].match(/\\[\\[jumpuri:(.*?)>(.*?)]]/m)\n            let matchedText = matched2[0]\n            let urlName = matched2[1].trim()\n            let urlLink = matched2[2].trim()\n            // 阅读不支持超链接\n            //content = content.replace(`${matchedText}`, `<a href=${urlLink}>${urlName}</a>`)\n            if (urlLink === urlName) {\n                content = content.replace(`${matchedText}`, `${urlName}`)\n            } else {\n                content = content.replace(`${matchedText}`, `${urlName}: ${urlLink}`)\n            }\n        }\n    }\n\n    // 替换 Pixiv 注音标记符号 [[rb: > ]]\n    matched = content.match(RegExp(/\\[\\[rb:(.*?)>(.*?)]]/gm))\n    if (matched) {\n        for (let i in matched) {\n            let matched2 = matched[i].match(/\\[\\[rb:(.*?)>(.*?)]]/m)\n            let matchedText = matched2[0]\n            let kanji = matched2[1].trim()\n            let kana = matched2[2].trim()\n            // kana为中文，则替换回《书名号》\n            var reg = new RegExp(\"[\\\\u4E00-\\\\u9FFF]+\",\"g\");\n            if (reg.test(kana)) {\n                content = content.replace(`${matchedText}`, `${kanji}《${kana}》`)\n            } else{\n                // 阅读不支持 <ruby> <rt> 注音\n                // content = content.replace(`${matchedText}`, `<ruby>${kanji}<rt>${kana}</rt></ruby>`)\n                content = content.replace(`${matchedText}`, `${kanji}（${kana}）`)\n            }\n        }\n    }\n\n    return content\n})()\n",
            "imageStyle": "DEFAULT",
            "nextContentUrl": "",
            "title": ""
        },
        "ruleExplore": {
            "author": "userName",
            "bookList": "@js:\nvar util = objParse(String(java.get(\"util\")))\n\nfunction objParse(obj) {\n    return JSON.parse(obj, (n, v) => {\n        if (typeof v == \"string\" && v.match(\"()\")) {\n            return eval(`(${v})`)\n        }\n        return v;\n    })\n}\n\n\n// 存储seriesID 有BUG无法处理翻页\nvar seriesSet = new Set();\n// 将多个长篇小说解析为一本书\nfunction combineNovels(novels) {\n    return novels.filter(novel => {\n        //单本直接解析为一本书\n        if (novel.seriesId === undefined || novel.seriesId === null) {\n            return true\n        }\n\n        //集合中没有该系列解析为一本书\n        if (!seriesSet.has(novel.seriesId)) {\n            seriesSet.add(novel.seriesId)\n            return true\n        }\n\n        return false\n    })\n}\n\nfunction handNovels(novels) {\n    novels.forEach(novel => {\n        if (novel.tags === undefined || novel.tags === null) {\n            novel.tags = []\n        }\n\n        if (novel.seriesId === undefined || novel.seriesId === null) {\n            novel.tags.unshift(\"单本\")\n        } else {\n            let userAllWorks = util.getAjaxJson(util.urlUserAllWorks(novel.userId)).body\n            for (let series of userAllWorks.novelSeries) {\n                if (series.id === novel.seriesId) {\n                    // let series = util.getAjaxJson(util.urlSeries(novel.seriesId)).body\n                    novel.textCount = series.publishedTotalCharacterCount\n                    novel.url = series.cover.urls[\"480mw\"]\n                    novel.title = series.title\n                    novel.tags = series.tags\n                    novel.description = series.caption\n\n                    try{\n                        // 发送请求获取第一章 获取标签与简介\n                        if (novel.tags.length === 0 || novel.description === \"\") {\n                            let firstNovel = util.getAjaxJson(util.urlNovelDetailed(series.firstNovelId)).body\n                            if (novel.tags.length === 0) {\n                                novel.tags = firstNovel.tags.tags.map(item => item.tag)\n                            }\n\n                            if (novel.description === \"\") {\n                                novel.description = firstNovel.description\n                            }\n                        }\n                        novel.tags.unshift(\"长篇\")\n                        break\n                    } catch (e) {\n                        java.log(e)\n                    }\n                }\n            }\n        }\n    })\n    return novels\n}\n\nfunction handlerFactory() {\n    let cookie = String(java.getCookie(\"https://www.pixiv.net/\", null))\n    if (cookie === null || cookie === undefined || cookie === \"\") {\n        return handlerNoLogin()\n    }\n    if (baseUrl.indexOf(\"/bookmark\") !== -1) {\n        return handlerBookMarks()\n    }\n\n    if (baseUrl.indexOf(\"/top\") !== -1) {\n        return handlerRecommend()\n    }\n\n    if (baseUrl.indexOf(\"/following\") !== -1) {\n        return handlerFollowing()\n    }\n\n    if (baseUrl.indexOf(\"/follow_latest\") !== -1) {\n        return handlerFollowLatest()\n    }\n\n    if (baseUrl.indexOf(\"/watch_list\") !== -1) {\n        return handlerWatchList()\n    }\n}\n\nfunction handlerFollowing() {\n    return () => {\n        let novelList = []\n        JSON.parse(result).body.users\n            .filter(user => user.novels.length > 0)\n            .map(user => user.novels)\n            .forEach(novels => {\n                return novels.forEach(novel => {\n                    novelList.push(novel)\n                })\n            })\n        return util.formatNovels(handNovels(novelList))\n    }\n}\n\n// 推荐小说\nfunction handlerRecommend() {\n    return () => {\n        let res = JSON.parse(result)\n        const recommend = res.body.page.recommend\n        const novels = res.body.thumbnails.novel\n        let nidSet = new Set(recommend.ids)\n        // java.log(nidSet.size)\n        let list = novels.filter(novel => nidSet.has(String(novel.id)))\n        // java.log(`过滤结果:${JSON.stringify(list)}`)\n        return util.formatNovels(handNovels(combineNovels(list)))\n    }\n}\n\nfunction handlerNoLogin() {\n    return () => {\n        java.longToast(\"此功能需要在书源登录后才能使用\")\n        return []\n    }\n}\n\n// 收藏小说\nfunction handlerBookMarks() {\n    return () => {\n        let resp = JSON.parse(result).body.works\n        if (resp === undefined || resp.length === 0) {\n            //流程无法本环节中止 只能交给下一流程处理\n            return []\n        }\n\n        return util.formatNovels(handNovels(resp))\n    }\n}\n\n//关注作者，近期小说\nfunction handlerFollowLatest() {\n    return () => {\n        let resp = JSON.parse(result)\n        return util.formatNovels(handNovels(combineNovels(resp.body.thumbnails.novel)))\n    }\n}\n\n// 追更列表\nfunction handlerWatchList(){\n    return () => {\n        let resp = JSON.parse(result)\n        let novels = []\n        let seriesList = resp.body.thumbnails.novelSeries\n        for (let i in seriesList) {\n            let novelId = seriesList[i].latestEpisodeId  // 使用最后一篇小说，重新请求并合并小说\n            novels.push(util.getAjaxJson(util.urlNovelDetailed(novelId)).body.userNovels[`${novelId}`])\n        }\n        return util.formatNovels(handNovels(combineNovels(novels)))\n    }\n}\n\n(() => {\n    return handlerFactory()()\n})()",
            "bookUrl": "detailedUrl",
            "coverUrl": "coverUrl",
            "intro": "description",
            "kind": "tags",
            "lastChapter": "latestChapter",
            "name": "title",
            "wordCount": "textCount"
        },
        "ruleSearch": {
            "author": "userName",
            "bookList": "@js:\nvar util = objParse(String(java.get(\"util\")))\n\nfunction objParse(obj) {\n    return JSON.parse(obj, (n, v) => {\n        if (typeof v == \"string\" && v.match(\"()\")) {\n            return eval(`(${v})`)\n        }\n        return v;\n    })\n}\n\n//不可使用 base 内的 util.getAjaxJson() 替换\nfunction getAjaxJson(url) {\n    return util.cacheGetAndSet(url, () => {\n        return JSON.parse(java.ajax(url))\n    })\n}\n\nfunction getWebviewJson(url, parseFunc) {\n    return util.cacheGetAndSet(url, () => {\n        let html = java.webView(null, url, null)\n        return JSON.parse(parseFunc(html))\n    })\n}\n\nvar first = true;\n// 存储seriesID·\nvar seriesSet = {\n    keywords: \"Pixiv:Search\",\n    has: (value) => {\n        let page = Number(java.get(\"page\"))\n        if (page === 1 && first) {\n            first = false\n            cache.deleteMemory(this.keywords)\n            return false\n        }\n\n        let v = cache.getFromMemory(this.keywords)\n        if (v === undefined || v === null) {\n            return false\n        }\n        let set = new Set(JSON.parse(v))\n        return set.has(value)\n    },\n\n    add: (value) => {\n        let v = cache.getFromMemory(this.keywords)\n        if (v === undefined || v === null) {\n            cache.putMemory(this.keywords, JSON.stringify([value]))\n\n        } else {\n            let arr = JSON.parse(v)\n            if (typeof arr === \"string\") {\n                arr = Array(arr)\n            }\n            arr.push(value)\n            cache.putMemory(this.keywords, JSON.stringify(arr))\n        }\n    },\n};\n\n// 将多个长篇小说解析为一本书\nfunction combineNovels(novels) {\n    return novels.filter(novel => {\n        //单本直接解析为一本书\n        if (novel.seriesId === undefined || novel.seriesId === null) {\n            return true\n        }\n\n        //集合中没有该系列解析为一本书\n        if (!seriesSet.has(novel.seriesId)) {\n            seriesSet.add(novel.seriesId)\n            return true\n        }\n\n        return false\n    })\n}\n\n//处理novels列表\n//查询作者\nfunction handNovels(novels) {\n    novels.forEach(novel => {\n        if (novel.tags === undefined || novel.tags === null) {\n            novel.tags = []\n        }\n        if (novel.seriesId === undefined || novel.seriesId === null) {\n            novel.tags.unshift(\"单本\")\n        } else {\n            let userAllWorks = getAjaxJson(util.urlUserAllWorks(novel.userId)).body\n            for (let series of userAllWorks.novelSeries) {\n                if (series.id === novel.seriesId) {\n                    // let series = getAjaxJson(util.urlSeries(novel.seriesId)).body\n                    novel.textCount = series.publishedTotalCharacterCount\n                    novel.url = series.cover.urls[\"480mw\"]\n                    novel.title = series.title\n                    novel.tags = series.tags\n                    novel.description = series.caption\n\n                    // 发送请求获取第一章 获取标签与简介\n                    if (novel.tags.length === 0 || novel.description === \"\") {\n                        let firstNovel = getAjaxJson(util.urlNovelDetailed(series.firstNovelId)).body\n                        if (novel.tags.length === 0) {\n                            novel.tags = firstNovel.tags.tags.map(item => item.tag)\n                        }\n\n                        if (novel.description === \"\") {\n                            novel.description = firstNovel.description\n                        }\n                    }\n\n                    novel.tags.unshift(\"长篇\")\n                    break\n                }\n            }\n        }\n    })\n    util.debugFunc(() => {\n        java.log(`处理小说完成`)\n    })\n    return novels\n}\n\nfunction isLogin() {\n    let cookie = String(java.getCookie(\"https://www.pixiv.net/\", null))\n    return typeof cookie === \"string\" && cookie !== \"\"\n}\n\nfunction getUserNovels(username) {\n    if (!isLogin()) {\n        return []\n    }\n\n    let html = java.ajax(util.urlSearchUser(username))\n    // java.log(html)\n    // 仅匹配有投稿作品的用户\n    let match = html.match(new RegExp(\"/users/\\\\d+/novels\"))\n    if (match === null || match.length === 0) {\n        return []\n    }\n\n    let regNumber = new RegExp(\"\\\\d+\")\n    let uidList = match.map(v => {\n        return v.match(regNumber)[0]\n    })\n\n    // 仅限3个作者\n    if (uidList.length >= 3) {\n        uidList.length = 3\n    }\n\n    let novels = []\n    let page = Number(java.get(\"page\"))\n\n    uidList.forEach(id => {\n        let r = getAjaxJson(util.urlUserAllWorks(id))\n        let novelsId = Object.keys(r.body.novels).reverse().slice((page - 1) * 20, page * 20)\n        let url = util.urlUserNovels(id, novelsId)\n        util.debugFunc(() => {\n            java.log(`发送获取作者小说的Ajax请求:${url}`)\n        })\n        let userNovels = getWebviewJson(url, html => {\n            return (html.match(new RegExp(\">\\\\{.*?}<\"))[0].replace(\">\", \"\").replace(\"<\", \"\"))\n        }).body\n        // 获取对应的小说 该序列是按照id排序\n        // 反转以按照更新时间排序\n        novels = novels.concat(Object.values(userNovels).reverse())\n    })\n\n\n    util.debugFunc(() => {\n        java.log(`获取用户搜索小说结束`)\n    })\n    return novels\n}\n\n(() => {\n    //作者 TAG 书名都要支持\n    let resp = JSON.parse(result);\n    let novelsList = getUserNovels(String(java.get(\"key\")))\n    novelsList = novelsList.concat(resp.body.novel.data)\n    return util.formatNovels(handNovels(combineNovels(novelsList)))\n})();",
            "bookUrl": "detailedUrl",
            "coverUrl": "coverUrl",
            "intro": "description",
            "kind": "tags",
            "lastChapter": "latestChapter",
            "name": "title",
            "wordCount": "textCount"
        },
        "ruleToc": {
            "chapterList": "@js:\nvar util = objParse(String(java.get(\"util\")))\n\nfunction objParse(obj) {\n    return JSON.parse(obj, (n, v) => {\n        if (typeof v == \"string\" && v.match(\"()\")) {\n            return eval(`(${v})`)\n        }\n        return v;\n    })\n}\n\nfunction seriesHandler(res) {\n    const limit = 30\n    let returnList = [];\n    let seriesID = res.seriesNavData.seriesId\n    let allChaptersCount = (() => {\n        let result = util.cacheGetAndSet(util.urlSeries(seriesID), () => {\n            return util.getAjaxJson(util.urlSeries(seriesID))\n        }).body.total\n        util.debugFunc(() => {\n            java.log(`本目录一共有:${result} 章节`);\n        })\n        return result;\n    })();\n\n    //发送请求获得相应数量的目录列表\n    function sendAjaxForGetChapters(lastIndex) {\n        let url = util.urlSeriesNovels(seriesID, limit, lastIndex)\n        res = util.cacheGetAndSet(url, () => {\n            return util.getAjaxJson(url)\n        })\n        res = res.body.page.seriesContents\n        res.forEach(v => {\n            v.chapterUrl = util.urlNovelDetailed(v.id)\n        })\n        return res;\n    }\n\n    //逻辑控制者 也就是使用上面定义的两个函数来做对应功能\n    //要爬取的总次数\n    let max = (allChaptersCount / limit) + 1\n    for (let i = 0; i < max; i++) {\n        //java.log(\"i的值:\"+i)\n        let list = sendAjaxForGetChapters(i * limit);\n        //取出每个值\n        returnList = returnList.concat(list)\n    }\n    return returnList\n}\n\nfunction aloneHandler() {\n    return [{title: book.name, chapterUrl: baseUrl}]\n}\n\n(() => {\n    let res = JSON.parse(result).body\n    if (res.seriesNavData === null || res.seriesNavData === undefined) {\n        return aloneHandler()\n    }\n    return seriesHandler(res)\n})()",
            "chapterName": "title",
            "chapterUrl": "chapterUrl"
        },
        "searchUrl": "@js:\njava.put(\"page\",page);java.put(\"key\",key);\n`https://www.pixiv.net/ajax/search/novels/${encodeURI(key)}?word=${encodeURI(key)}&order=date_d&mode=all&p=${page}&s_mode=s_tag&lang=zh`;",
        "variableComment": "",
        "weight": 0
    },
    {
        "bookSourceComment": "Pixiv 系列小说书源（更新时间：2024-09-04）\n\n可用功能：✅搜索系列小说✅添加链接✅订阅源\n搜索小说：✅系列小说名称✅作者名称✅小说标签\n添加网址：✅Pixiv小说链接✅Pixiv系列小说链接\n订阅用法：点击订阅源打开小说/系列小说，【刷新】，点击【加入书架】按钮添加小说到书架\n\n书源发布：兽人阅读频道 https://t.me/FurryReading\n项目地址：https://github.com/windyhusky/PixivSource\n规则订阅：https://cdn.jsdelivr.net/gh/windyhusky/PixivSource@main/pixiv.json\nhttps://raw.githubusercontent.com/windyhusky/PixivSource/main/pixiv.json",
        "bookSourceGroup": "🔞 Pixiv",
        "bookSourceName": "Pixiv 系列小说",
        "bookSourceType": 0,
        "bookSourceUrl": "https://www.pixiv.net/novel",
        "bookUrlPattern": "(https?://)?(www\\.)?pixiv\\.net(/ajax)?/novel/(show\\.php\\?id=|series/)?\\d+",
        "customOrder": 1,
        "enabled": true,
        "enabledCookieJar": true,
        "enabledExplore": false,
        "header": "{\"referer\":\"https://www.pixiv.net\"}",
        "lastUpdateTime": 1725938891123,
        "loginCheckJs": "var util = {}\n\nfunction objStringify(obj) {\n    return JSON.stringify(obj, (n, v) => {\n        if (typeof v == \"function\")\n            return v.toString();\n        return v;\n    });\n}\n\nfunction publicFunc() {\n    let u = {}\n\n    u.cacheGetAndSet = (key, supplyFunc) => {\n        let v = cache.get(key)\n        if (v === undefined || v === null) {\n            v = JSON.stringify(supplyFunc())\n            // 缓存10分钟\n            cache.put(key, v, 600)\n        }\n        return JSON.parse(v)\n    }\n    u.getAjaxJson = (url) => {\n        return util.cacheGetAndSet(url, () => {\n            return JSON.parse(java.ajax(url))\n        })\n    }\n    u.getWebviewJson = (url, parseFunc) => {\n        return util.cacheGetAndSet(url, () => {\n            let html = java.webView(null, url, null)\n            return JSON.parse(parseFunc(html))\n        })\n    }\n    u.debugFunc = (func) => {\n        if (String(source.getVariable()) === \"debug\") {\n            func()\n        }\n    }\n\n    u.urlNovelDetailed = (nid) => {\n        return `https://www.pixiv.net/ajax/novel/${nid}`\n    }\n    u.urlSeries = (seriesId) => {\n        return `https://www.pixiv.net/ajax/novel/series/${seriesId}?lang=zh`\n    }\n    u.urlSeriesNovels = (seriesId, limit, offset) => {\n        if (limit > 30) {\n            limit = 30\n        }\n\n        if (limit < 10) {\n            limit = 10\n        }\n\n        return `https://www.pixiv.net/ajax/novel/series_content/${seriesId}?limit=${limit}&last_order=${offset}&order_by=asc&lang=zh`\n    }\n    u.searchNovel = (novelName, page) =>{\n        return `https://www.pixiv.net/ajax/search/novels/${encodeURI(novelName)}?word=${encodeURI(novelName)}&order=date_d&mode=all&p=${page}&s_mode=s_tag&lang=zh`\n    }\n    // 完全匹配用户名\n    u.urlSearchUser = (username) => {\n        return `https://www.pixiv.net/search_user.php?s_mode=s_usr&nick=${encodeURI(username)}&nick_mf=1`\n    }\n    u.urlUserAllWorks = (uid) => {\n        return `https://www.pixiv.net/ajax/user/${uid}/profile/all?lang=zh`\n    }\n    u.urlUserNovels = (uid, nidList) => {\n        return `https://www.pixiv.net/ajax/user/${uid}/novels?${nidList.map(v => \"ids[]=\" + v).join(\"&\")}`\n    }\n\n    u.urlIllustDetailed = (illustId) => {\n        return `https://www.pixiv.net/ajax/illust/${illustId}?lang=zh`\n    }\n    u.urlSeriesIllusts = (seriesId) => {\n        return `https://www.pixiv.net/ajax/series/${seriesId}?p=1&lang=zh`\n    }\n    u.urlCoverUrl = (url) => {\n        return `${url},{\"headers\": {\"Referer\":\"https://www.pixiv.net/\"}}`\n    }\n    u.urlIllustOriginal = function (illustId, order) {\n        let illustOriginal = util.getAjaxJson(util.urlIllustDetailed(illustId)).body.urls.original\n        if (order >= 1) {\n            illustOriginal = illustOriginal.replace(`_p0`, `_p${order - 1}`)\n        }\n        return illustOriginal\n        }\n\n    u.formatNovels = function (novels) {\n        novels.forEach(novel => {\n            novel.detailedUrl = util.urlNovelDetailed(novel.id)\n            const time = this.dateFormat(novel.updateDate);\n            novel.tags = novel.tags.join(\",\")\n            novel.coverUrl = util.urlCoverUrl(novel.url)\n            novel.description += `\\n更新时间:${time}`\n        })\n        return novels\n    }\n\n    u.dateFormat = function (str) {\n        let addZero = function (num) {\n            return num < 10 ? '0' + num : num;\n        }\n\n        let time = new Date(str);\n        let Y = time.getFullYear() + \"年\";\n        let M = addZero(time.getMonth() + 1) + \"月\";\n        let D = addZero(time.getDate()) + \"日\";\n        return Y + M + D;\n    }\n\n\n    util = u\n    java.put(\"util\", objStringify(u))\n}\n\npublicFunc()\n\n// 获取请求的user id方便其他ajax请求构造\nlet uid = java.getResponse().headers().get(\"x-userid\")\nif (uid != null) {\n    cache.put(\"pixiv:uid\", uid)\n}\njava.getStrResponse(null, null)",
        "loginUrl": "https://accounts.pixiv.net/login",
        "respondTime": 180000,
        "ruleBookInfo": {
            "author": "author",
            "coverUrl": "coverUrl",
            "init": "@js:\nvar util = objParse(String(java.get(\"util\")))\n\nfunction objParse(obj) {\n    return JSON.parse(obj, (n, v) => {\n        if (typeof v == \"string\" && v.match(\"()\")) {\n            return eval(`(${v})`)\n        }\n        return v;\n    })\n}\n\n(function (res) {\n    // 获取网址id，请求并解析数据\n    let isHtml = result.startsWith(\"<!DOCTYPE html>\")\n    if (isHtml) {\n        var novelId = 0\n        let isSeries = baseUrl.match(new RegExp(\"pixiv.net/(ajax/|)novel/series\"))\n        if (isSeries) {\n            let seriesId = baseUrl.match(new RegExp(\"\\\\d+\"))[0]\n            java.log(`系列ID：${seriesId}`)\n            // 获取系列第一篇小说的 id\n            let url = util.urlSeriesNovels(seriesId, 30, 0)\n            res = util.cacheGetAndSet(url, () => {\n                return JSON.parse(java.ajax(url))\n            })\n            novelId = res.body.thumbnails.novel[0].id\n            java.log(`首篇小说ID：${novelId}`)\n            res = util.getAjaxJson(util.urlNovelDetailed(novelId)).body\n            // java.log(JSON.stringify(res))\n        } else {\n            let isNovel = baseUrl.match(new RegExp(\"pixiv.net/(ajax/|)novel\"))\n            if (isNovel) {\n                novelId = baseUrl.match(new RegExp(\"\\\\d+\"))[0]\n                java.log(`匹配小说ID：${novelId}`)\n                res = util.getAjaxJson(util.urlNovelDetailed(novelId)).body\n                // java.log(JSON.stringify(res))\n            } else {\n                return []\n            }\n        }\n    } else {\n        // 从搜索直接获取 json\n        res = JSON.parse(result).body\n        if (res.total === 0) {\n            return []\n        }\n    }\n    // java.log(JSON.stringify(res))\n    let info = {}\n    info.author = res.userName\n    info.name = res.title\n    info.tags = res.userNovels[`${res.id}`].tags\n    info.wordCount = res.wordCount\n    info.latestChapter = null\n    info.desc = res.description\n    info.coverUrl = res.coverUrl\n    info.catalogUrl = util.urlNovelDetailed(res.id)\n\n    if (res.seriesNavData === undefined || res.seriesNavData === null) {\n        info.name = res.title\n        info.catalog = util.urlNovelDetailed(res.id)\n        info.tags.unshift('单本')\n    } else {\n        info.name = res.seriesNavData.title\n        info.catalog = util.urlSeries(res.seriesNavData.id)\n        info.tags.unshift('长篇')\n    }\n    info.tags = info.tags.join(\",\")\n\n    return info\n})();",
            "intro": "desc",
            "kind": "tags",
            "name": "name",
            "tocUrl": "catalogUrl",
            "wordCount": "wordCount"
        },
        "ruleContent": {
            "content": "@js:\nvar util = objParse(String(java.get(\"util\")))\n\nfunction objParse(obj) {\n    return JSON.parse(obj, (n, v) => {\n        if (typeof v == \"string\" && v.match(\"()\")) {\n            return eval(`(${v})`)\n        }\n        return v;\n    })\n}\n\n(() => {\n    let res = JSON.parse(result).body\n    let content = res.content\n    // 在正文内部添加小说描述\n    if (res.seriesNavData !== undefined && res.seriesNavData !== null && res.description !== \"\") {\n        content = res.description + \"\\n\" + \"——————————\\n\".repeat(2) + content\n    }\n\n    // 获取 [uploadedimage:] 的图片链接\n    let hasEmbeddedImages = res.textEmbeddedImages !== undefined && res.textEmbeddedImages !== null\n    if (hasEmbeddedImages) {\n        Object.keys(res.textEmbeddedImages).forEach((key) => {\n            content = content.replace(`[uploadedimage:${key}]`, `<img src=\"${res.textEmbeddedImages[key].urls.original}\">`)\n        })\n    }\n\n    // 获取 [pixivimage:] 的图片链接 [pixivimage:1234] [pixivimage:1234-1]\n    let matched = content.match(RegExp(/\\[pixivimage:(\\d+)-?(\\d+)]/gm))\n    if (matched) {\n        for (let i in matched) {\n            let illustId, order\n            let matched2 = matched[i].match(RegExp(\"(\\\\d+)-?(\\\\d+)\"))\n            let temp = matched2[0].split(\"-\")\n            illustId = temp[0]\n            if (temp.length === 2){\n                order = temp[1]\n            }\n            content = content.replace(`${matched[i]}`, `<img src=\"${util.urlIllustOriginal(illustId, order)}\">`)\n        }\n    }\n\n    // 替换 Pixiv 分页标记符号 [newpage]\n    matched = content.match(RegExp(/[ 　]*\\[newpage][ 　]*/gm))\n    if (matched) {\n        for (let i in matched){\n            java.log(matched[i])\n            content = content.replace(`${matched[i]}`, `${\"<p>​<p/>\".repeat(3)}`)\n        }\n    }\n\n    // 替换 Pixiv 章节标记符号 [chapter:]\n    matched = content.match(RegExp(/\\[chapter:(.*?)]/gm))\n    if (matched) {\n        for (let i in matched) {\n            let matched2 = matched[i].match(/\\[chapter:(.*?)]/m)\n            let chapter = matched2[1].trim()\n            content = content.replace(`${matched[i]}`, `${chapter}<p>​<p/>`)\n        }\n    }\n\n    // 替换 Pixiv 跳转页面标记符号 [[jump:]]\n    matched = content.match(RegExp(/\\[jump:(\\d+)]/gm))\n    if (matched) {\n        for (let i in matched) {\n            let page = matched[i].match(/\\d+/)\n            content = content.replace(`${matched[i]}`, `\\n\\n跳转至第${page}节`)\n        }\n    }\n\n    // 替换 Pixiv 链接标记符号 [[jumpuri: > ]]\n    matched = content.match(RegExp(/\\[\\[jumpuri:(.*?)>(.*?)]]/gm))\n    if (matched) {\n        for (let i in matched) {\n            let matched2 = matched[i].match(/\\[\\[jumpuri:(.*?)>(.*?)]]/m)\n            let matchedText = matched2[0]\n            let urlName = matched2[1].trim()\n            let urlLink = matched2[2].trim()\n            // 阅读不支持超链接\n            //content = content.replace(`${matchedText}`, `<a href=${urlLink}>${urlName}</a>`)\n            if (urlLink === urlName) {\n                content = content.replace(`${matchedText}`, `${urlName}`)\n            } else {\n                content = content.replace(`${matchedText}`, `${urlName}: ${urlLink}`)\n            }\n        }\n    }\n\n    // 替换 Pixiv 注音标记符号 [[rb: > ]]\n    matched = content.match(RegExp(/\\[\\[rb:(.*?)>(.*?)]]/gm))\n    if (matched) {\n        for (let i in matched) {\n            let matched2 = matched[i].match(/\\[\\[rb:(.*?)>(.*?)]]/m)\n            let matchedText = matched2[0]\n            let kanji = matched2[1].trim()\n            let kana = matched2[2].trim()\n            // kana为中文，则替换回《书名号》\n            var reg = new RegExp(\"[\\\\u4E00-\\\\u9FFF]+\",\"g\");\n            if (reg.test(kana)) {\n                content = content.replace(`${matchedText}`, `${kanji}《${kana}》`)\n            } else{\n                // 阅读不支持 <ruby> <rt> 注音\n                // content = content.replace(`${matchedText}`, `<ruby>${kanji}<rt>${kana}</rt></ruby>`)\n                content = content.replace(`${matchedText}`, `${kanji}（${kana}）`)\n            }\n        }\n    }\n\n    return content\n})()\n",
            "imageStyle": "DEFAULT"
        },
        "ruleExplore": {},
        "ruleSearch": {
            "author": "userName",
            "bookList": "@js:\nvar util = objParse(String(java.get(\"util\")))\n\nfunction objParse(obj) {\n    return JSON.parse(obj, (n, v) => {\n        if (typeof v == \"string\" && v.match(\"()\")) {\n            return eval(`(${v})`)\n        }\n        return v;\n    })\n}\n\n//不可使用 base 内的 util.getAjaxJson() 替换\nfunction getAjaxJson(url) {\n    return util.cacheGetAndSet(url, () => {\n        return JSON.parse(java.ajax(url))\n    })\n}\n\nfunction getWebviewJson(url, parseFunc) {\n    return util.cacheGetAndSet(url, () => {\n        let html = java.webView(null, url, null)\n        return JSON.parse(parseFunc(html))\n    })\n}\n\nvar first = true;\n// 存储seriesID·\nvar seriesSet = {\n    keywords: \"Pixiv:Search\",\n    has: (value) => {\n        let page = Number(java.get(\"page\"))\n        if (page === 1 && first) {\n            first = false\n            cache.deleteMemory(this.keywords)\n            return false\n        }\n\n        let v = cache.getFromMemory(this.keywords)\n        if (v === undefined || v === null) {\n            return false\n        }\n        let set = new Set(JSON.parse(v))\n        return set.has(value)\n    },\n\n    add: (value) => {\n        let v = cache.getFromMemory(this.keywords)\n        if (v === undefined || v === null) {\n            cache.putMemory(this.keywords, JSON.stringify([value]))\n\n        } else {\n            let arr = JSON.parse(v)\n            if (typeof arr === \"string\") {\n                arr = Array(arr)\n            }\n            arr.push(value)\n            cache.putMemory(this.keywords, JSON.stringify(arr))\n        }\n    },\n};\n\n// 将多个长篇小说解析为一本书\nfunction combineNovels(novels) {\n    return novels.filter(novel => {\n        //单本直接解析为一本书\n        if (novel.seriesId === undefined || novel.seriesId === null) {\n            return true\n        }\n\n        //集合中没有该系列解析为一本书\n        if (!seriesSet.has(novel.seriesId)) {\n            seriesSet.add(novel.seriesId)\n            return true\n        }\n\n        return false\n    })\n}\n\n//处理novels列表\n//查询作者\nfunction handNovels(novels) {\n    novels.forEach(novel => {\n        if (novel.tags === undefined || novel.tags === null) {\n            novel.tags = []\n        }\n        // 最大化使用搜索活得的数据\n        novel.textCount = novel.publishedWordCount\n        novel.url = novel.cover.urls[\"480mw\"]\n        novel.description = novel.caption\n        // novel.tags = novel.tags\n\n        if (novel.isOneshot !== false) {\n            // novel.isOneshot === true 单篇小说\n            novel.seriesId = undefined\n            novel.id = novel.novelId\n            novel.name = novel.latestChapter = novel.title\n            novel.tags.unshift(\"单本\")\n\n        } else {\n            // novel.isOneshot === false 则为 series 系列小说\n            novel.seriesId = novel.id\n            // novel.id = novel.latestEpisodeId  //\n            novel.name = novel.title\n            novel.textCount = novel.publishedWordCount\n\n            let userAllWorks = getAjaxJson(util.urlUserAllWorks(novel.userId)).body\n            for (let series of userAllWorks.novelSeries) {\n                if (series.id === novel.seriesId) {\n                    let series = getAjaxJson(util.urlSeries(novel.seriesId)).body\n                    novel.id = series.firstNovelId\n                    // novel.textCount = series.publishedTotalCharacterCount\n                    // novel.url = series.cover.urls[\"480mw\"]\n                    // novel.title = series.title\n                    // novel.tags = series.tags\n                    // novel.description = series.caption\n\n                    // 发送请求获取第一章 获取标签与简介\n                    if (novel.tags.length === 0 || novel.description === \"\") {\n                        let firstNovel = getAjaxJson(util.urlNovelDetailed(series.firstNovelId)).body\n                        if (novel.tags.length === 0) {\n                            novel.tags = firstNovel.tags.tags.map(item => item.tag)\n                        }\n\n                        if (novel.description === \"\") {\n                            novel.description = firstNovel.description\n                        }\n                    }\n\n                    novel.tags.unshift(\"长篇\")\n                    break\n                }\n            }\n        }\n    })\n    util.debugFunc(() => {\n        java.log(`处理小说完成`)\n    })\n    return novels\n}\n\nfunction isLogin() {\n    let cookie = String(java.getCookie(\"https://www.pixiv.net/\", null))\n    return typeof cookie === \"string\" && cookie !== \"\"\n}\n\nfunction getUserNovels(username) {\n    if (!isLogin()) {\n        return []\n    }\n\n    let html = java.ajax(util.urlSearchUser(username))\n    // java.log(html)\n    // 仅匹配有投稿作品的用户\n    let match = html.match(new RegExp(\"/users/\\\\d+/novels\"))\n    if (match === null || match.length === 0) {\n        return []\n    }\n\n    let regNumber = new RegExp(\"\\\\d+\")\n    let uidList = match.map(v => {\n        return v.match(regNumber)[0]\n    })\n\n    // 仅限3个作者\n    if (uidList.length >= 3) {\n        uidList.length = 3\n    }\n\n    let novels = []\n    let page = Number(java.get(\"page\"))\n\n    uidList.forEach(id => {\n        let r = getAjaxJson(util.urlUserAllWorks(id))\n        let novelsId = Object.keys(r.body.novels).reverse().slice((page - 1) * 20, page * 20)\n        let url = util.urlUserNovels(id, novelsId)\n        util.debugFunc(() => {\n            java.log(`发送获取作者小说的Ajax请求:${url}`)\n        })\n        let userNovels = getWebviewJson(url, html => {\n            return (html.match(new RegExp(\">\\\\{.*?}<\"))[0].replace(\">\", \"\").replace(\"<\", \"\"))\n        }).body\n        // 获取对应的小说 该序列是按照id排序\n        // 反转以按照更新时间排序\n        novels = novels.concat(Object.values(userNovels).reverse())\n    })\n\n\n    util.debugFunc(() => {\n        java.log(`获取用户搜索小说结束`)\n    })\n    return novels\n}\n\n(() => {\n    //作者 TAG 书名都要支持\n    let resp = JSON.parse(result);\n    let novelsList = getUserNovels(String(java.get(\"key\")))\n    novelsList = novelsList.concat(resp.body.novel.data)\n    // return util.formatNovels(handNovels(combineNovels(novelsList)))\n    return util.formatNovels(handNovels(novelsList))\n})();",
            "bookUrl": "detailedUrl",
            "coverUrl": "coverUrl",
            "intro": "description",
            "kind": "tags",
            "lastChapter": "latestChapter",
            "name": "title",
            "wordCount": "textCount"
        },
        "ruleToc": {
            "chapterList": "@js:\nvar util = objParse(String(java.get(\"util\")))\n\nfunction objParse(obj) {\n    return JSON.parse(obj, (n, v) => {\n        if (typeof v == \"string\" && v.match(\"()\")) {\n            return eval(`(${v})`)\n        }\n        return v;\n    })\n}\n\nfunction seriesHandler(res) {\n    const limit = 30\n    let returnList = [];\n    let seriesID = res.seriesNavData.seriesId\n    let allChaptersCount = (() => {\n        let result = util.cacheGetAndSet(util.urlSeries(seriesID), () => {\n            return util.getAjaxJson(util.urlSeries(seriesID))\n        }).body.total\n        util.debugFunc(() => {\n            java.log(`本目录一共有:${result} 章节`);\n        })\n        return result;\n    })();\n\n    //发送请求获得相应数量的目录列表\n    function sendAjaxForGetChapters(lastIndex) {\n        let url = util.urlSeriesNovels(seriesID, limit, lastIndex)\n        res = util.cacheGetAndSet(url, () => {\n            return util.getAjaxJson(url)\n        })\n        res = res.body.page.seriesContents\n        res.forEach(v => {\n            v.chapterUrl = util.urlNovelDetailed(v.id)\n        })\n        return res;\n    }\n\n    //逻辑控制者 也就是使用上面定义的两个函数来做对应功能\n    //要爬取的总次数\n    let max = (allChaptersCount / limit) + 1\n    for (let i = 0; i < max; i++) {\n        //java.log(\"i的值:\"+i)\n        let list = sendAjaxForGetChapters(i * limit);\n        //取出每个值\n        returnList = returnList.concat(list)\n    }\n    return returnList\n}\n\nfunction aloneHandler() {\n    return [{title: book.name, chapterUrl: baseUrl}]\n}\n\n(() => {\n    let res = JSON.parse(result).body\n    if (res.seriesNavData === null || res.seriesNavData === undefined) {\n        return aloneHandler()\n    }\n    return seriesHandler(res)\n})()",
            "chapterName": "title",
            "chapterUrl": "chapterUrl"
        },
        "searchUrl": "@js:\njava.put(\"page\",page);java.put(\"key\",key);\n`https://www.pixiv.net/ajax/search/novels/${encodeURI(key)}?word=${encodeURI(key)}&order=date_d&mode=all&p=${page}&s_mode=s_tag&gs=1&lang=zh`;",
        "weight": 0
    },
    {
        "bookSourceComment": "Linpx 书源（更新时间：2024-10-08）\n\n可用功能：✅搜索✅发现✅添加网址✅订阅源\n搜索小说：✅小说名称❌作者名称✅小说标签\n发现小说：❌推荐作者✅最近更新\n添加网址：✅Linpx小说链接(✅分享链接✅原链接)\n订阅用法：点击订阅源打开小说，点击【添加到书架】按钮添加小说到书架\n温馨提示：⚠️ Linpx 的系列小说 api 目前不会返回小说id，添加系列小说后，无法获取目录\n\n书源发布：兽人阅读频道 https://t.me/FurryReading\n项目地址：https://github.com/windyhusky/PixivSource\n规则订阅：\nhttps://cdn.jsdelivr.net/gh/windyhusky/PixivSource@main/linpx.json\nhttps://raw.githubusercontent.com/windyhusky/PixivSource/main/linpx.json",
        "bookSourceGroup": "🔞 Pixiv",
        "bookSourceName": "Linpx",
        "bookSourceType": 0,
        "bookSourceUrl": "https://furrynovel.ink",
        "bookUrlPattern": "(https?://)?(api\\.|www\\.)?(furrynovel\\.(ink|xyz))/(pn|pixiv/novel)/\\d+(/cache)?",
        "customOrder": 2,
        "enabled": true,
        "enabledCookieJar": false,
        "enabledExplore": true,
        "exploreUrl": "[\n  {\n    \"title\": \"推荐作者\",\n    \"url\": \"https://api.furrynovel.ink/fav/user/cache\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\":0.3\n    }\n  },\n  {\n    \"title\": \"最新小说\",\n    \"url\": \"https://api.furrynovel.ink/pixiv/novels/recent/cache?page={{page}}\",\n    \"style\": {\n      \"layout_flexGrow\": 1,\n      \"layout_flexBasisPercent\":0.3\n    }\n  }\n]",
        "header": "{\"referer\":\"https://furrynovel.ink/\"}",
        "lastUpdateTime": 1728398617323,
        "loginCheckJs": "var util = {}\n\nfunction objStringify(obj) {\n    return JSON.stringify(obj, (n, v) => {\n        if (typeof v == \"function\")\n            return v.toString();\n        return v;\n    });\n}\n\nfunction publicFunc() {\n    let u = {}\n\n    u.cacheGetAndSet = function (key, supplyFunc) {\n        let v = cache.get(key)\n        if (v === undefined || v === null) {\n            v = JSON.stringify(supplyFunc())\n            // 缓存10分钟\n            cache.put(key, v, 600)\n        }\n        return JSON.parse(v)\n    }\n    u.getAjaxJson = function (url) {\n        return util.cacheGetAndSet(url, () => {\n            return JSON.parse(java.ajax(url))\n        })\n    }\n    u.getWebviewJson = function (url) {\n        return util.cacheGetAndSet(url, () => {\n            let html = java.webView(null, url, null)\n            return JSON.parse((html.match(new RegExp(\">\\\\[\\\\{.*?}]<\"))[0].replace(\">\", \"\").replace(\"<\", \"\")))\n        })\n    }\n\n\n    u.debugFunc = (func) => {\n        if (String(source.getVariable()) === \"debug\") {\n            func()\n        }\n    }\n\n    u.urlNovelUrl = function (id){\n        return `https://api.furrynovel.ink/pixiv/novel/${id}/cache`\n    }\n    u.urlSeriesUrl = function (id){\n        return `https://api.furrynovel.ink/pixiv/series/${id}/cache`\n    }\n    u.urlUserUrl = function (id) {\n        return `https://api.furrynovel.ink/pixiv/user/${id}/cache`\n    }\n    u.urlSearchNovel = function (novelname) {\n        return `https://api.furrynovel.ink/pixiv/search/novel/${novelname}/cache`\n    }\n    u.urlSearchUsers = function (username) {\n        return `https://api.furrynovel.ink/pixiv/search/user/${username}/cache`\n    }\n    u.urlNovelsDetailed = function (nidList) {\n        return `https://api.furrynovel.ink/pixiv/novels/cache?${nidList.map(v => \"ids[]=\" + v).join(\"&\")}`\n    }\n    u.urlUserDetailed = function (uidList) {\n        return `https://api.furrynovel.ink/pixiv/users/cache?${uidList.map(v => \"ids[]=\" + v).join(\"&\")}`\n    }\n    u.urlCoverUrl = function (pxImgUrl) {\n        return `https://pximg.furrynovel.ink/?url=${pxImgUrl}&w=800`\n    }\n    u.urlIllustOriginal = function (illustId, order) {\n        // 使用 pixiv.cat 获取插图\n        let illustOriginal = `https://pixiv.re/${illustId}.png`\n        // let illustOriginal = `https://pixiv.nl/${illustId}.png`\n        if (order >= 1) {\n            illustOriginal = `https://pixiv.re/${illustId}-${order}.png`\n            // illustOriginal = `https://pixiv.nl/${illustId}-${order}.png`\n        }\n        return illustOriginal\n    }\n\n    util = u\n    java.put(\"util\", objStringify(u))\n}\n\npublicFunc()\n\n// 获取请求的user id方便其他ajax请求构造\nlet uid = java.getResponse().headers().get(\"x-userid\")\nif (uid != null) {\n    cache.put(\"pixiv:uid\", uid)\n}\njava.getStrResponse(null, null)",
        "loginUrl": "",
        "respondTime": 180000,
        "ruleBookInfo": {
            "author": "author",
            "coverUrl": "cover_url",
            "init": "@js:\nvar util = objParse(String(java.get(\"util\")))\n\nfunction objParse(obj) {\n    return JSON.parse(obj, (n, v) => {\n        if (typeof v == \"string\" && v.match(\"()\")) {\n            return eval(`(${v})`)\n        }\n        return v;\n    })\n}\n\n(function (res) {\n    result = {} //兼容搜索 for 循环\n    result.novels = []\n    // java.log(JSON.stringify(res))\n    let isHtml = res.startsWith(\"<!DOCTYPE html>\")\n    if (isHtml) {\n        let matchResult = baseUrl.match(new RegExp(\"pn|pixiv/novel|pixiv.net/novel\"))\n        if (matchResult == null) {\n            return []\n        }\n        let id = baseUrl.match(new RegExp(\"\\\\d+\"))[0]\n        java.log(`匹配小说ID：${id}`)\n        // res = util.getAjaxJson(util.urlNovelUrl(id))\n        result.novels.push(util.getAjaxJson(util.urlNovelUrl(id)))\n    } else {\n        // 兼容 api 链接\n        let isApiJson = baseUrl.match(new RegExp(\"pn|pixiv/novel|pixiv.net/novel\"))\n        if (isApiJson && typeof(JSON.parse(res)) === \"object\") {\n            result.novels.push(JSON.parse(res))\n        } else {\n            result = JSON.parse(res)\n            if (result.total === 0) {\n                return []\n            }\n        }\n    }\n\n\n    // api更新后，需要使用 for 循环\n    for (let i in result.novels) {\n        res = result.novels[i]\n        let prop = {}\n        //为了兼顾导入书架直接走详情页逻辑\n        //这里不能直接用book.xxx 来复用搜索页处理结果\n        prop.author = res.userName\n        prop.tags = res.tags\n        prop.count = res.length\n        prop.desc = res.desc\n        prop.cover_url = util.urlCoverUrl(res.coverUrl)\n\n        if (res.series === undefined || res.series === null) {\n            prop.name = res.title\n            prop.tags.unshift('单本')\n            // prop.catalog = `https://api.furrynovel.ink/pixiv/novel/${res.id}/cache`\n            prop.catalog = util.urlNovelUrl(res.id)\n\n        } else {\n            prop.name = res.series.title\n            prop.tags.unshift('长篇')\n            // prop.catalog = `https://api.furrynovel.ink/pixiv/series/${res.series.id}/cache`\n            prop.catalog = util.urlSeriesUrl(res.series.id)\n        }\n        prop.tags = prop.tags.join(\",\")\n        return prop\n    }\n})(result)\n",
            "intro": "desc",
            "kind": "tags",
            "lastChapter": "latest_chapter",
            "name": "name",
            "tocUrl": "catalog",
            "wordCount": "count"
        },
        "ruleContent": {
            "content": "@js:\nvar util = objParse(String(java.get(\"util\")))\n\nfunction objParse(obj) {\n    return JSON.parse(obj, (n, v) => {\n        if (typeof v == \"string\" && v.match(\"()\")) {\n            return eval(`(${v})`)\n        }\n        return v;\n    })\n}\n\n(function (res) {\n    res = JSON.parse(res)\n    let content = res.content\n    if (res.series !== null && res.desc !== undefined && res.desc !== \"\") {\n        content = res.desc + \"\\n\" + \"——————————\\n\".repeat(2) + content\n    }\n\n    // 获取 [uploadedimage:] 的图片链接\n    //将存在的pixiv图片链接替换为可访问的直连\n    if (res.images !== undefined && res.images !== null) {\n        Object.keys(res.images).forEach((key) => {\n            content = content.replace(`[uploadedimage:${key}]`, `<img src=\"${util.urlCoverUrl(res.images[key].origin)}\">`)\n        })\n    }\n\n    // 获取 [pixivimage:] 的图片链接 [pixivimage:1234] [pixivimage:1234-1]\n    let matched = content.match(RegExp(/\\[pixivimage:(\\d+)-?(\\d+)]/gm))\n    if (matched) {\n        for (let i in matched) {\n            let illustId, order\n            let matched2 = matched[i].match(RegExp(\"(\\\\d+)-?(\\\\d+)\"))\n            let temp = matched2[0].split(\"-\")\n            illustId = temp[0]\n            if (temp.length >= 1) {\n                order = temp[1]\n            }\n            content = content.replace(`${matched[i]}`, `<img src=\"${util.urlIllustOriginal(illustId, order)}\">`)\n        }\n    }\n\n    // 替换 Pixiv 分页标记符号 [newpage]\n    matched = content.match(RegExp(/[ 　]*\\[newpage][ 　]*/gm))\n    if (matched) {\n        for (let i in matched){\n            java.log(matched[i])\n            content = content.replace(`${matched[i]}`, `${\"<p>​<p/>\".repeat(3)}`)\n        }\n    }\n\n    // 替换 Pixiv 章节标记符号 [chapter:]\n    matched = content.match(RegExp(/\\[chapter:(.*?)]/gm))\n    if (matched) {\n        for (let i in matched) {\n            let matched2 = matched[i].match(/\\[chapter:(.*?)]/m)\n            let chapter = matched2[1].trim()\n            // content = content.replace(`${matched[i]}`, `${\"<p>​<p/>\".repeat(3)}${chapter}<p>​<p/>`)\n            content = content.replace(`${matched[i]}`, `${chapter}<p>​<p/>`)\n        }\n    }\n\n    // 替换 Pixiv 跳转页面标记符号 [[jump:]]\n    matched = content.match(/\\[jump:(\\d+)]/gm)\n    if (matched) {\n        for (let i in matched) {\n            let page = matched[i].match(/\\d+/)\n            content = content.replace(`${matched[i]}`, `\\n\\n跳转至第${page}节`)\n        }\n    }\n\n    // 替换 Pixiv 链接标记符号 [[jumpuri: > ]]\n    matched = content.match(/\\[\\[jumpuri:(.*?)>(.*?)]]/gm)\n    if (matched) {\n        for (let i in matched) {\n            let matched2 = matched[i].match(/\\[\\[jumpuri:(.*?)>(.*?)]]/m)\n            let matchedText = matched2[0]\n            let urlName = matched2[1].trim()\n            let urlLink = matched2[2].trim()\n            // 阅读不支持超链接\n            //content = content.replace(`${matchedText}`, `<a href=${urlLink}>${urlName}</a>`)\n            if (urlLink === urlName) {\n                content = content.replace(`${matchedText}`, `${urlName}`)\n            } else {\n                content = content.replace(`${matchedText}`, `${urlName}: ${urlLink}`)\n            }\n        }\n    }\n\n    // 替换 Pixiv 注音标记符号 [[rb: > ]]\n    matched = content.match(/\\[\\[rb:(.*?)>(.*?)]]/gm)\n    if (matched) {\n        for (let i in matched) {\n            let matched2 = matched[i].match(/\\[\\[rb:(.*?)>(.*?)]]/m)\n            let matchedText = matched2[0]\n            let kanji = matched2[1].trim()\n            let kana = matched2[2].trim()\n            // kana为中文，则替换回《书名号》\n            var reg = new RegExp(\"[\\\\u4E00-\\\\u9FFF]+\",\"g\");\n            if (reg.test(kana)) {\n                content = content.replace(`${matchedText}`, `${kanji}《${kana}》`)\n            } else{\n                // 阅读不支持 <ruby> <rt> 注音\n                // content = content.replace(`${matchedText}`, `<ruby>${kanji}<rt>${kana}</rt></ruby>`)\n                content = content.replace(`${matchedText}`, `${kanji}（${kana}）`)\n            }\n        }\n    }\n\n    return content\n})(result)",
            "imageStyle": "DEFAULT",
            "replaceRegex": "",
            "sourceRegex": ""
        },
        "ruleExplore": {
            "author": "userName",
            "bookList": "@js:\nvar util = objParse(String(java.get(\"util\")))\n\nfunction objParse(obj) {\n    return JSON.parse(obj, (n, v) => {\n        if (typeof v == \"string\" && v.match(\"()\")) {\n            return eval(`(${v})`)\n        }\n        return v;\n    })\n}\n\n// 存储seriesID\nvar seriesSet = new Set();\n// 将多个长篇小说解析为一本书\nfunction combineNovels(novels) {\n    return novels.filter(novel => {\n        //单本直接解析为一本书\n        //需要判断是否为null\n        if (novel.seriesId === undefined || novel.seriesId === null) {\n            return true\n        }\n\n        //集合中没有该系列解析为一本书\n        if (!seriesSet.has(novel.seriesId)) {\n            seriesSet.add(novel.seriesId)\n            return true\n        }\n\n        return false\n    })\n}\n\n// 将小说的封面规则与详情地址替换\nfunction handlerNovels(novels) {\n    novels.forEach(novel => {\n        // novel.detailedUrl = `https://api.furrynovel.ink/pixiv/novel/${novel.id}/cache`\n        novel.detailedUrl = util.urlNovelUrl(novel.id)\n        if (novel.seriesId !== undefined && novel.seriesId !== null) {\n            novel.title = novel.seriesTitle\n            novel.length = null\n\n            java.log(`正在获取系列小说：${novel.seriesId}`)\n            let series = util.getAjaxJson(util.urlSeriesUrl(novel.seriesId))\n            // 后端目前没有系列的coverUrl字段\n            // novel.coverUrl = `https://api.furrynovel.ink/proxy/pximg?url=${series.imageUrl}`\n            // novel.coverUrl = `https://api.furrynovel.ink/proxy/pximg?url=${series.novels[0].coverUrl}`\n            novel.coverUrl = util.urlCoverUrl(series.novels[0].coverUrl)\n\n            if (series.caption === \"\") {\n                let firstNovels = util.getAjaxJson(util.urlNovelsDetailed([series.novels[0].id]))\n                if (firstNovels.length > 0) {\n                    novel.desc = firstNovels[0].desc\n                } else {\n                    novel.desc = \"该小说可能部分章节因为权限或者被删除无法查看\"\n                }\n            } else {\n                novel.desc = series.caption\n            }\n\n            //如果没有标签 取第一章的tag\n            if (series.tags.length === 0) {\n                // 系列至少会有一章\n                novel.tags = series.novels[0].tags\n            } else {\n                novel.tags = series.tags\n            }\n\n            if (novel.tags === undefined) {\n                novel.tags = []\n            }\n            novel.tags.unshift(\"长篇\")\n\n\n        } else {\n            novel.tags.unshift(\"单本\")\n            // novel.coverUrl = `https://api.furrynovel.ink/proxy/pximg?url=${novel.coverUrl}`\n            novel.coverUrl = util.urlCoverUrl(novel.coverUrl)\n        }\n\n        novel.tags = novel.tags.join(\",\")\n    })\n    return novels\n}\n\n/**\n * @params arr 传入的源数组\n * @params length 需要获取的元素的个数\n */\nfunction randomChoseArrayItem(arr, length) {\n    let copyArr = JSON.parse(JSON.stringify(arr))\n    let newArr = [];\n    for (let i = 0; i < length; i++) {\n        let index = Math.floor(Math.random() * copyArr.length);\n        let item = copyArr[index];\n        newArr.push(item)\n        copyArr.splice(index, 1)\n    }\n    return newArr.reverse()\n}\n\n\nfunction handlerRecommendUsers() {\n    const MAX_FETCH_USER_NUMBER = 2;\n\n    return () => {\n        let novelList = []\n        let userIds = JSON.parse(result).map(i => i.id)\n        // java.log(`用户id个数:${userIds.length}`)\n        if (userIds.length > MAX_FETCH_USER_NUMBER) {\n            userIds = randomChoseArrayItem(userIds, MAX_FETCH_USER_NUMBER);\n        }\n\n        // java.log(`查询的用户Ids:${userIds}`)\n\n        let usersInfo = util.getWebviewJson(util.urlUserDetailed(userIds))\n        // java.log(`返回的${JSON.stringify(usersInfo)}`)\n        let queryNovelIds = []\n        // java.log(`${JSON.stringify(usersInfo)}`)\n        usersInfo.filter(user => user.novels && user.novels.length > 0)\n            .map(user => user.novels)\n            // 将list展平[1,2,3]变为1,2,3 添加到novelList中\n            .forEach(novels => {\n                novels.forEach(novel => {\n                    queryNovelIds.push(novel)\n                })\n            })\n        // 暂时限制最大获取数量\n        if (queryNovelIds.length > 10) {\n            queryNovelIds = randomChoseArrayItem(queryNovelIds, 10)\n        }\n        novelList = util.getWebviewJson(util.urlNovelsDetailed(queryNovelIds))\n        return handlerNovels(combineNovels(novelList))\n    }\n}\n\nfunction handlerFollowLatest() {\n    return () => {\n        let resp = JSON.parse(result)\n        return handlerNovels(combineNovels(resp))\n    }\n}\n\nfunction handlerFactory() {\n    if (baseUrl.indexOf(\"/fav/user\") !== -1) {\n        return handlerRecommendUsers()\n    }\n\n    if (baseUrl.indexOf(\"/pixiv/novels/recent\") !== -1) {\n        return handlerFollowLatest()\n    }\n\n}\n\n(() => {\n    return handlerFactory()()\n})()\n",
            "bookUrl": "detailedUrl",
            "coverUrl": "coverUrl",
            "intro": "desc",
            "kind": "tags",
            "lastChapter": "",
            "name": "title",
            "wordCount": "length"
        },
        "ruleSearch": {
            "author": "userName",
            "bookList": "@js:\nvar util = objParse(String(java.get(\"util\")))\n\nfunction objParse(obj) {\n    return JSON.parse(obj, (n, v) => {\n        if (typeof v == \"string\" && v.match(\"()\")) {\n            return eval(`(${v})`)\n        }\n        return v;\n    })\n}\n\nfunction cacheGetAndSet(key, supplyFunc) {\n    let v = cache.get(key)\n    if (v === undefined || v === null) {\n        v = JSON.stringify(supplyFunc())\n        // 缓存10分钟\n        cache.put(key, v, 600)\n    }\n    return JSON.parse(v)\n}\n\nfunction getAjaxJson(url) {\n    return cacheGetAndSet(url, () => {\n        return JSON.parse(java.ajax(url))\n    })\n}\n\nfunction getWebviewJson(url) {\n    return cacheGetAndSet(url, () => {\n        let html = java.webView(null, url, null)\n        // todo：搜索作者有问题\n        return JSON.parse((html.match(new RegExp(\">\\\\[\\{.*?}]<\"))[0].replace(\">\", \"\").replace(\"<\", \"\")))\n    })\n}\n\n\nfunction getUser(username, exactMatch) {\n    // 修复传入object的bug\n    username = String(username)\n    let resp = getAjaxJson(util.urlSearchUsers(username))\n    if (resp.users.length === 0) {\n        return []\n    }\n    if (!exactMatch) {\n        return resp.users\n    }\n    // 只返回用户名完全一样的用户\n    return resp.users.filter(user => {\n        return user.name === username\n    })\n}\n\n// 包含所有小说数据\nfunction getUserDetailedList(uidList) {\n    // java.log(`UIDLIST:${JSON.stringify(uidList)}`)\n    return getWebviewJson(util.urlUserDetailed(uidList))\n}\n\nfunction getNovels(nidList) {\n    let page = Number(java.get(\"page\"))\n    // 分页\n    let list = nidList.slice((page - 1) * 20, page * 20)\n    if (list.length === 0) {\n        return []\n    }\n\n    // java.log(`NIDURL:${util.urlNovelsDetailed(list)}`)\n    return getWebviewJson(util.urlNovelsDetailed(list))\n}\n\n// 存储seriesID\nvar first = true;\nvar seriesSet = {\n    keywords: \"Linpx:Search\",\n    has: (value) => {\n        let page = Number(java.get(\"page\"))\n        if (page === 1 && first) {\n            first = false\n            cache.deleteMemory(this.keywords)\n            return false\n        }\n\n        let v = cache.getFromMemory(this.keywords)\n        if (v === undefined || v === null) {\n            return false\n        }\n        let set = new Set(JSON.parse(v))\n        return set.has(value)\n    },\n\n    add: (value) => {\n        let v = cache.getFromMemory(this.keywords)\n        if (v === undefined || v === null) {\n            cache.putMemory(this.keywords, JSON.stringify([value]))\n\n        } else {\n            let arr = JSON.parse(v)\n            if (typeof arr === \"string\") {\n                arr = Array(arr)\n            }\n            arr.push(value)\n            cache.putMemory(this.keywords, JSON.stringify(arr))\n        }\n    },\n};\n\n// 将多个长篇小说解析为一本书\nfunction combineNovels(novels) {\n    return novels.filter(novel => {\n        //单本直接解析为一本书\n        //需要判断是否为null\n        if (novel.seriesId === undefined || novel.seriesId === null) {\n            return true\n        }\n\n        //集合中没有该系列解析为一本书\n        if (!seriesSet.has(novel.seriesId)) {\n            seriesSet.add(novel.seriesId)\n            return true\n        }\n\n        return false\n    })\n}\n\n// 将小说的封面规则与详情地址替换\nfunction formatNovels(novels) {\n    novels.forEach(novel => {\n        // novel.detailedUrl = `https://api.furrynovel.ink/pixiv/novel/${novel.id}`\n        novel.detailedUrl = util.urlNovelUrl(novel.id)\n        if (novel.seriesId !== undefined && novel.seriesId !== null) {\n            novel.title = novel.seriesTitle\n            novel.length = null\n\n            let series = getAjaxJson(util.urlSeriesUrl(novel.seriesId))\n            // 后端目前没有系列的coverUrl字段\n            // novel.coverUrl = `https://api.furrynovel.ink/proxy/pximg?url=${series.imageUrl}`\n            // novel.coverUrl = `https://api.furrynovel.ink/proxy/pximg?url=${series.novels[0].coverUrl}`\n            novel.coverUrl = util.urlCoverUrl(series.novels[0].coverUrl)\n            if (series.caption === \"\") {\n                let firstNovels = getAjaxJson(util.urlNovelsDetailed([series.novels[0].id]))\n                if (firstNovels.length > 0) {\n                    novel.desc = firstNovels[0].desc\n                } else {\n                    novel.desc = \"该小说可能部分章节因为权限或者被删除无法查看\"\n                }\n            } else {\n                novel.desc = series.caption\n            }\n\n            //如果没有标签 取第一章的tag\n            if (series.tags.length === 0) {\n                // 系列至少会有一章\n                novel.tags = series.novels[0].tags\n            } else {\n                novel.tags = series.tags\n            }\n\n            if (novel.tags === undefined) {\n                novel.tags = []\n            }\n            novel.tags.unshift(\"长篇\")\n\n\n        } else {\n            if (novel.tags === undefined) {\n                novel.tags = []\n            }\n            novel.tags.unshift(\"单本\")\n            // novel.coverUrl = `https://api.furrynovel.ink/proxy/pximg?url=${novel.coverUrl}`\n            novel.coverUrl = util.urlCoverUrl(novel.coverUrl)\n        }\n\n        novel.tags = novel.tags.join(\",\")\n    })\n    return novels\n}\n\nfunction findUserNovels(username) {\n    let novelList = []\n    // 查询用户\n    let userArr = getUser(username, true)\n    // 获取用户所有小说\n    let uidList = userArr.filter(user => {\n        return user.novels.length > 0\n    }).map(user => user.id)\n\n    if (uidList.length > 0) {\n        let list = getUserDetailedList(uidList)\n        let nidList = []\n        // 从两层数组中提取novelsId\n        list.forEach(user => {\n            user.novels\n                // 按id降序排序-相当于按时间降序排序\n                .reverse()\n                .forEach(nid => nidList.push(nid))\n        })\n        getNovels(nidList).forEach(novel => {\n            novelList.push(novel)\n        })\n    }\n    return novelList\n}\n\n(function (res) {\n    res = JSON.parse(res)\n    let novels = []\n    findUserNovels(java.get(\"key\")).forEach(v => {\n        novels.push(v)\n    })\n    novels = novels.concat(res.novels)\n    // 返回空列表中止流程\n    if (novels.length === 0) {\n        return []\n    }\n    return formatNovels(combineNovels(novels))\n}(result))",
            "bookUrl": "detailedUrl",
            "coverUrl": "coverUrl",
            "intro": "desc",
            "kind": "tags",
            "name": "title",
            "wordCount": "length"
        },
        "ruleToc": {
            "chapterList": "@js:\nvar util = objParse(String(java.get(\"util\")))\n\nfunction objParse(obj) {\n    return JSON.parse(obj, (n, v) => {\n        if (typeof v == \"string\" && v.match(\"()\")) {\n            return eval(`(${v})`)\n        }\n        return v;\n    })\n}\n\n(function (res) {\n    res = JSON.parse(res)\n    if (res.novels !== undefined) {\n        res.novels.forEach(v => {\n            // v['url'] = `https://api.furrynovel.ink/pixiv/novel/${v.id}${cache}`\n            v['url'] = util.urlNovelUrl(v.id)\n        })\n        return res.novels\n    }\n    return [{\n        id: res.id,\n        title: res.title\n    }]\n})(result)\n",
            "chapterName": "title",
            "chapterUrl": "url"
        },
        "searchUrl": "@js:\njava.put(\"page\",page);java.put(\"key\",key);\n`https://api.furrynovel.ink/pixiv/search/novel/${encodeURI(key)}/cache?page=${page}`;",
        "variableComment": "",
        "weight": 0
    },
    {
        "bookSourceComment": "─────当前版本Pro V50─────\n\n点击登录即可查看:\n\n0、书源制作思路\n\n1、版本更新日志\n\n2、书源用法展示\n\n3、相关问题解释\n\n───────搜索格式────────\n\n完全格式：书名#作者$网站\n简化格式1：书名$网站\n简化格式2：书名#作者\n简化格式3：书名\n\n说明：搜索“斗破苍穹#天蚕土豆$www.qidian.com”将在“www.qidian.com”中搜索名为斗破苍穹、作者为天蚕土豆的书籍\n\n──────前缀设置全体───────\n\n用法：“单跳逆原动静字图”等字后跟“^”再跟“搜索关键字”，可实现这些字对应的功能。\n\n范围：本次搜索到的所有书籍都会执行指定的功能。\n\n示例：“图^斗破苍穹”、“逆静^斗破苍穹#天蚕土豆”、“跳^斗破苍穹$www.qidian.com”。\n─────⤵\n跳：允许目录自动跳转，目录标题说点击跳转时可如此做。\n\n逆：设置书籍目录章节逆向排序，配合指定网站的搜索方式针对小说全是逆向排序的网站比较方便。\n\n原：设置书籍不进行净化替换，优点是加载正文快速且不会被误删内容，缺点是需要自己写“替换净化”规则并在正文中启用才能净化网站推广文本。\n\n动：强制设置正文动态加载(正文默认会进行需要动态加载还是静态加载的判断，然后自动切换模式，若判断失误导致本应切换成动态加载却未切换时，可强制设置正文动态加载)。\n\n静：强制设置正文静态加载(正文默认会进行需要动态加载还是静态加载的判断，然后自动切换模式，若判断失误导致本应保持静态加载却切换成动态加载而使正文加载时间变长时，可强制设置正文静态加载)。\n\n图：设置成看图模式(不设置则默认图文模式)，只显示图片，不显示文字。\n\n字：设置成纯字模式(不设置则默认图文模式)，只显示文本，不显示图片。\n─────⤴\n\n──────书籍变量设置───────\n\n用法：\n将“单直跳全逆原图字动静”中任意多个字\n或“[目录url]”或“[正文尾页url]单”\n或“数字#第二页链接#”\n或“[目录尾页url]录”\n放在详情页右上角的书籍变量中，\n确认后点刷新就能触发这些字段对应的功能。\n\n范围：只控制当前书籍执行指定功能。\n\n书籍变量格式示范：[http://m.biquku.la/0/425/]全字\n\n─────⤵\n直：不做目录识别，直接将详情页作为目录页，或以“[目录链接]”格式直接指定目录链接，目录识别错误时可这种做。\n\n全：直接显示“预览正文”和查询到的所有章节，跳过章节筛选环节，单页文章和部分筛选后章节不全的小说网站可这样做。\n─────⤴\n\n──目录有分页却无翻页按钮或书籍无目录──\n\n单：无目录打开即正文但有尾页或下一页按钮的书籍，必须设置为单向模式，这样书源会直接将入口页作为正文第一页，并将第一页及其所有下一页共同构造生成“正文1”、“正文2”…的目录形式来阅读，搜索前缀“单^”、书籍变量“单”。\n\n录：有目录分页但无目录下一页按钮的书籍，可在书籍变量中直接指定复制到的最后目录页链接为目录链接并添加指令“录”，即可自动生成所有目录分页。\n书籍变量：“[https://m.zuizaoxiaoshuo.com/ml/33280_13]录”\n\n辅助生成──无目录打开即正文也无尾页和下一页按钮的书籍，需指定章节数量并用第二页链接作为参考链接生成所有分页。\n书籍变量──220#https://wap.yqshuwang.com/2021n/02/14972_2.html#\n效果说明──根据第二页链接“https://wap.yqshuwang.com/2021n/02/14972_2.html”生成220条章节的目录列表。\n\n单个章节──目录仅一个章节且这个章节正文中无下一页按钮时，可复制那个章节的正文尾页链接并用指令“单”，便可将所有正文分页构造成章节列表。\n书籍变量──[http://www.yulinzhanye.la/20/20733/532447_9.html]单",
        "bookSourceGroup": "📑搜狗搜书,通用",
        "bookSourceName": "搜狗搜书",
        "bookSourceType": 0,
        "bookSourceUrl": "搜狗搜书",
        "bookUrlPattern": "",
        "customOrder": 68,
        "enabled": true,
        "enabledCookieJar": false,
        "enabledExplore": true,
        "exploreUrl": "",
        "header": "{\"User-Agent\": \"Mozilla/5.0 (Linux; Android 11; Redmi K30 Pro Build/RKQ1.200826.002; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/89.0.4389.86 Mobile Safari/537.36\"}",
        "lastUpdateTime": 1650209804827,
        "loginUrl": "https://gitee.com/no-mystery/shuyuan/",
        "respondTime": 180000,
        "ruleBookInfo": {
            "author": "@get:{x}",
            "canReName": "true",
            "coverUrl": "@js:(s=java.getStringList('img[alt*='+book.name+']@src||meta[property$=image]@content||img[src~=(cover|file|article)[^a-z]|/\\\\d+[/_-]\\\\d+(s?\\\\.|$)]@src||img[data-src~=\\\\S]@data-src||img[src*=/img]@src||img[src~=^(data|https?):|^[^:]+/]@src')).size()?/^data:/.test(s=s.get(0))?java.base64Encode(s):s:null",
            "init": "",
            "intro": "@js:'　　'+java.get(\"g\")",
            "kind": "@js:java.get(\"v\")",
            "lastChapter": "@get:{z}",
            "name": "@js:r=org.jsoup.Jsoup.parse(result);\nr.select(\"script,noscript,style,head>:not(meta),footer,[class~=^foot],[id~=^foot],a:has(>:last-child:matchesOwn(^分类$)),[value]\").remove();\n\nn=String(book.name);\nm=String(r).replace(/(?:&nbsp;)+/g,\" \");\n书=java.get(\"源\");\n\nif(x=(y=r.select('[property$=book_name]')).size()){\ny=y.attr(\"content\");\nu=书.indexOf(y)\n}else for(u=true,c=r.select(\"h1,h2,h3,strong\").eachText();x<c.size();x++)if(\n(y=c.get(x))!=''&&(u=书.indexOf(y),~u&&u<4))break;\nif(!~(y=String(y)).indexOf(n)&&~u)n=y;\n\nif((x=r.select(\"[property$=author]\")\n).size()){\nx=String(x.attr(\"content\")).replace(/^作\\s*[者家][\\s:：]*|(?!^)[/／｜|，,\\s][^⚙️]*$/,\"\")\n}else{\nx=m.match(/>\\s*([^>]+?)(?:\\s*<\\/[a-z]+>\\s*|\\s+)著\\s*<|[\\s\\[\\];?!,.()、，；？！。…─（）［］〖〗【】>《》](?:小说|漫画)?作\\s*者(?![^>]+->)(?:[:：\\s〖【（《［\\[\\(]|<[^it\\/][^>]*>|<\\/[^>]+>)+([^\\s<\">,，/／｜|\\)\\]］》）】〗]+)/);\nx=x?x[1]?x[1]:x[2]:(x=r.select(\"#author,.author\"),x.size()?String(x.first().text()).replace(/(?!^)[/／｜|，,\\s][^⚙️]*$/,\"\"):\"\")}\n\nif(n.indexOf(x)>0&&!~java.get(\"key\").indexOf(n))n=n.split(x)[0];\njava.put(\"x\",x);\n\ny=r.select(\"meta[property~=(category|status)$]\");\nc=y.size()?String(y.eachAttr(\"content\"))\n.slice(1,-1).replace(/(?!^)\\s*[，,./／｜|]\\s*/,\",\"):(y=m.match(/(?:[\\s\\[\\];?!,.()、，；？！。…─（）［］〖〗【】》]|<[^a/][^>]*>|<\\/[^>]+>)(?:[分大]\\s*类|类\\s*[型别])(?:[:：\\s]|<[^>]+>)+([^\\s<.\"/／｜|>]+)/))&&y[1];\nif(c)java.put(\"v\",c);\n\ny=r.select(\"meta[property~=latest_chapter_name$]\");\n\nc=y.size()?y.attr(\"content\"):(y=m.match(/>(?:\\s*[更最]\\s*[新近])+(?:\\s*章\\s*节)?(?:[:：\\s\\[]|<[^>]+>)+(?!\\s*(?:-|&gt;)\\s*<|[:：\\s0-9T年月日时分秒*-]{5,}<|[^:：]+[^章\\s]\\s*[:：]\\s*<|更新(?:时间)?[:：])([^<\"/／｜|\\]>]+)/))&&y[1];\nif(c)java.put(\"z\",c);\n\n正=true;\nif((key=String(java.get(\"custom\"))).length){\nif(~key.indexOf(\"全\"))java.put(\"全\",1);\nif((\nu=key.match(/[^\\[\\]]+(?=\\])/),\nc=~key.indexOf(\"录\"),\ny=~key.indexOf(\"单\"),\nbaseUrl=u?u[0]:baseUrl,\n(c||u)&&(baseUrl=c||y?(baseUrl=String((c=baseUrl.match(/(.+[^\\d])(\\d+)([^\\d]*)$/))[1]+1+c[3]),\nc=c[2]+'🌕'+c[1]+'🌕'+2+'🌕'+c[3],\nbaseUrl):baseUrl)\n)||~key.indexOf(\"直\")\n)java.put(\"目\",1),正=1;\nif(~key.indexOf(\"录\"))java.put(\"录\",c),正=1;\nif(y||~key.indexOf(\"#\")){\nif(!u){\nif((网=key.match(/(\\d+)#([^#]+)/))\n&&(尾=网[1],网=网[2].match(/^(.*[^\\d])([12])([^/?\\d]*)$/))\n||(尾=r.select('a[href~=\\\\d[^/?\\\\d]*$]:matches(^(尾|末|最后一)[頁页篇章回节節话話]$)')).size()\n&&(网=r.select('a:matches(^2$)')).size()\n&&(网=String(网.first().attr('href')).match(/^(.*[^\\d])([12])([^/?\\d]*)$/))\n&&(尾=String(尾.first().attr('href')).match(/\\d+(?=[^/?\\d]*$)/)[0])){\nc=尾+'🌕'+网[1]+'🌕'+网[2]+'🌕'+网[3]\n}else if((c=r.select('a:matches(^(\\\\d+|…+|\\\\.+)$)')).size()){\nif((网=String(c).split(/<a[^>]+>[^\\d<]+<\\/a>/)).length==2){\nfor(c=网[0],尾=网[1],x=+网[1].match(/>([^<]+)/)[1],网=网[0].match(/href=\"([^\"]*[^\\d])(\\d+)([^/?\\d\"]*)\"[^>]*>([^<]+)<[^<]+$/),j=+网[4],i=+网[2]-j;j<x;j++)c+=\"<a href='\"+网[1]+(j+i)+网[3]+\"'>\"+j+\"</a>\";\nc+=尾}\n}else c=1}\njava.put(\"单\",c),正=false}\nif(~key.indexOf(\"跳\"))java.put(\"跳\",1);\nif(~key.indexOf(\"逆\"))book.setReverseToc(true);\nelse book.setReverseToc(false);\nif((u=~key.indexOf(\"图\"))||~key.indexOf(\"原\"))java.put(\"原\",1);\nif(~key.indexOf(\"动\"))java.put(\"动\",',{\"webView\":true}');\nelse if(~key.indexOf(\"静\"))java.put(\"静\",1);\nif(u||~key.indexOf(\"字\"))java.put(\"文\",u?1:2)\n}else book.setReverseToc(false);\n\ny=r.select(\"meta[property$=description][content~=\\\\S]\");\nc=y.size()?y.get(y.size()-1).attr(\"content\"):(r.select(':matchesOwn([\\\\u4e00-\\\\u9fa5]{2,})>:not(br),:not(body,br,:matchesOwn([\\\\s\\\\S]{50}),:has(body,:matchesOwn([\\\\s\\\\S]{50})))').remove(),r.select(\":matchesOwn(\\\\S)\").text());\n\njava.put(\"g\",String(c!=\"\"?c:book.intro).replace(/[\\snbsp;]*(?:&nbsp;|\\s){2,}|\\s*([？！。]+[”」』\\]\\}\\)）｝】〗〕〉]?)\\s*/g,\"$1　　\").replace(/(?=　　)/g,\"\\n\"));\n\nif(正==1)m=java.ajax(baseUrl);\njava.setContent(m,baseUrl);\n\nif(正){\nzl=java.getStringList(\"[property$=latest_chapter_url]@content||:matches(^最新章节)>a:only-child:not([href~=^$|#|javascript:])@href||a:matches(^正文\\\\s*[\\\\d第一二三四五六七八九十〇零百千]|^[【《]?(\"+n+\")?[\\\\s》】（\\\\u0028:：＿_－-]*(第[\\\\s0〇零]*[一1]\\\\s*[\\\\u4e00-\\\\u9fa5]|([\\\\u4e00-\\\\u9fa5]{2}阅读[（\\\\u0028:：＿_－-]?)?(0*1([）\\\\u0029.、:：_-]|$)|[〇零]*一([）\\\\u0029\\\\s.、:：_-]|$)))):not([href~=(^|[^/])/[vV][iI][pP]|([A-Za-z]\\\\d+|\\\\d[A-Za-z]+|[A-Z][a-z]+|[a-z][A-Z]+){3,}[^/?&_-]*$|^$|#|javascript:|\"+(bas=baseUrl.replace(/\\/+$|\\.[a-zA-Z]+$/,'')).match(/[^?/]+$/)[0].replace(/([*$|?+\\\\\\^\\[\\](){}])/g,'\\\\$1')+\"(?:[/_-]1)?(?:\\\\/|\\\\.[a-zA-Z]+)?$])@href||a:matches(^[^\\\\u4e00-\\\\u9fa5]*(免费|在线|开始|立即|全文|正文|从头)+[试阅]读[^\\\\u4e00-\\\\u9fa5]*$):not([href~=^$|#|javascript:])@href||a:matches(^0*1[^\\\\d]):not([href~=(^|[^/])/[vV][iI][pP]|([A-Za-z]\\\\d+|\\\\d[A-Za-z]+|[A-Z][a-z]+|[a-z][A-Z]+){3,}[^/?&_-]*$|^$|#|javascript:])@href\");\n\nif(zl.size()&&(ck=String(zl.get(0)).match(/^(.*\\/\\/[^/]+)?([/?]?[^/].+[?&/_-])[^&/_-]+\\/?$/)))(jd=ck[1])&&(h=baseUrl.lastIndexOf('/',baseUrl.indexOf(jd.match(/(?:\\.[^.]+){2,}$|[^./]+\\.[^.]+$/)[0])))>8&&(\nq=baseUrl.indexOf(':'),\n(bas=java.get(baseUrl=baseUrl.slice(0,q+2)+baseUrl.slice(h),{})).statusCode()==200&&java.setContent(bas.body(),baseUrl)\n),java.put(\"ck\",ck[2])}\nn",
            "tocUrl": "@js:if(java.get(\"单\")==''){\nif(java.get(\"录\")==java.get(\"目\")){\nr=org.jsoup.Jsoup.parse(result);\n\nscript=r.select(\":matchesOwn(^$)>a[href^=javascript:]:matches(全文|章[節节]|目[錄录]):not(:matches(最新))\");re=false;\n\nif(!script.size()){\nba=(bas=baseUrl.replace(/\\/$|\\.[a-zA-Z]+$/,'')).match(/(http....[^/?]+)(?:([?/])(.*))?$/);b=ba[1];v=ba[3];\n\nr.select(\"a[href~=[^a-z]page[^a-z]]:not(:matches([反正顺順逆倒]序|[全正]文|更多|全部|所有|章[節节]|作品|目[錄录]|列表)),a:not([href~=^(?!//)[^#:]+$|\"+b.split(':')[1]+\"]),:matchesOwn(\\\\S)>a,a[href~=javascript:|#],a:matches(^\\\\S{1,4}$):not(:matches([反正顺順逆倒]序|[阅閱][讀读]|查看|展[开開]|进入|[全正]文|更多|完整|全部|所有|目[錄录]|列表|章[節节]):not(:contains(分类)))\").remove();\n\ny=r.select(\"a[href~=(?i)catalog|contents|chapters|mulu|(^|[^a-z])ml|showchapter|(^|chapter[/_-]?|\"+v.replace(/(.+)((\\/\\d\\d)\\d+)$/,\"$1$3$2\")+\"[/_-])(more|list|all)|sort[/=_-]asc]\");\n\nif(!y.size()){b3='';\n\nif(ba[2]==\"?\"){\nb3='[href~=^[^?]+$],'\n}else if(ba[3]){\nb3=ba[3].replace(/[*$|?+\\\\\\^\\[\\](){}]/g,'\\\\$0');\n\nb3=\"[href~=\"+b3+\"(\\\\.[^.]+|/\\\\d+(\\\\.[^.]+|/)?)?$],[href~=[/?]\"+b3.replace(/[&/_-][^/_-]+$/,'')+\".*$]:not([href~=[/?]\"+b3.replace(/[/_-]/g,'[/_-]')+\"]),\"}\n\ny=r.select(\"a:not(\"+b3+\"[href~=(?i)(^|[^/])[?/].*((book|[^a-z])(info|case)[^a-z]|(cid|buy)[^a-z]|desc|coins|nutrition|review|ticket|update|(app|author|xiazai|down)(?!=))|/chapter|/index/|/d/],:matches((?i)^$|[0-9零〇一二三四五六七八九十百千万、，：；？！。…‘’“”（）()]|[票榜:：.]|推荐|排行|等级|说明|收藏|书评|简介|分[类卷]|简介|作者|手机|软件|应用|安装|客户|移动|pc|电脑|安卓|苹果|下载|最新|ap[kp]|ipa|plx|deb|exe|zip|rar|txt|epub))\")}\n\nif(y.size()){\nys=y.select(\"a[href~=(?i)catalog|contents|list|chapter|mulu|(^|[^a-z])ml|more|read|all]:matches([反正顺順逆倒]序|全文|章[節节]|目[錄录]):not(:matches(阅读)),a[href~=(?i)catalog|contents|chapter|(^|[^a-z])ml|mulu|read]:matches(更多|列表),a[href~=(?i)catalog|contents|list|chapter|mulu|(^|[^a-z])ml|more|all]:matches(^$),a:matches(^[^\\\\u4e00-\\\\u9fa50-9]*([反正顺順逆倒]序|全文(免[費费])?[阅閱][讀读]|(点击|查看|展[开開]|进入|返?回到?)*([全正]文|(更多|完整|全部|所有)?(章[節节]|(作品)?目[錄录])+)+(列表)?(\\\\s*(查看|展开)?更多)?)[^\\\\u4e00-\\\\u9fa50-9]*$)\");zt=false;\n\nif(!ys.size()){\nba=bas.match(/(\\?(?:[^=]+=)+)(.+)$/)||bas.match(/(?:[^/_-][/_-]([^/._-]+))?[/_-]([^/._-]+)(?:\\/index[^/]*)?$/);\n\nif(xi=(id=ba[2]).match(/\\?[^=]+=([^&]+)/)||id.match(/^[^\\d%]*(\\d{2,}|[1-9])$/))id=xi[1];\nif(ba[1])if(xi=ba[1].match(/^[^\\d%]*(\\d{2,})$/))id=/^\\d$/.test(id)||!xi[1].indexOf(id)?xi[1]:\"(\"+id+\"|\"+xi[1]+\")\";\n\nys=y.select(\"[href~=(?i)^((.*//[^/]+/)?[^=.]*[^\\\\d=.])?\"+id+\"([?_-][a-z=_-]*0|\\\\.[^.]+|[/?]([^\\\\d]*|[^/\\\\d]*/?|(list|more|all)([=_-][a-z]*)?\\\\d+[^\\\\d]*)?)?(&.+)?$]:not(:contains(\"+(bs=String(book.name)[0])+\"))\");\n\nif(!ys.size()){zt=true;\nys=y.select(\"[href~=(?i)^((.*//[^/]+/)?[^=.]*[^\\\\d=.])?(\\\\d+/\"+id+\"[_-]\\\\d+[^\\\\d]*|\"+id+\"[_-][a-z_-]*1[^\\\\d]*)$]:not(:matches(阅读|\"+bs+\"))\")}}\n\nif(ys.size()){\nif((re=ys.select(\"[href~=(/|^)[^.]+$]\")).size())ys=re;\nre=String(ys.first().attr(\"href\"));\n\nfor(x=1;x<ys.size();x++)if((xs=String(ys.get(x).attr(\"href\"))).length>re.length)re=xs;\n\nif(/(?:[2-9]\\d*|1\\d+)[^\\d]*$/.test(re)){\nif(!zt&&(q=re.match(/^(.*[^/])?[&?/].*(?:catalog(ue)?|contents|(?:show)?chapters?|mulu|ml|more|all|list|page)(?:[=_-][a-z]*)?\\d+[^\\d]*$/i))&&v==(q[1]||'').replace(/^http....[^/?]+/,''))zt=true;\nif(zt)re=re.replace(/\\d+(?=[^\\d]*$)/,\"☯1\")}\n\n}}}\n\nre=String(!re?baseUrl:(java.put(\"基\",baseUrl),/^\\/[^/]/.test(re)?b+re:/^https?:/.test(re)?re:/^\\/\\//.test(re)?b.split('//')[0]+re:String(baseUrl).replace(/[^/]*$/,'')+re))}else re=baseUrl;\n\nr=re.replace(/(?:[☯?&/_-][^\\d?/&_-]*[01])+[^\\d]*$/,\"\");\njava.put(\"ba\",r);\nre=re.replace(\"☯\",\"\")}else re=baseUrl;\n\njava.get(\"跳\")==1?re+',{\"webView\":true}':re",
            "wordCount": "{{baseUrl}}##//([^/]+)##$1##"
        },
        "ruleContent": {
            "content": "@js:dt=lr='';c=1;动=java.get(\"动\");\nif(动!=''&&!~baseUrl.indexOf(\",\")){\nresult=String(java.ajax(baseUrl+动))\n}else if(java.get(\"静\")==动)c=dt=2;\n\nr=org.jsoup.Jsoup.parse(r1=result.replace(/&nbsp;/g,' '));\n查=i=java.get(\"序\");\n\nif(java.get(\"文\")==1){for(;c;c--){\nd=[\"img[data-src],img[src~=[^a-z]cid[^a-z]]\"\n,\"img:not([src~=(?i)^$|^javascript:|\\\\.gif|\\\\.png|[^a-z](cover|css|ic(on)?|load(ing|ed)?)[^a-z]])\"\n,\"img[src~=(?i)\\\\.png]:not([src~=(?i)[^a-z](cover|css|ic(on)?|load(ing|ed)?)[^a-z]])\"\n,'img[src~=(?i)\\\\.gif]:not([src~=(?i)[^a-z](cover|css|ic(on)?|load(ing|ed)?)[^a-z]])'];\n\nif(!(查!=\"\"&&(查!=-1&&((lr=r.select(d[查])).size(),true)))){\n$=it=>(lr=r.select(it)).size();\nif($(d[i=0])||$(d[i=1])||$(d[i=2])||false)break;\n\nif(c==2){dt=1;\nr=org.jsoup.Jsoup.parse(java.ajax(baseUrl+',{\"webView\":true}'))\n}else i=$(d[3])?3:-1}}\nif(i==0)lr=String(lr).replace(/(?:src=['\"][^'\"]+['\"] +)?data-/g,'');\nif(查==\"\")book.putVariable(\"序\",i);\n\n}else{\nsc=java.get(\"文\")==2?\n'[style~=(?i)text-align:center|(^| |;)color: *(rgb.(?!255[ ,]+255[ ,]+255)[\\\\d, ]*2\\\\d\\\\d|#(?=[a-f\\\\d]{3}([^a-f\\\\d]|$))(?!fff)[a-f\\\\d]*[d-f]|#(?=[a-f\\\\d]{4})(?!ffffff)([\\\\da-f]{2})*[d-f][\\\\da-f]|green|red|blue|yellow|purple|pink|brown)],script,noscript,style,header,footer,[class~=^foot|^head],[id~=^foot|^head],:has(>a):not(:has(p:matchesOwn(\\\\S),br)),a>*,:has(a):not(:matchesOwn([\\\\S\\\\s]{50,}),:has(:matchesOwn([\\\\S\\\\s]{50,}))),:matchesOwn([\\\\s\\\\S]{50})>:not(br,a,:matchesOwn([\\\\s\\\\S]{50})),:not(br,p,a,:matches([\\\\s\\\\S]{200}),:has(p,br,div:matchesOwn(，|。)+div:matchesOwn(，|。)),:has(p,br,div:matchesOwn(，|。)+div:matchesOwn(，|。)) :matchesOwn(\\\\S):not(:not(p,div,span:has(br))))'\n:\n'[style~=(?i)text-align:center|(^| |;)color: *(rgb.(?!255[ ,]+255[ ,]+255)[\\\\d, ]*2\\\\d\\\\d|#(?=[a-f\\\\d]{3}([^a-f\\\\d]|$))(?!fff)[a-f\\\\d]*[d-f]|#(?=[a-f\\\\d]{4})(?!ffffff)([\\\\da-f]{2})*[d-f][\\\\da-f]|green|red|blue|yellow|purple|pink|brown)],script,noscript,style,header,footer,[class~=^foot|^head],[id~=^foot|^head],:has(>a):not(:has(p:matchesOwn(\\\\S),br,img:not([src~=(?i)^$|^javascript:|[^a-z](css|ic(on)?|load(ing|ed)?)[^a-z]|/\\\\d+s\\\\.jpg]))),img[src~=(?i)^$|^javascript:|[^a-z](css|ic(on)?|load(ing|ed)?)[^a-z]|/\\\\d+s\\\\.jpg],a:not(:matches(^$)>img)>*,:has(a):not(img,:matchesOwn([\\\\S\\\\s]{50,}),:has(img,:matchesOwn([\\\\S\\\\s]{50,}))),:matchesOwn([\\\\s\\\\S]{50})>:not(img,br,a,:has(img),:matchesOwn([\\\\s\\\\S]{50})),:not(img,br,p,a,:matches([\\\\s\\\\S]{200}),:has(p,br,img,div:matchesOwn(，|。)+div:matchesOwn(，|。)),:has(img,p,br,div:matchesOwn(，|。)+div:matchesOwn(，|。)) :matchesOwn(\\\\S):not(:not(p,div,span:has(br))))';\n\nd=[\":matchesOwn(\\\\S):has(br):has(:matchesOwn(\\\\S):has(br))\"\n,\":matchesOwn(\\\\S):has(br)\"\n,\":has(>:matchesOwn(\\\\S):not(:has(*))+:matchesOwn(\\\\S):not(:has(*)))\"\n,\":has(>:has(>p:only-child:matchesOwn(\\\\S):not(:has(*)))+:has(>p:only-child:matchesOwn(\\\\S):not(:has(*))))\"\n,\"img\"\n,\":matchesOwn(\\\\S)\"];\n\ntry{for(查=i!=''?i:java.get(\"元\");c;c--){\n\nif(!(c>1&&(String(r.text()).length<400||r.select(':matchesOwn(内容未加载完成|关闭(阅读|小说)模式)').size()))){\nr.select(sc).remove();\n\nif(!(查!=\"\"&&(lr=r.select(i?d[i==6?5:i]:查)).size()))for(i=0;i<6&&(lr=r.select(d[i]),i==4&&c==1?!lr.size():String(lr.text()).length<200);i++);\nif(c<2||i<6)break;}\n\nr=org.jsoup.Jsoup.parse(r2=String(java.ajax(baseUrl+',{\"webView\":true}')).replace(/(<[a-z]+)&nbsp;/g,'$1 '));\ndt=r1.length==r2.length?2:1}\n\nfor(c=lr.first(),v=1;v<lr.size();v++)if(lr.get(v).parents().contains(c)){\nlr.remove(v);\nv--}else c=lr.get(v);\n\nlr=String((c=lr.size()==2&&i<4)?String(lr.first().text()).length>String(lr.get(1).text()).length?lr.first():lr.get(1):(c=lr.size()==1)?lr.first():lr);\n\nif(查==\"\"){\nif(c&&(查=lr.match(/<([a-z]+) ([^>]+)>/))&&(查[2]=查[2].match(/(?:id|class|style)=(?:\"[^\"]+\"|'[^']+')|[^= ]+(?==\"[^\"]+\"|'[^']+')/g))){\nbook.putVariable(\"元\",查[1]+'['+查[2].join('][')+']')\n}else book.putVariable(\"序\",i)}\n\nlr=lr.replace(/<([a-z]+)[^>]*\"-\\d+\"[^>]*>[^<]+<\\/\\1>|[^<>]*<a[^<]+<\\/a>[^<]*|&lt[; ]?\\/?[a-z]+(?= |\\/?&gt)(?:[ a-z=-]+|\"[^\"]+\"|'[^']+')*\\/?&gt[; ]?|[☯📑⚙️🌕︴]/g,\"\").replace(/\\s+(?:\\s|(?:(?:(?:n?b)?s)?p)?;)/g,\"　　\");\n\nif(java.get(\"原\")!=1)lr=(!lr.indexOf(\"　　\")?lr.replace(/>(?!　　|\\s*(?:(?:(?:n?b)?s)?p)?;)\\s*(?=[^\\s<>])/g,\">︴\"):lr).replace(/((?:[〖【『「（《〈〔［\\[(][^〖【『「（《〈〔［\\[()］〕〉》）」』】〗\\]]*[)］〕〉》）」』】〗\\]]\\s*)*(?:第?\\s*[一二三四五六七八九十百千万〇零0-9]+\\s*[章节回話话：:.．,，、]*\\s*)?{{n=(t=title.match(/\\S+$/)[0].replace(/[*$|?+\\\\\\^\\[\\](){}/]/g,\".?\")).replace(/^(正文[^\\u4e00-\\u9fa5A-Za-z]*|第?[一二三四五六七八九十百千万〇零0-9]+[章节回話话\\s：:.．,，、]*)+/,\"\"),n!=t&&/\\S/.test(n)?\"(?:第?\\\\s*[一二三四五六七八九十百千万〇零0-9]+\\\\s*[章节回話话：:.．,，、]*\\\\s*\"+n+\"|\"+t+\")\":t}}(?:\\s*[〖【『「（《〈〔［\\[(][^〖【『「（《〈〔［\\[()］〕〉》）」』】〗\\]]*[)］〕〉》）」』】〗\\]])*)/g,\"⚙️$1⚙️\")+\"📑\"\n}catch(e){}}\nif(dt)book.putVariable(dt==1?\"动\":\"静\",',{\"webView\":true}');lr",
            "imageStyle": "FULL",
            "nextContentUrl": "@js:if((r=java.getStringList((nx=java.get(\"next\"))+\"a:matches(第二[頁页]|下[一\\\\s]*[頁页]):not([href~=^javascript:|^#])@href||a:matches(下[一\\\\s]*[篇章回节節话話]):not([href~=^javascript:|^#])@href||a[href~=[_-]\\\\d+(/|\\\\.[a-z]+)?$]:has(i,img):not(:matches(\\\\S),[href~=^javascript:|^#])@href\")).size()){\nif(~String(book.tocUrl+(nextChapterUrl||'')).indexOf(r=String(r.get(r.size()-1)))||~r.indexOf(nextChapterUrl||String(book.tocUrl).replace(/.+(?=_\\d+\\/$)/,'')))r=null\n}else r=null;\nif(r){if(nx!='')chapter.putVariable(\"next\",(n=r.replace(/\\d+(?=[^\\d]*$)/,it=>+it+1))==r?'':'a[href=\"'+n+'\"]@href||');\nr+java.get(\"动\")}",
            "replaceRegex": "@js:if(java.get(\"原\")==1){result}else{\nresult=result.replace(/⚙️([^\\u4e00-\\u9fa5⚙️]+|[零〇一二三四五六七八九十百千万\\s]+|(?!第[零〇一二三四五六七八九十])[\\u4e00-\\u9fa5]+)⚙️/g,'$1').split('📑');\nl=result.length-1;\nwhile(l)if(r=result[--l].match(/^(\\n+(?:[^\\n]{1,30}\\n+){1,3})([\\S\\s]+)$/))result[l]=r[1]+r[2].replace(/⚙️/g,'');\nresult.join('📑')\n.replace(/—/g,\"─\")\n.replace(/[·۰•・]/g,\"・\")\n.replace(/\\s*(?:︴[^\\n　]+\\s+)*📑\\s*|^\\s*(︴[^\\n　]+\\s+)*|\\s*(?:　　|\\n)(?:[\\s&#a-zA-Z0-9]*;)?[\\s　?]*/g,\"☯\")\n.replace(/(?:︴[^☯]*☯)+(?=︴)|☯(?:温馨|[^a-zA-Z0-9\\u4e00-\\u9fa5☯]+)提示.?[:：][^☯]+|☯[^☯]+字体不会安装.?请百度[^☯]+|☯.{0,2}正版订阅在阅文旗下的起点和QQ书城，可以第一时间看到最新章节.{0,2}(?=☯)|︴\\s*第?[〖【『「（《〈〔［｛\\[{(][^☯]+(?=☯)|☯第\\s*[（(][^（()）]+[)）][頁页](?=☯)|[^☯]*(?:关注|[微vVＶｖ][^\\u4e00-\\u9fa5A-Za-z0-9]*[信xXｘＸ]|公[^\\u4e00-\\u9fa5]*众[^\\u4e00-\\u9fa5]*号){2,}[^☯]*|(?:&#?[a-z0-9]*;?)+(?=;|☯);*|read[sx][；;?？]+/g,\"\")\n.replace(/\\s+/g,\" \")\n.replace(/☯[ ☯]*/g,\"\\n\")\n.replace(/(\\n[〖【『「（《〈〔［｛\\[{(]?)([pPＰｐ][SsｓＳ]+(?=[ ：:;；，,、。.─\\d\\u4e00-\\u9fa5])[^\\n]+)/g,\"$1🌕$2\")\n.replace(/\\[\\[\\[[^\\[\\]]+http:file2.qidian.comchapters(.{5,6})(..)([^\\[\\]]{35})\\]\\]\\]/g,'<img src=\"http://file2.qidian.com/chapters/$1/$2/$3\">')\n.replace(/(<img )[^>]*(src=\"[^\"]+\")[^>]*(>)|((?: ?[＋+－-]?[0-9０-９]+(?:[．.／/][0-9０-９]+)?[％%:：]?[a-zA-Z]*)+ ?|[ _＿－-]?[a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９]+)/g,\"$1$2$3☯$4☯\")\n.replace(/☯[・。](?=☯)/g,\"☯.\")\n.replace(/,\\n/g,\"，\")\n.replace(/!(?=\\n)/g,\"！\")\n.replace(/\\?(?=\\n)/g,\"？\")\n.replace(/(<[^<]+)☯☯/g,\"⚙️$1⚙️\\n\")\n.replace(/(?:\\n[^āáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ\\u4e00-\\u9fa5\\n〖【『「《“‘＜（〈〔［｛({\\[\\]})｝］〕〉）＞’”》」』】〗、，：；？！。…─🌕︴\\n]+|([。？！…”』」】〗])[^a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5\\n〖【『「《“‘＜（〈〔［｛({\\[\\]})｝］〕〉）＞’”》」』】〗、，：；？！。…─☯︴\\n]+[\\u4e00-\\u9fa5]+)?[^a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5\\n〖【『「《“‘＜（〈〔［｛({\\[\\]})｝］〕〉）＞’”》」』】〗、，：；？！。…─⚙️☯︴\\n]+(?=\\n)|[^☯!\"'(),\\s\\u4e00-\\u9fa5、，：；？！。…─〖【『「《“‘＜（〈〔［｛｝］〕〉）＞’”》」』】〗]*☯([a-zA-ZＡ-Ｚａ-ｚ]*[āáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ][a-zA-ZＡ-Ｚａ-ｚ]*)☯[^☯!\"'(),\\s\\u4e00-\\u9fa5、，：；？！。…─〖【『「《“‘＜（〈〔［｛｝］〕〉）＞’”》」』】〗]*/g,\"$1$2\")\n.replace(/[^!\"'(),\\s\\u4e00-\\u9fa5、，：；？！。…─〖【『「《“‘＜<（〈〔［｛({\\[\\]})｝］〕〉）>＞’”》」』】〗︴🌕]*(?:☯[^.．!(),\\n\\u4e00-\\u9fa5、，：；？！。…─〖【『「《“‘＜（〈〔［｛({\\[\\]})｝］〕〉）＞’”》」』】〗⚙️]+|([^☯!(),\\na-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5、，：；？！。…─〖【『「《“‘<＜（〈〔［｛({\\[\\]})｝］〕〉）＞>’”》」』】〗⚙️])(?!\\1)|☯(?=[^☯!(),\\na-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5、，：；？！。…─〖【『「《“‘＜（〈〔［｛({\\[\\]})｝］〕〉）＞’”》」』】〗][!(),\\s\\u4e00-\\u9fa5、，：；？！。…─〖【『「《“‘＜（〈〔［｛({\\[\\]})｝］〕〉）＞’”》」』】〗])|[〖【『「（《〈〔［｛\\[{(][^a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]*[)｝］〕〉》）」』】〗\\]}]){4,}|[^；;％%～~?？!！\"'”’。…─\\na-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]*[〖【『「（《〈〔［｛\\[{(][^a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]*[)｝］〕〉》）」』】〗\\]}](?:[^a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]+(?=[)｝］〕〉》）」』】〗\\]}]))?/g,\"📑\")\n.replace(/([；;％%～~?？!！\"'”’。…─])📑(?=[)｝］〕〉》）」』】〗\\]}])/g,'$1')\n.replace(/(?:([\\n。？！])[^\\n。？！]{1,10})?[〖【『「（《〈〔［｛\\[{(][^〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]*(?:☯[^a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]☯|📑|🌕)[^〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]*[｝］〕〉》）」』】〗\\]})](?:[^。]{0,5}(?:[〖【『「（《〈〔［｛\\[{(][^〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]*(?:☯[^a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]☯|📑)[^〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]*[｝］〕〉》）」』】〗\\]})]|[^📑!,()\\s\\u4e00-\\u9fa5、，：；？！。…─‘’“”（）《》〖〗【】]+))*(?:(?:[^\\n]{1,10}|(?:[\\u4e00-\\u9fa5]{0,5}[，、])*[\\u4e00-\\u9fa5]+[！。]?)(?=\\n))?/g,\"$1\")\n.replace(/((?:[请請][记記]住)?[^⚙️🌕📑︴*\\n(),\\u4e00-\\u9fa5、，：；？！。…─「」‘’“”（）《》〖〗【】]*(?:(?:[^⚙️🌕📑︴*\\n(),\\u4e00-\\u9fa5、：，；？！。…─「」‘’“”（）《》〖〗【】]+[*(), \\u4e00-\\u9fa5、，:：；？！。…─「」‘’“”（）《》〖〗【】]{1,3})*[^*︴📑☯⚙️🌕\\s&;(),āáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜa-zA-ZＡ-Ｚａ-ｚ0-9０-９\\u4e00-\\u9fa5、,，:：;；?？!！。…～~─'\"‘’“”【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}％%・/／＝=_＿.．＋+－-]+(?!(?:[^>]+>)?⚙️)|☯[^☯\\n]+☯\\.☯[^☯\\n]+☯|本[文书](?:首发|来自)|(?:章节不完整.?|完整章节)?请.{2,6}(?:搜索|百度|引擎|关键[词字])+|(?:[阅閱][讀读]|访问|訪問|[網网地][站址]|链接|鏈接|[\\u4e00-\\u9fa50-9a-zA-Z]{0,4}(?:文学|中文|[網网]))+[:：]|[\\u4e00-\\u9fa50-9a-zA-Z]{0,6}(?:[網网地][站址]|链接|鏈接)为|.{2,4}文[学學][網网]|[请請].{2,4}收藏(?:.{0,2}推[荐薦])?|(?:天才)一秒[記记]住|，?請?訪問|(?:[更最][快新]|[快高]速|热门|(?:[阅閱][讀读])?完整|本|(?:官[網网]|本站).{0,2})(?:章[節节]|小说|更新|[網网地][址站][:：]?|快速)|更新(?:速度)?[最更]?快|(?:(?:无错)?小说|正版|免费|全[文本]|在线|访问|訪問|txt|TXT|继续|各种|推[荐薦]|收藏|分享|交流|你?喜欢的)+(?:全文|免费|在线|[阅閱]?[讀读]|下载|章[節节]|小说|好书)|章[節节](?:目录|列表)|小说[網网](?:更新)?|手打全文|[纯全](?:手打|文字)|手机看书|手机版|笔趣阁|(?:本站|[網网]站|站内|看)?无(?:任何)?(?:广告|弹窗|防盗)(?:章节)?|不弹窗|(?:(?:請|请|或者?)?(?:訪問|访问|[電电手][腦脑机機]|[網网][址站]|用[户戶]|浏览|瀏覽|閱讀|阅读|看小说|看漫画)){2,}|看小说|看漫画|(?:用[^\\n]{2,6})?(?:[追看]书|小说)(?:就用|软件|☯[^☯]+☯)，?|用[^\\n]{2,6}[追看]书|(?:..的)?(?:最佳选择|阅读体验)|(?:推[荐薦]|收藏|分享)(?:本站|我们)|小说..版|文章质量更好|谢谢各位(?:读者|书友)支持|水印广告测试|本章未完|请翻页|点击下一页|领.{0,2}红包|同步更新《[^《》]+》|关注[〖【『「（《〈〔［｛\\[{(][^〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]+[)｝］〕〉》）」』】〗\\]}])(?:[* (),\\u4e00-\\u9fa5、，：；？！。…─‘’“”（）《》〖〗【】]{0,3}[^⚙️📑*\\n(),\\u4e00-\\u9fa5、，：；？！。…─「」‘’“”（）《》〖〗【】]+|[….。!！]+(?=\\n))*|⚙️(?!<)[^⚙️\\n]+⚙️)/g,\"\\n⚙️$1⚙️\\n\")\n.replace(/⚙️(<[^<>]+>)⚙️\\n|[〖【『「（《〈〔［｛\\[{(](?:[^〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]{0,3}\\n⚙️(?!\\s*\\S\\s*⚙️).+⚙️\\n*)+[^〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]{0,3}[)｝］〕〉》）」』】〗\\]}]|(🌕)\\s*⚙️|⚙️\\n[^\\u4e00-\\u9fa5]{0,5}\\n⚙️|\\n⚙️\\s*(\\S)\\s*⚙️\\n(?![^⚙️]{1,3}⚙️)|(⚙️\\n)|([，、；])[\\s,，。、…:：;；?？!！`’]*[,，。、…:：;；?？!！`’](?!⚙️)|\\n[\\s,，。、…:：;；?？!！`’]*(?=[,，。、:：;；?？!！])|([：？！。…─])(?:[^⚙️☯a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5\\n…─“‘’”〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]+(?=\\n)|[^⚙️☯a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5\\n…─“‘’”〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]+)|☯/g,\"$1$2$3$4$5$6\")\n.replace(/([)）？！?!…」』”\\s。])(?:[^\\n（(🌕)）”』」’。]{0,5}(?:(?:\\n⚙️.+⚙️\\n|[^（()）\\n”』」。]{0,5}📑)[^（()）\\n。]{0,5}(?:\\n⚙️.+⚙️(?:\\n(?=\\n⚙️|[^（()）\\n]{1,5}\\n))?|[^（()）\\n。]{0,5}📑(?:[^📑]{1,5}(?=\\n⚙️))?)+(?:[^（()）\\n]{1,5}(?=\\n))?|(?:(?:(?:\\n⚙️.+⚙️\\n|[^（()）\\n。]{0,5}📑)[^（()）\\n]{0,5}){2,}|[^（(🌕)）”』」’\\n。]{0,5}(?:(?:請|关键[词字]|[電电手][腦機]|用戶|瀏覽|[阅閱]讀|推[薦荐]|收藏|分享|文章质量|谢谢(各位|支持|大家)|水印|翻页|点击|下[一\\s]*[页頁篇章回节節话話]|免费|热门|官网|正版|在线|同步|下载|文学|中文|章节|[本网][站址]|站内|小说|更新|无错|[本全][文本章]|首发|广个?告|弹窗|防盗|访问|訪問|txt|TXT|读者|书友|百度|[插说]一?[下句]话?，[\\u4e00-\\u9fa5]{0,5})[^（()）\\n]{0,5})*(?:📑|\\n⚙️[^\\n]+⚙️\\n)[^（()）\\n]{0,5}(?:(?:請|关键[词字]|[電电手][腦機]|用戶|瀏覽|[阅閱]讀|推[薦荐]|收藏|分享|文章质量|谢谢(各位|支持|大家)|水印|翻页|点击|下[一\\s]*[页頁篇章回节節话話]|免费|热门|官网|正版|在线|下载|同步|文学|中文|章节|[本网][站址]|站内|小说|更新|无错|[本全][文本章]|首发|广个?告|弹窗|防盗|访问|訪問|txt|TXT|读者|书友|百度)[^（()）\\n]{0,5})*|[^（(🌕)）\\n”』」’。]{0,3}\\n⚙️.+⚙️\\n[^（()）\\n。]{0,3})(?:[\\u4e00-\\u9fa5]+[！。]?|[^a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5\\n]+)?(?=\\n)))+|\\n⚙️[^\\u4e00-\\u9fa5]+⚙️\\n|📑|\\s*︴\\s*|\\n?⚙️\\n?|\\n[^a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5\\n]{2,}\\n[^🌕a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5\\n“《‘【〖『「]*/g,\"$1\")\n.replace(/(?:(?:\\n🌕[^\\n]*)+(?:\\n+[^\\n]+){0,4}|\\n(?:[(（{｛][^(（<{｛｝}>）)]*(?:(?:[(（{｛][^(（<{｛｝}>）)]*[）)｝}])[^(（<{｛｝}>）)]*)*[）)｝}]?\\s*)+|[^\\n]*起点(?:原创|中文)[^\\n]*|[〖【『「（《〈〔［｛\\[{(]?未完待续[^\\n]*)[^\\u4e00-\\u9fa5<>]*$|^\\s*(?:(?:[^\\n]+\\n+){0,4}(?:🌕[^\\n]*\\n?)+|(?:[(（{｛][^(（<{｛｝}>）)]*(?:(?:[(（{｛][^(（<{｛｝}>）)]*[）)｝}])[^(（<{｛｝}>）)]*)*[）)｝}]?\\s*)+|，[^\\n]+)\\n|(?:^|\\n)[^a-z0-9A-Z\\u4e00-\\u9fa5]*(?=\\n)|🌕|\\n\\s*[a-zA-Z]+\\s*$/g,\"\")}",
            "sourceRegex": "",
            "webJs": ""
        },
        "ruleExplore": {
            "bookList": ""
        },
        "ruleSearch": {
            "author": "@get:{au}",
            "bookList": ".results>.vrResult:has(h3 a):not(:has(:matches(^(广告|推广|手游)$)))",
            "bookUrl": "@get:{url}",
            "coverUrl": "img@src",
            "intro": "p[class~=^clamp\\d+$]@text##^简介：",
            "kind": "{{@.ellipsis:contains(状态：)@text}},@get:{类}##,$|^状态：|^,",
            "lastChapter": "h3 a@href\n@js:if(url=result.match(/&url=([^&]+)/))result=url[1].replace(/%([0-9A-Z]{2})/g,(_,it)=>String.fromCharCode(+('0x'+it)));\njava.put(\"url\",result)\n##[^/]+//",
            "name": "h3 a@text\n@js:\nre=String(src).replace(/\\s*(?:&nbsp;)+\\s*/g,\" \").replace(/\\s*<\\/?em>\\s*/g,\"\");\n\n类=(类=re.match(/(?:[\\s\\[\\];?!,.()、，；？！。…─（）［］〖〗【】》]|<[^a/][^>]*>|<\\/[^>]+>)(?:[分大]\\s*类|类\\s*[型别])(?:[:：\\s]|<[^>]+>)+([^\\s<\"./／｜|>]+)/))?类[1]:'';\njava.put(\"类\",(正=result.match(/^正版$|[^\\s\\d［\\[\\]］]+(?=\\]|］)/))?正[0]+','+类:类);\nkey=java.get(\"key\");\nax=java.get(\"aut\");\n\njava.put(\"源\",r=(r=result.match(/(.{0,2})《([^《》]+)》(.{0,3})/))&&r[3]!=\"作品集\"&&!r[1].match(/新[书作]/)?r[2]:result);\n\nr=r.replace(/^(简介页|详情页|目录页|正版|全本|免费阅读|[\\s。.,_/|《「『【〖（(\\[\\])）〗】』」─—-]+)+/,\"\").replace(/(?!^)[^\\u4e00-\\u9fa5a-zA-Z0-9]*(?:笔趣阁|思路客|燃文|小说|漫画|手机)?(?:[.|,_/\\s「『【〖（(\\[\\])）〗】』」。─—-]|(?:人工|机器|电脑)?校正|精校|完[整结]|加料|番外|未删节|简介|全[文本集]|下载|(?:小说|漫画|大全|正版(?:小说|漫画)?|免费|免费小说|免费漫画|免费全[文本]|在线|最[新快]|全部|手机|电脑)(?:全[文本集部]|大全|免费|在线|阅读|下载|章节|小说|更新|漫画|\\.)|([^a-zA-Z0-9])(?:azw|mobi|epub|txt)(?![a-zA-Z0-9])|(?:最全)?(?:章节|目录|列表){2,}|更新章节最快|无广告|(?::顶点)?无弹窗|无防盗|小说网|手打全文|[纯全](?:手打|文字)|\\s*by\\s*(?=[\\u4e00-\\u9fa5]))[\\S\\s]*/i,\"$1\");\n\nif(ax==\"#\"||!~re.indexOf(ax)){\nax=re.match(/《([^《》]+)》作品集|[\\s\\[\\];?!,.()、，；？！。…─（）［］〖〗【】《》>]作\\s*者(?:[:：\\s“\"'(（]|<[^it\\/][^>]*>|<\\/[^>]+>)+(?![^\\s<(《“（）”》)>\\/\\[\\];?!,、，；？！。…─［］〖〗【】]*\\.{3}<)([^\\s<(《“（\"'）”》)>\\[\\];?!,、，；？！。…─［］〖〗【】/／｜|:：]+?)(?=(?:其[他它]|小说|[更最][快新]|\\.\\s*)?..[:：]|所?写?的《|[\\s<(《“（\"'）”》)>\\[\\];?!,、，；？！。─［］〖〗【】/／｜|])/);\nif(!ax){\nax=re.match(new RegExp(r+\"[^a-z0-9A-Z\\\\u4e00-\\\\u9fa5]*([^\\\\s]+?)\\\\s+著|(?:由|原创)(?:(?:原创|网络)?作[家者])?(?![\\\\u4e00-\\\\u9fa5a-zA-Z0-9_-]*(?:[书网]友|网)所?提供)([\\\\u4e00-\\\\u9fa5a-zA-Z0-9_-]+?)(?:为大家)?(?:所作|所?(?:(?:[精倾]心)?[创著]作|提供|写?的(?:《|\"+r+\")))\"));\nif(!ax)ax=result.match(/[^.|,_/\\s\\[\\]（()）【〖〗】。-]+[（(](?![^\\s]+[\\s、：；？！…─“‘《〖【，。:;?!\"'】〗》’”][^(（）)]+|(?:连载中?|完本|大结局|上|中|下|[\\s.一二三四五六七八九十百千万〇零0-9]+)[）)])([^（()）]+?)(?:(?:\\s+|所)?著|的?新书|[/／｜|][^)）]+)?[)）]/)}\nax=ax?ax[1]||ax[2]:\"\"}\n\nif(!ax.length&&~re.indexOf(key)&&!~r.indexOf(key))ax=key;\n\nif(r.indexOf(ax)>0&&!~key.indexOf(r))r=r.split(ax)[0].replace(/[:：]$/,'');\n\nzt=[(小说=key.indexOf(\"小说\"))&&小说^(长=key.length-2),(有声=key.indexOf(\"有声\"))&&有声^长];\nif(zt[0]&&zt[1]){\nrez=\"(?!^)(有声|小说|有声小说)$|^(有声|小说|有声小说)(?!$)\"\n}else if(zt[1]){\nrez=\"(?!^)有声$|^有声(?!$)\"\n}else if(zt[0]){\nrez=\"(?!^)小说$|^小说(?!$)\"\n}else rez=\"☯\";\nif((漫画=key.indexOf(\"漫画\"))&&漫画^长)rez+=\"|(?!^)漫画$|^漫画(?!$)\";\n\nix=r.replace(new RegExp(rez),\"\").split(/[：:]/);i=0;\n\nwhile(i<ix.length){x=ix[i];\nif(~x.indexOf(key)||~key.indexOf(x))break;i++}\nif(i==ix.length)i=0;\n\njava.put(\"au\",ax);\njava.put(\"bb\",ix.slice(i,i+2).join(\":\"))",
            "wordCount": "class.chapter-title@tag.p.0@text"
        },
        "ruleToc": {
            "chapterList": "@js:if(java.get(\"单\")==''){\nsrc=org.jsoup.Jsoup.parse(src);\n\nif((result=java.get(\"录\"))==\"\"){if(页=(result=src.select('a[href~=\\\\S]:matches(下[一\\\\s]*[页頁]|下[一二三四五六七八九十百千万〇零0-9]{2,}章):not([href~=^#|javascript:])')).size())result=result.first().attr('href')\n}else{网=String(result).split(\"🌕\");\nfor(i=3,页=+网[0],result=网[1]+2+网[3];i<=页;i++)result+='\\n'+网[1]+i+网[3];\nresult=String(result)}\n\nif(页)java.put(\"页\",/,/.test(book.tocUrl)?result.split('\\n').join(',{\"webView\":true}\\n')+',{\"webView\":true}':result);\n\n嗅=()=>String(src).match(/[\\[(]([\"'])<[a-z]+[ >][^\\[\\]()]+<\\/a>(?:[^\\[\\],()]*<\\/[a-z]+>)?\\1[\\])]/);\n转=it=>it.replace(/\\\\[Uu]([0-9a-zA-Z]{4})/g,(_,it)=>String.fromCharCode(parseInt('0x'+it)));\n兜=()=>src.select(':matchesOwn(^$|[0-9〇一二三四五六七八九十])>a:matches(\\\\S):not(:has(*>*>:not(span)),[href~=(?i)passport|\\\\.aspx$|\\\\.php$|^https://[^/]+(/|index\\\\.[a-z]+)?$|(^|[^/])[?/].*((book|[^a-z])(info|case|page|reg|Game|Play)[^a-z]|buy[^a-z]|SystemInfo|hot|sort|desc|asc|top|coins|nutrition|review|ticket|update|(app|author|xiazai|down)(?!=))|/list\\\\d*([/_-][^/_-]+/?)?$|\\\\d+_\\\\d+_\\\\d+|target=iframe|https%],:matches((?i)^((点击|软件|应用|安装|客户|移动|手机|电脑|安卓|苹果|下载|阅读|pc|ap[kp]|ipa|plx|deb|exe|zip|rar|txt|epub)[\\\\s.端版]*(?=$|点击|软件|应用|安装|客户|移动|手机|电脑|安卓|苹果|下载|阅读|pc|ap[kp]|ipa|plx|deb|exe|zip|rar|txt|epub)|[A-Za-z0-9\\\\u4e00-\\\\u9fa5]?返回.*(简介|书页|目录)[A-Za-z0-9\\\\u4e00-\\\\u9fa5]?|[<>-]+|\\\\d+-\\\\d+章|书页|目录|简介|[上下首尾]([一\\\\s]*[页頁]|[\\\\s\\\\d零〇一二三四五六七八九十百]*章)|[↑\\\\[]?[倒正反逆顺順]序[↓\\\\]]?)$))');\n\nif((zt=java.get(\"嗅\"))!=''){\nif(zt>0&&(嗅=嗅())){\nsrc=嗅[0];\nif(zt==2)src=转(src);\nsrc=org.jsoup.Jsoup.parse(src)}\nsrc.select(java.get(\"除\")).remove();\nif(java.get(\"兜\")==1)src=兜();\nsrc=src.select(java.get(\"查\"))\n\nif(!页){for(首=String(java.get(\"首\")).split('\\n'),ss=src.size(),i=0;i<ss;i++)if(首[i]!=src.get(i)){\nif(i>1)src.subList(1,i).clear();break;}}\n\n}else{\nbook.putVariable(\"除\",除=\"meta,link,a:has(img),\"+((zt=java.get(\"全\")!=1)?\"a[href$=\"+String(book.tocUrl).replace(/,\\{\"webView\":true\\}|^.{8}[^/]*/g,'')+\"],\":\"\")+(基=String(java.get(\"基\")),基==''?'':\"a[href$=\"+基.replace(/^.{8}[^/]*/,'')+\"],\")+\"a[href~=javascript:|#|[a-z]+[A-Z][a-z]+Id[=_-]|[^/][/?&]sub[A-Z]|action=list],a:matches(^$|最新章节$|^[^\\\\u4e00-\\\\u9fa5A-Z0-9]*(正文|.{0,2}书架|(免费|在线|开始|立即|全文|从头|点击|正文)+[试阅]读|[^\\\\s\\\\d外内楔前后卷篇章]*(更新调整|[两一二三四五六七八九十]+连更|作者[:：给要有]|双倍月票|感言|推书|推[a-z0-9A-Z_\\\\u4e00-\\\\u9fa5-]+书|[求个请投点下张](月?票|收藏|订阅|推荐)|(感谢|作者)[^\\\\s]*(读者|书友|大家|各位)|[书点]评[^\\\\s]*活动|[没有空]更新|没时间更新|请个?假|关于本书|关于更新|打赏名单|起点活动)[^\\\\s]*)[^\\\\u4e00-\\\\u9fa5A-Z0-9]*$)\");\n\nbook.putVariable(\"嗅\",(基=嗅())?(src=org.jsoup.Jsoup.parse((zt=/\\\\[Uu]([0-9a-zA-Z]{4})/.test(基=基[0]))?转(基):基),zt)?2:1:0);\nsrc.select(除).remove();\n\nif(zt=java.get(\"全\")!=1){\n找=ll=null;\n$=it=>(qc=ll,查=找,ll=src.select(找=it)).size()>14&&(查=it,src=re=ll);\n\nif(!(((ck=java.get(\"ck\"))!=\"\"&&$(\"[href~=\"+ck+\"(?!index(/|\\.[a-z]+)?$)[^.?/_-][^&/_-]*/?$|/[vV][iI][pP][_-]?([Rr]ead|[Cc]hapter|action=article)|([A-Za-z]\\\\d+|\\\\d[A-Za-z]+|[A-Z][a-z]+|[a-z][A-Z]+){3,}[^/?&]*$]\"))||$(\"[href~=^[a-z0-9]+(/|\\\\.[^./]+)?$]\"))){\nif(qc&&qc.size()>ll.size())找=查,ll=qc;\n\n$=it=>(re=src.select(it)).size()&&(查=it,src=re);\n\nif(!($(\"[data-cid]\")||$(\"[href~=(?i)(^|[/_-])(chapter|read)+([_-]?id)?/[^/_-]+[/_-][^/_-]+]\")||$(\"[href~=(?i)(^|[&?/_-](book|novel|comic|manhua|mh?)?)(chapter|read)+([_-]?id)?[?/=]]\")||$(\"[href~=(?i)[&?/_-]cid[&?/_=-]]\")||$(\"[data-href]\"))){\nsrc=兜();\nbook.putVariable(\"兜\",1);\n\nba=(ba=String(java.get(\"ba\"))).match(/(\\?(?:[^=]+=)+)(.+)$/)||ba.match(/(?:[^/_-][/_-]([^/._-]+))?[/_-]([^/._-]+)(?:\\/|\\/index[^/]*|\\.[^/.]+)?$/);\n\nif(xi=(id=ba[2]).match(/\\?[^=]+=([^&]+)/)||id.match(/^[^\\d%]*(\\d{2,}|[1-9])$/)||ba[1]&&ba[1].match(/^[^\\d%]*(\\d{2,})$/))id=xi[1];\n\n$(\"[href~=([^\\\\d]|^)\"+id+\"[/_&-][^\\\\d]*\\\\d+]:not([href~=\"+id+\"[^\\\\d]*$]),[href~=/[vV][iI][pP]|([A-Za-z]\\\\d+|\\\\d[a-zA-Z]+|[A-Z][a-z]+|[a-z][A-Z]+){3,}[^/?]*$|([^\\\\d]|^)\"+id+\"[/_&-][^\\\\d]*\"+id+\"(/|\\\\.[^.]+|&.+)?$]\")||$(\"[title]\")||$(\"[href~=/view/\\\\d+\\\\.[a-zA-Z]+$]\")}\nif(re.size()<ll.size())查=找,src=ll}}\n\nif(!(zt&&re.size()))src=src.select('a'),查='a';\nif(查)book.putVariable(\"查\",查);\nif(页)java.put(\"首\",src)}\n\nsrc}else if((list=java.get(\"单\"))!=1){\n\nif((网=String(list).split(\"🌕\")).length>1){\nfor(i=+网[2],x=+网[0],j=2,list=\"<a href='\"+baseUrl+\"'>正文1</a>\";i<=x;i++,j++)list+=\"<a href='\"+网[1]+i+网[3]+\"'>正文\"+j+\"</a>\"}\n\norg.jsoup.Jsoup.parse(list).select('a')\n\n}else org.jsoup.Jsoup.parse(\"<a href='\"+baseUrl+\"'>正文</a>\").select('a')",
            "chapterName": "text",
            "chapterUrl": "href@js:chapter.putVariable(\"next\",'a[href~=(?:^|[?/])'+(r=result.trim().replace(/([*$|?+(){}\\[\\]\\^\\\\])/g,'\\\\$1')).match(/[^?/=.]+(?:=(?![01]$)[^=]+)*(?=\\/*$|\\.[^?/.]+$|=[01]$)/)[0]+'[=/_-]2(?:\\\\/|\\\\.[^?/.]+)? *$]@href||a[href~=(?:^|[?/])'+r.replace(/\\d+(?=[^\\d]*$)/,it=>+it+1)+' *$]@href||');result+java.get(\"动\")",
            "isVip": "",
            "nextTocUrl": "@js:java.get(\"页\")",
            "updateTime": ""
        },
        "searchUrl": "https://www.sogou.com/web?page={{page}}&query={{\nkey=key.trim();aut=\"#\";\nif(ke=key.match(/^([单跳逆动静字图]+)\\^([\\S\\s]+)/))key=ke[2],java.put(\"custom\",ke[1]);\nz=key.lastIndexOf(\"#\")+1;\ns=key.lastIndexOf(\"$\");\nif(/\\$[a-zA-Z0-9/._-]+$/.test(key))key=key.slice(0,s).concat(\" site:\",key.slice(s+1));\ns=s+1?s:key.length;\nas=key.slice(z?z:s,s);\nif(!/^\\s*$/.test(as)){\naut=as.match(/[^\\s\"]+/)[0];\nkey=key.slice(0,z-1).concat(\" \",key.slice(z))}\njava.put(\"aut\",aut);\njava.put(\"key\",key.match(/[^\\s\"]+/)[0]);\nkey}}",
        "weight": 0
    },
    {
        "bookSourceComment": "─────当前版本Pro V50─────\n\n点击登录即可查看:\n\n0、书源制作思路\n\n1、版本更新日志\n\n2、书源用法展示\n\n3、相关问题解释\n\n───────搜索格式────────\n\n完全格式：书名#作者$网站\n简化格式1：书名$网站\n简化格式2：书名#作者\n简化格式3：书名\n\n说明：搜索“斗破苍穹#天蚕土豆$www.qidian.com”将在“www.qidian.com”中搜索名为斗破苍穹、作者为天蚕土豆的书籍\n\n──────前缀设置全体───────\n\n用法：“单跳逆原动静字图”等字后跟“^”再跟“搜索关键字”，可实现这些字对应的功能。\n\n范围：本次搜索到的所有书籍都会执行指定的功能。\n\n示例：“图^斗破苍穹”、“逆静^斗破苍穹#天蚕土豆”、“跳^斗破苍穹$www.qidian.com”。\n─────⤵\n跳：允许目录自动跳转，目录标题说点击跳转时可如此做。\n\n逆：设置书籍目录章节逆向排序，配合指定网站的搜索方式针对小说全是逆向排序的网站比较方便。\n\n原：设置书籍不进行净化替换，优点是加载正文快速且不会被误删内容，缺点是需要自己写“替换净化”规则并在正文中启用才能净化网站推广文本。\n\n动：强制设置正文动态加载(正文默认会进行需要动态加载还是静态加载的判断，然后自动切换模式，若判断失误导致本应切换成动态加载却未切换时，可强制设置正文动态加载)。\n\n静：强制设置正文静态加载(正文默认会进行需要动态加载还是静态加载的判断，然后自动切换模式，若判断失误导致本应保持静态加载却切换成动态加载而使正文加载时间变长时，可强制设置正文静态加载)。\n\n图：设置成看图模式(不设置则默认图文模式)，只显示图片，不显示文字。\n\n字：设置成纯字模式(不设置则默认图文模式)，只显示文本，不显示图片。\n─────⤴\n\n──────书籍变量设置───────\n\n用法：\n将“单直跳全逆原图字动静”中任意多个字\n或“[目录url]”或“[正文尾页url]单”\n或“数字#第二页链接#”\n或“[目录尾页url]录”\n放在详情页右上角的书籍变量中，\n确认后点刷新就能触发这些字段对应的功能。\n\n范围：只控制当前书籍执行指定功能。\n\n书籍变量格式示范：[http://m.biquku.la/0/425/]全字\n\n─────⤵\n直：不做目录识别，直接将详情页作为目录页，或以“[目录链接]”格式直接指定目录链接，目录识别错误时可这种做。\n\n全：直接显示“预览正文”和查询到的所有章节，跳过章节筛选环节，单页文章和部分筛选后章节不全的小说网站可这样做。\n─────⤴\n\n──目录有分页却无翻页按钮或书籍无目录──\n\n单：无目录打开即正文但有尾页或下一页按钮的书籍，必须设置为单向模式，这样书源会直接将入口页作为正文第一页，并将第一页及其所有下一页共同构造生成“正文1”、“正文2”…的目录形式来阅读，搜索前缀“单^”、书籍变量“单”。\n\n录：有目录分页但无目录下一页按钮的书籍，可在书籍变量中直接指定复制到的最后目录页链接为目录链接并添加指令“录”，即可自动生成所有目录分页。\n书籍变量：“[https://m.zuizaoxiaoshuo.com/ml/33280_13]录”\n\n辅助生成──无目录打开即正文也无尾页和下一页按钮的书籍，需指定章节数量并用第二页链接作为参考链接生成所有分页。\n书籍变量──220#https://wap.yqshuwang.com/2021n/02/14972_2.html#\n效果说明──根据第二页链接“https://wap.yqshuwang.com/2021n/02/14972_2.html”生成220条章节的目录列表。\n\n单个章节──目录仅一个章节且这个章节正文中无下一页按钮时，可复制那个章节的正文尾页链接并用指令“单”，便可将所有正文分页构造成章节列表。\n书籍变量──[http://www.yulinzhanye.la/20/20733/532447_9.html]单\n\n───────谷歌域名说明──────\n\n谷歌会逐个访问域名直到返回正确结果，可把可用域名放在“源变量”中(若不设置源变量，则默认使用内置的多个镜像域名和原域名组成的列表)\n\n形如：https://www.google.com/search?q=\n\n放置多个域名请用换行分隔",
        "bookSourceGroup": "📑谷歌搜书,通用",
        "bookSourceName": "谷歌搜书",
        "bookSourceType": 0,
        "bookSourceUrl": "谷歌搜书",
        "bookUrlPattern": "",
        "customOrder": 70,
        "enabled": true,
        "enabledCookieJar": false,
        "enabledExplore": true,
        "exploreUrl": "",
        "header": "{\"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36\"}",
        "lastUpdateTime": 1650209794295,
        "loginUrl": "https://gitee.com/no-mystery/shuyuan/",
        "respondTime": 180000,
        "ruleBookInfo": {
            "author": "@get:{x}",
            "canReName": "true",
            "coverUrl": "@js:(s=java.getStringList('img[alt*='+book.name+']@src||meta[property$=image]@content||img[src~=(cover|file|article)[^a-z]|/\\\\d+[/_-]\\\\d+(s?\\\\.|$)]@src||img[data-src~=\\\\S]@data-src||img[src*=/img]@src||img[src~=^(data|https?):|^[^:]+/]@src')).size()?/^data:/.test(s=s.get(0))?java.base64Encode(s):s:null",
            "init": "",
            "intro": "@js:'　　'+java.get(\"g\")",
            "kind": "@js:java.get(\"v\")",
            "lastChapter": "@get:{z}",
            "name": "@js:r=org.jsoup.Jsoup.parse(result);\nr.select(\"script,noscript,style,head>:not(meta),footer,[class~=^foot],[id~=^foot],a:has(>:last-child:matchesOwn(^分类$)),[value]\").remove();\n\nn=String(book.name);\nm=String(r).replace(/(?:&nbsp;)+/g,\" \");\n书=java.get(\"源\");\n\nif(x=(y=r.select('[property$=book_name]')).size()){\ny=y.attr(\"content\");\nu=书.indexOf(y)\n}else for(u=true,c=r.select(\"h1,h2,h3,strong\").eachText();x<c.size();x++)if(\n(y=c.get(x))!=''&&(u=书.indexOf(y),~u&&u<4))break;\nif(!~(y=String(y)).indexOf(n)&&~u)n=y;\n\nif((x=r.select(\"[property$=author]\")\n).size()){\nx=String(x.attr(\"content\")).replace(/^作\\s*[者家][\\s:：]*|(?!^)[/／｜|，,\\s][^⚙️]*$/,\"\")\n}else{\nx=m.match(/>\\s*([^>]+?)(?:\\s*<\\/[a-z]+>\\s*|\\s+)著\\s*<|[\\s\\[\\];?!,.()、，；？！。…─（）［］〖〗【】>《》](?:小说|漫画)?作\\s*者(?![^>]+->)(?:[:：\\s〖【（《［\\[\\(]|<[^it\\/][^>]*>|<\\/[^>]+>)+([^\\s<\">,，/／｜|\\)\\]］》）】〗]+)/);\nx=x?x[1]?x[1]:x[2]:(x=r.select(\"#author,.author\"),x.size()?String(x.first().text()).replace(/(?!^)[/／｜|，,\\s][^⚙️]*$/,\"\"):\"\")}\n\nif(n.indexOf(x)>0&&!~java.get(\"key\").indexOf(n))n=n.split(x)[0];\njava.put(\"x\",x);\n\ny=r.select(\"meta[property~=(category|status)$]\");\nc=y.size()?String(y.eachAttr(\"content\"))\n.slice(1,-1).replace(/(?!^)\\s*[，,./／｜|]\\s*/,\",\"):(y=m.match(/(?:[\\s\\[\\];?!,.()、，；？！。…─（）［］〖〗【】》]|<[^a/][^>]*>|<\\/[^>]+>)(?:[分大]\\s*类|类\\s*[型别])(?:[:：\\s]|<[^>]+>)+([^\\s<.\"/／｜|>]+)/))&&y[1];\nif(c)java.put(\"v\",c);\n\ny=r.select(\"meta[property~=latest_chapter_name$]\");\n\nc=y.size()?y.attr(\"content\"):(y=m.match(/>(?:\\s*[更最]\\s*[新近])+(?:\\s*章\\s*节)?(?:[:：\\s\\[]|<[^>]+>)+(?!\\s*(?:-|&gt;)\\s*<|[:：\\s0-9T年月日时分秒*-]{5,}<|[^:：]+[^章\\s]\\s*[:：]\\s*<|更新(?:时间)?[:：])([^<\"/／｜|\\]>]+)/))&&y[1];\nif(c)java.put(\"z\",c);\n\n正=true;\nif((key=String(java.get(\"custom\"))).length){\nif(~key.indexOf(\"全\"))java.put(\"全\",1);\nif((\nu=key.match(/[^\\[\\]]+(?=\\])/),\nc=~key.indexOf(\"录\"),\ny=~key.indexOf(\"单\"),\nbaseUrl=u?u[0]:baseUrl,\n(c||u)&&(baseUrl=c||y?(baseUrl=String((c=baseUrl.match(/(.+[^\\d])(\\d+)([^\\d]*)$/))[1]+1+c[3]),\nc=c[2]+'🌕'+c[1]+'🌕'+2+'🌕'+c[3],\nbaseUrl):baseUrl)\n)||~key.indexOf(\"直\")\n)java.put(\"目\",1),正=1;\nif(~key.indexOf(\"录\"))java.put(\"录\",c),正=1;\nif(y||~key.indexOf(\"#\")){\nif(!u){\nif((网=key.match(/(\\d+)#([^#]+)/))\n&&(尾=网[1],网=网[2].match(/^(.*[^\\d])([12])([^/?\\d]*)$/))\n||(尾=r.select('a[href~=\\\\d[^/?\\\\d]*$]:matches(^(尾|末|最后一)[頁页篇章回节節话話]$)')).size()\n&&(网=r.select('a:matches(^2$)')).size()\n&&(网=String(网.first().attr('href')).match(/^(.*[^\\d])([12])([^/?\\d]*)$/))\n&&(尾=String(尾.first().attr('href')).match(/\\d+(?=[^/?\\d]*$)/)[0])){\nc=尾+'🌕'+网[1]+'🌕'+网[2]+'🌕'+网[3]\n}else if((c=r.select('a:matches(^(\\\\d+|…+|\\\\.+)$)')).size()){\nif((网=String(c).split(/<a[^>]+>[^\\d<]+<\\/a>/)).length==2){\nfor(c=网[0],尾=网[1],x=+网[1].match(/>([^<]+)/)[1],网=网[0].match(/href=\"([^\"]*[^\\d])(\\d+)([^/?\\d\"]*)\"[^>]*>([^<]+)<[^<]+$/),j=+网[4],i=+网[2]-j;j<x;j++)c+=\"<a href='\"+网[1]+(j+i)+网[3]+\"'>\"+j+\"</a>\";\nc+=尾}\n}else c=1}\njava.put(\"单\",c),正=false}\nif(~key.indexOf(\"跳\"))java.put(\"跳\",1);\nif(~key.indexOf(\"逆\"))book.setReverseToc(true);\nelse book.setReverseToc(false);\nif((u=~key.indexOf(\"图\"))||~key.indexOf(\"原\"))java.put(\"原\",1);\nif(~key.indexOf(\"动\"))java.put(\"动\",',{\"webView\":true}');\nelse if(~key.indexOf(\"静\"))java.put(\"静\",1);\nif(u||~key.indexOf(\"字\"))java.put(\"文\",u?1:2)\n}else book.setReverseToc(false);\n\ny=r.select(\"meta[property$=description][content~=\\\\S]\");\nc=y.size()?y.get(y.size()-1).attr(\"content\"):(r.select(':matchesOwn([\\\\u4e00-\\\\u9fa5]{2,})>:not(br),:not(body,br,:matchesOwn([\\\\s\\\\S]{50}),:has(body,:matchesOwn([\\\\s\\\\S]{50})))').remove(),r.select(\":matchesOwn(\\\\S)\").text());\n\njava.put(\"g\",String(c!=\"\"?c:book.intro).replace(/[\\snbsp;]*(?:&nbsp;|\\s){2,}|\\s*([？！。]+[”」』\\]\\}\\)）｝】〗〕〉]?)\\s*/g,\"$1　　\").replace(/(?=　　)/g,\"\\n\"));\n\nif(正==1)m=java.ajax(baseUrl);\njava.setContent(m,baseUrl);\n\nif(正){\nzl=java.getStringList(\"[property$=latest_chapter_url]@content||:matches(^最新章节)>a:only-child:not([href~=^$|#|javascript:])@href||a:matches(^正文\\\\s*[\\\\d第一二三四五六七八九十〇零百千]|^[【《]?(\"+n+\")?[\\\\s》】（\\\\u0028:：＿_－-]*(第[\\\\s0〇零]*[一1]\\\\s*[\\\\u4e00-\\\\u9fa5]|([\\\\u4e00-\\\\u9fa5]{2}阅读[（\\\\u0028:：＿_－-]?)?(0*1([）\\\\u0029.、:：_-]|$)|[〇零]*一([）\\\\u0029\\\\s.、:：_-]|$)))):not([href~=(^|[^/])/[vV][iI][pP]|([A-Za-z]\\\\d+|\\\\d[A-Za-z]+|[A-Z][a-z]+|[a-z][A-Z]+){3,}[^/?&_-]*$|^$|#|javascript:|\"+(bas=baseUrl.replace(/\\/+$|\\.[a-zA-Z]+$/,'')).match(/[^?/]+$/)[0].replace(/([*$|?+\\\\\\^\\[\\](){}])/g,'\\\\$1')+\"(?:[/_-]1)?(?:\\\\/|\\\\.[a-zA-Z]+)?$])@href||a:matches(^[^\\\\u4e00-\\\\u9fa5]*(免费|在线|开始|立即|全文|正文|从头)+[试阅]读[^\\\\u4e00-\\\\u9fa5]*$):not([href~=^$|#|javascript:])@href||a:matches(^0*1[^\\\\d]):not([href~=(^|[^/])/[vV][iI][pP]|([A-Za-z]\\\\d+|\\\\d[A-Za-z]+|[A-Z][a-z]+|[a-z][A-Z]+){3,}[^/?&_-]*$|^$|#|javascript:])@href\");\n\nif(zl.size()&&(ck=String(zl.get(0)).match(/^(.*\\/\\/[^/]+)?([/?]?[^/].+[?&/_-])[^&/_-]+\\/?$/)))(jd=ck[1])&&(h=baseUrl.lastIndexOf('/',baseUrl.indexOf(jd.match(/(?:\\.[^.]+){2,}$|[^./]+\\.[^.]+$/)[0])))>8&&(\nq=baseUrl.indexOf(':'),\n(bas=java.get(baseUrl=baseUrl.slice(0,q+2)+baseUrl.slice(h),{})).statusCode()==200&&java.setContent(bas.body(),baseUrl)\n),java.put(\"ck\",ck[2])}\nn",
            "tocUrl": "@js:if(java.get(\"单\")==''){\nif(java.get(\"录\")==java.get(\"目\")){\nr=org.jsoup.Jsoup.parse(result);\n\nscript=r.select(\":matchesOwn(^$)>a[href^=javascript:]:matches(全文|章[節节]|目[錄录]):not(:matches(最新))\");re=false;\n\nif(!script.size()){\nba=(bas=baseUrl.replace(/\\/$|\\.[a-zA-Z]+$/,'')).match(/(http....[^/?]+)(?:([?/])(.*))?$/);b=ba[1];v=ba[3];\n\nr.select(\"a[href~=[^a-z]page[^a-z]]:not(:matches([反正顺順逆倒]序|[全正]文|更多|全部|所有|章[節节]|作品|目[錄录]|列表)),a:not([href~=^(?!//)[^#:]+$|\"+b.split(':')[1]+\"]),:matchesOwn(\\\\S)>a,a[href~=javascript:|#],a:matches(^\\\\S{1,4}$):not(:matches([反正顺順逆倒]序|[阅閱][讀读]|查看|展[开開]|进入|[全正]文|更多|完整|全部|所有|目[錄录]|列表|章[節节]):not(:contains(分类)))\").remove();\n\ny=r.select(\"a[href~=(?i)catalog|contents|chapters|mulu|(^|[^a-z])ml|showchapter|(^|chapter[/_-]?|\"+v.replace(/(.+)((\\/\\d\\d)\\d+)$/,\"$1$3$2\")+\"[/_-])(more|list|all)|sort[/=_-]asc]\");\n\nif(!y.size()){b3='';\n\nif(ba[2]==\"?\"){\nb3='[href~=^[^?]+$],'\n}else if(ba[3]){\nb3=ba[3].replace(/[*$|?+\\\\\\^\\[\\](){}]/g,'\\\\$0');\n\nb3=\"[href~=\"+b3+\"(\\\\.[^.]+|/\\\\d+(\\\\.[^.]+|/)?)?$],[href~=[/?]\"+b3.replace(/[&/_-][^/_-]+$/,'')+\".*$]:not([href~=[/?]\"+b3.replace(/[/_-]/g,'[/_-]')+\"]),\"}\n\ny=r.select(\"a:not(\"+b3+\"[href~=(?i)(^|[^/])[?/].*((book|[^a-z])(info|case)[^a-z]|(cid|buy)[^a-z]|desc|coins|nutrition|review|ticket|update|(app|author|xiazai|down)(?!=))|/chapter|/index/|/d/],:matches((?i)^$|[0-9零〇一二三四五六七八九十百千万、，：；？！。…‘’“”（）()]|[票榜:：.]|推荐|排行|等级|说明|收藏|书评|简介|分[类卷]|简介|作者|手机|软件|应用|安装|客户|移动|pc|电脑|安卓|苹果|下载|最新|ap[kp]|ipa|plx|deb|exe|zip|rar|txt|epub))\")}\n\nif(y.size()){\nys=y.select(\"a[href~=(?i)catalog|contents|list|chapter|mulu|(^|[^a-z])ml|more|read|all]:matches([反正顺順逆倒]序|全文|章[節节]|目[錄录]):not(:matches(阅读)),a[href~=(?i)catalog|contents|chapter|(^|[^a-z])ml|mulu|read]:matches(更多|列表),a[href~=(?i)catalog|contents|list|chapter|mulu|(^|[^a-z])ml|more|all]:matches(^$),a:matches(^[^\\\\u4e00-\\\\u9fa50-9]*([反正顺順逆倒]序|全文(免[費费])?[阅閱][讀读]|(点击|查看|展[开開]|进入|返?回到?)*([全正]文|(更多|完整|全部|所有)?(章[節节]|(作品)?目[錄录])+)+(列表)?(\\\\s*(查看|展开)?更多)?)[^\\\\u4e00-\\\\u9fa50-9]*$)\");zt=false;\n\nif(!ys.size()){\nba=bas.match(/(\\?(?:[^=]+=)+)(.+)$/)||bas.match(/(?:[^/_-][/_-]([^/._-]+))?[/_-]([^/._-]+)(?:\\/index[^/]*)?$/);\n\nif(xi=(id=ba[2]).match(/\\?[^=]+=([^&]+)/)||id.match(/^[^\\d%]*(\\d{2,}|[1-9])$/))id=xi[1];\nif(ba[1])if(xi=ba[1].match(/^[^\\d%]*(\\d{2,})$/))id=/^\\d$/.test(id)||!xi[1].indexOf(id)?xi[1]:\"(\"+id+\"|\"+xi[1]+\")\";\n\nys=y.select(\"[href~=(?i)^((.*//[^/]+/)?[^=.]*[^\\\\d=.])?\"+id+\"([?_-][a-z=_-]*0|\\\\.[^.]+|[/?]([^\\\\d]*|[^/\\\\d]*/?|(list|more|all)([=_-][a-z]*)?\\\\d+[^\\\\d]*)?)?(&.+)?$]:not(:contains(\"+(bs=String(book.name)[0])+\"))\");\n\nif(!ys.size()){zt=true;\nys=y.select(\"[href~=(?i)^((.*//[^/]+/)?[^=.]*[^\\\\d=.])?(\\\\d+/\"+id+\"[_-]\\\\d+[^\\\\d]*|\"+id+\"[_-][a-z_-]*1[^\\\\d]*)$]:not(:matches(阅读|\"+bs+\"))\")}}\n\nif(ys.size()){\nif((re=ys.select(\"[href~=(/|^)[^.]+$]\")).size())ys=re;\nre=String(ys.first().attr(\"href\"));\n\nfor(x=1;x<ys.size();x++)if((xs=String(ys.get(x).attr(\"href\"))).length>re.length)re=xs;\n\nif(/(?:[2-9]\\d*|1\\d+)[^\\d]*$/.test(re)){\nif(!zt&&(q=re.match(/^(.*[^/])?[&?/].*(?:catalog(ue)?|contents|(?:show)?chapters?|mulu|ml|more|all|list|page)(?:[=_-][a-z]*)?\\d+[^\\d]*$/i))&&v==(q[1]||'').replace(/^http....[^/?]+/,''))zt=true;\nif(zt)re=re.replace(/\\d+(?=[^\\d]*$)/,\"☯1\")}\n\n}}}\n\nre=String(!re?baseUrl:(java.put(\"基\",baseUrl),/^\\/[^/]/.test(re)?b+re:/^https?:/.test(re)?re:/^\\/\\//.test(re)?b.split('//')[0]+re:String(baseUrl).replace(/[^/]*$/,'')+re))}else re=baseUrl;\n\nr=re.replace(/(?:[☯?&/_-][^\\d?/&_-]*[01])+[^\\d]*$/,\"\");\njava.put(\"ba\",r);\nre=re.replace(\"☯\",\"\")}else re=baseUrl;\n\njava.get(\"跳\")==1?re+',{\"webView\":true}':re",
            "wordCount": "{{baseUrl}}##//([^/]+)##$1##"
        },
        "ruleContent": {
            "content": "@js:dt=lr='';c=1;动=java.get(\"动\");\nif(动!=''&&!~baseUrl.indexOf(\",\")){\nresult=String(java.ajax(baseUrl+动))\n}else if(java.get(\"静\")==动)c=dt=2;\n\nr=org.jsoup.Jsoup.parse(r1=result.replace(/&nbsp;/g,' '));\n查=i=java.get(\"序\");\n\nif(java.get(\"文\")==1){for(;c;c--){\nd=[\"img[data-src],img[src~=[^a-z]cid[^a-z]]\"\n,\"img:not([src~=(?i)^$|^javascript:|\\\\.gif|\\\\.png|[^a-z](cover|css|ic(on)?|load(ing|ed)?)[^a-z]])\"\n,\"img[src~=(?i)\\\\.png]:not([src~=(?i)[^a-z](cover|css|ic(on)?|load(ing|ed)?)[^a-z]])\"\n,'img[src~=(?i)\\\\.gif]:not([src~=(?i)[^a-z](cover|css|ic(on)?|load(ing|ed)?)[^a-z]])'];\n\nif(!(查!=\"\"&&(查!=-1&&((lr=r.select(d[查])).size(),true)))){\n$=it=>(lr=r.select(it)).size();\nif($(d[i=0])||$(d[i=1])||$(d[i=2])||false)break;\n\nif(c==2){dt=1;\nr=org.jsoup.Jsoup.parse(java.ajax(baseUrl+',{\"webView\":true}'))\n}else i=$(d[3])?3:-1}}\nif(i==0)lr=String(lr).replace(/(?:src=['\"][^'\"]+['\"] +)?data-/g,'');\nif(查==\"\")book.putVariable(\"序\",i);\n\n}else{\nsc=java.get(\"文\")==2?\n'[style~=(?i)text-align:center|(^| |;)color: *(rgb.(?!255[ ,]+255[ ,]+255)[\\\\d, ]*2\\\\d\\\\d|#(?=[a-f\\\\d]{3}([^a-f\\\\d]|$))(?!fff)[a-f\\\\d]*[d-f]|#(?=[a-f\\\\d]{4})(?!ffffff)([\\\\da-f]{2})*[d-f][\\\\da-f]|green|red|blue|yellow|purple|pink|brown)],script,noscript,style,header,footer,[class~=^foot|^head],[id~=^foot|^head],:has(>a):not(:has(p:matchesOwn(\\\\S),br)),a>*,:has(a):not(:matchesOwn([\\\\S\\\\s]{50,}),:has(:matchesOwn([\\\\S\\\\s]{50,}))),:matchesOwn([\\\\s\\\\S]{50})>:not(br,a,:matchesOwn([\\\\s\\\\S]{50})),:not(br,p,a,:matches([\\\\s\\\\S]{200}),:has(p,br,div:matchesOwn(，|。)+div:matchesOwn(，|。)),:has(p,br,div:matchesOwn(，|。)+div:matchesOwn(，|。)) :matchesOwn(\\\\S):not(:not(p,div,span:has(br))))'\n:\n'[style~=(?i)text-align:center|(^| |;)color: *(rgb.(?!255[ ,]+255[ ,]+255)[\\\\d, ]*2\\\\d\\\\d|#(?=[a-f\\\\d]{3}([^a-f\\\\d]|$))(?!fff)[a-f\\\\d]*[d-f]|#(?=[a-f\\\\d]{4})(?!ffffff)([\\\\da-f]{2})*[d-f][\\\\da-f]|green|red|blue|yellow|purple|pink|brown)],script,noscript,style,header,footer,[class~=^foot|^head],[id~=^foot|^head],:has(>a):not(:has(p:matchesOwn(\\\\S),br,img:not([src~=(?i)^$|^javascript:|[^a-z](css|ic(on)?|load(ing|ed)?)[^a-z]|/\\\\d+s\\\\.jpg]))),img[src~=(?i)^$|^javascript:|[^a-z](css|ic(on)?|load(ing|ed)?)[^a-z]|/\\\\d+s\\\\.jpg],a:not(:matches(^$)>img)>*,:has(a):not(img,:matchesOwn([\\\\S\\\\s]{50,}),:has(img,:matchesOwn([\\\\S\\\\s]{50,}))),:matchesOwn([\\\\s\\\\S]{50})>:not(img,br,a,:has(img),:matchesOwn([\\\\s\\\\S]{50})),:not(img,br,p,a,:matches([\\\\s\\\\S]{200}),:has(p,br,img,div:matchesOwn(，|。)+div:matchesOwn(，|。)),:has(img,p,br,div:matchesOwn(，|。)+div:matchesOwn(，|。)) :matchesOwn(\\\\S):not(:not(p,div,span:has(br))))';\n\nd=[\":matchesOwn(\\\\S):has(br):has(:matchesOwn(\\\\S):has(br))\"\n,\":matchesOwn(\\\\S):has(br)\"\n,\":has(>:matchesOwn(\\\\S):not(:has(*))+:matchesOwn(\\\\S):not(:has(*)))\"\n,\":has(>:has(>p:only-child:matchesOwn(\\\\S):not(:has(*)))+:has(>p:only-child:matchesOwn(\\\\S):not(:has(*))))\"\n,\"img\"\n,\":matchesOwn(\\\\S)\"];\n\ntry{for(查=i!=''?i:java.get(\"元\");c;c--){\n\nif(!(c>1&&(String(r.text()).length<400||r.select(':matchesOwn(内容未加载完成|关闭(阅读|小说)模式)').size()))){\nr.select(sc).remove();\n\nif(!(查!=\"\"&&(lr=r.select(i?d[i==6?5:i]:查)).size()))for(i=0;i<6&&(lr=r.select(d[i]),i==4&&c==1?!lr.size():String(lr.text()).length<200);i++);\nif(c<2||i<6)break;}\n\nr=org.jsoup.Jsoup.parse(r2=String(java.ajax(baseUrl+',{\"webView\":true}')).replace(/(<[a-z]+)&nbsp;/g,'$1 '));\ndt=r1.length==r2.length?2:1}\n\nfor(c=lr.first(),v=1;v<lr.size();v++)if(lr.get(v).parents().contains(c)){\nlr.remove(v);\nv--}else c=lr.get(v);\n\nlr=String((c=lr.size()==2&&i<4)?String(lr.first().text()).length>String(lr.get(1).text()).length?lr.first():lr.get(1):(c=lr.size()==1)?lr.first():lr);\n\nif(查==\"\"){\nif(c&&(查=lr.match(/<([a-z]+) ([^>]+)>/))&&(查[2]=查[2].match(/(?:id|class|style)=(?:\"[^\"]+\"|'[^']+')|[^= ]+(?==\"[^\"]+\"|'[^']+')/g))){\nbook.putVariable(\"元\",查[1]+'['+查[2].join('][')+']')\n}else book.putVariable(\"序\",i)}\n\nlr=lr.replace(/<([a-z]+)[^>]*\"-\\d+\"[^>]*>[^<]+<\\/\\1>|[^<>]*<a[^<]+<\\/a>[^<]*|&lt[; ]?\\/?[a-z]+(?= |\\/?&gt)(?:[ a-z=-]+|\"[^\"]+\"|'[^']+')*\\/?&gt[; ]?|[☯📑⚙️🌕︴]/g,\"\").replace(/\\s+(?:\\s|(?:(?:(?:n?b)?s)?p)?;)/g,\"　　\");\n\nif(java.get(\"原\")!=1)lr=(!lr.indexOf(\"　　\")?lr.replace(/>(?!　　|\\s*(?:(?:(?:n?b)?s)?p)?;)\\s*(?=[^\\s<>])/g,\">︴\"):lr).replace(/((?:[〖【『「（《〈〔［\\[(][^〖【『「（《〈〔［\\[()］〕〉》）」』】〗\\]]*[)］〕〉》）」』】〗\\]]\\s*)*(?:第?\\s*[一二三四五六七八九十百千万〇零0-9]+\\s*[章节回話话：:.．,，、]*\\s*)?{{n=(t=title.match(/\\S+$/)[0].replace(/[*$|?+\\\\\\^\\[\\](){}/]/g,\".?\")).replace(/^(正文[^\\u4e00-\\u9fa5A-Za-z]*|第?[一二三四五六七八九十百千万〇零0-9]+[章节回話话\\s：:.．,，、]*)+/,\"\"),n!=t&&/\\S/.test(n)?\"(?:第?\\\\s*[一二三四五六七八九十百千万〇零0-9]+\\\\s*[章节回話话：:.．,，、]*\\\\s*\"+n+\"|\"+t+\")\":t}}(?:\\s*[〖【『「（《〈〔［\\[(][^〖【『「（《〈〔［\\[()］〕〉》）」』】〗\\]]*[)］〕〉》）」』】〗\\]])*)/g,\"⚙️$1⚙️\")+\"📑\"\n}catch(e){}}\nif(dt)book.putVariable(dt==1?\"动\":\"静\",',{\"webView\":true}');lr",
            "imageStyle": "FULL",
            "nextContentUrl": "@js:if((r=java.getStringList((nx=java.get(\"next\"))+\"a:matches(第二[頁页]|下[一\\\\s]*[頁页]):not([href~=^javascript:|^#])@href||a:matches(下[一\\\\s]*[篇章回节節话話]):not([href~=^javascript:|^#])@href||a[href~=[_-]\\\\d+(/|\\\\.[a-z]+)?$]:has(i,img):not(:matches(\\\\S),[href~=^javascript:|^#])@href\")).size()){\nif(~String(book.tocUrl+(nextChapterUrl||'')).indexOf(r=String(r.get(r.size()-1)))||~r.indexOf(nextChapterUrl||String(book.tocUrl).replace(/.+(?=_\\d+\\/$)/,'')))r=null\n}else r=null;\nif(r){if(nx!='')chapter.putVariable(\"next\",(n=r.replace(/\\d+(?=[^\\d]*$)/,it=>+it+1))==r?'':'a[href=\"'+n+'\"]@href||');\nr+java.get(\"动\")}",
            "replaceRegex": "@js:if(java.get(\"原\")==1){result}else{\nresult=result.replace(/⚙️([^\\u4e00-\\u9fa5⚙️]+|[零〇一二三四五六七八九十百千万\\s]+|(?!第[零〇一二三四五六七八九十])[\\u4e00-\\u9fa5]+)⚙️/g,'$1').split('📑');\nl=result.length-1;\nwhile(l)if(r=result[--l].match(/^(\\n+(?:[^\\n]{1,30}\\n+){1,3})([\\S\\s]+)$/))result[l]=r[1]+r[2].replace(/⚙️/g,'');\nresult.join('📑')\n.replace(/—/g,\"─\")\n.replace(/[·۰•・]/g,\"・\")\n.replace(/\\s*(?:︴[^\\n　]+\\s+)*📑\\s*|^\\s*(︴[^\\n　]+\\s+)*|\\s*(?:　　|\\n)(?:[\\s&#a-zA-Z0-9]*;)?[\\s　?]*/g,\"☯\")\n.replace(/(?:︴[^☯]*☯)+(?=︴)|☯(?:温馨|[^a-zA-Z0-9\\u4e00-\\u9fa5☯]+)提示.?[:：][^☯]+|☯[^☯]+字体不会安装.?请百度[^☯]+|☯.{0,2}正版订阅在阅文旗下的起点和QQ书城，可以第一时间看到最新章节.{0,2}(?=☯)|︴\\s*第?[〖【『「（《〈〔［｛\\[{(][^☯]+(?=☯)|☯第\\s*[（(][^（()）]+[)）][頁页](?=☯)|[^☯]*(?:关注|[微vVＶｖ][^\\u4e00-\\u9fa5A-Za-z0-9]*[信xXｘＸ]|公[^\\u4e00-\\u9fa5]*众[^\\u4e00-\\u9fa5]*号){2,}[^☯]*|(?:&#?[a-z0-9]*;?)+(?=;|☯);*|read[sx][；;?？]+/g,\"\")\n.replace(/\\s+/g,\" \")\n.replace(/☯[ ☯]*/g,\"\\n\")\n.replace(/(\\n[〖【『「（《〈〔［｛\\[{(]?)([pPＰｐ][SsｓＳ]+(?=[ ：:;；，,、。.─\\d\\u4e00-\\u9fa5])[^\\n]+)/g,\"$1🌕$2\")\n.replace(/\\[\\[\\[[^\\[\\]]+http:file2.qidian.comchapters(.{5,6})(..)([^\\[\\]]{35})\\]\\]\\]/g,'<img src=\"http://file2.qidian.com/chapters/$1/$2/$3\">')\n.replace(/(<img )[^>]*(src=\"[^\"]+\")[^>]*(>)|((?: ?[＋+－-]?[0-9０-９]+(?:[．.／/][0-9０-９]+)?[％%:：]?[a-zA-Z]*)+ ?|[ _＿－-]?[a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９]+)/g,\"$1$2$3☯$4☯\")\n.replace(/☯[・。](?=☯)/g,\"☯.\")\n.replace(/,\\n/g,\"，\")\n.replace(/!(?=\\n)/g,\"！\")\n.replace(/\\?(?=\\n)/g,\"？\")\n.replace(/(<[^<]+)☯☯/g,\"⚙️$1⚙️\\n\")\n.replace(/(?:\\n[^āáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ\\u4e00-\\u9fa5\\n〖【『「《“‘＜（〈〔［｛({\\[\\]})｝］〕〉）＞’”》」』】〗、，：；？！。…─🌕︴\\n]+|([。？！…”』」】〗])[^a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5\\n〖【『「《“‘＜（〈〔［｛({\\[\\]})｝］〕〉）＞’”》」』】〗、，：；？！。…─☯︴\\n]+[\\u4e00-\\u9fa5]+)?[^a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5\\n〖【『「《“‘＜（〈〔［｛({\\[\\]})｝］〕〉）＞’”》」』】〗、，：；？！。…─⚙️☯︴\\n]+(?=\\n)|[^☯!\"'(),\\s\\u4e00-\\u9fa5、，：；？！。…─〖【『「《“‘＜（〈〔［｛｝］〕〉）＞’”》」』】〗]*☯([a-zA-ZＡ-Ｚａ-ｚ]*[āáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ][a-zA-ZＡ-Ｚａ-ｚ]*)☯[^☯!\"'(),\\s\\u4e00-\\u9fa5、，：；？！。…─〖【『「《“‘＜（〈〔［｛｝］〕〉）＞’”》」』】〗]*/g,\"$1$2\")\n.replace(/[^!\"'(),\\s\\u4e00-\\u9fa5、，：；？！。…─〖【『「《“‘＜<（〈〔［｛({\\[\\]})｝］〕〉）>＞’”》」』】〗︴🌕]*(?:☯[^.．!(),\\n\\u4e00-\\u9fa5、，：；？！。…─〖【『「《“‘＜（〈〔［｛({\\[\\]})｝］〕〉）＞’”》」』】〗⚙️]+|([^☯!(),\\na-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5、，：；？！。…─〖【『「《“‘<＜（〈〔［｛({\\[\\]})｝］〕〉）＞>’”》」』】〗⚙️])(?!\\1)|☯(?=[^☯!(),\\na-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5、，：；？！。…─〖【『「《“‘＜（〈〔［｛({\\[\\]})｝］〕〉）＞’”》」』】〗][!(),\\s\\u4e00-\\u9fa5、，：；？！。…─〖【『「《“‘＜（〈〔［｛({\\[\\]})｝］〕〉）＞’”》」』】〗])|[〖【『「（《〈〔［｛\\[{(][^a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]*[)｝］〕〉》）」』】〗\\]}]){4,}|[^；;％%～~?？!！\"'”’。…─\\na-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]*[〖【『「（《〈〔［｛\\[{(][^a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]*[)｝］〕〉》）」』】〗\\]}](?:[^a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]+(?=[)｝］〕〉》）」』】〗\\]}]))?/g,\"📑\")\n.replace(/([；;％%～~?？!！\"'”’。…─])📑(?=[)｝］〕〉》）」』】〗\\]}])/g,'$1')\n.replace(/(?:([\\n。？！])[^\\n。？！]{1,10})?[〖【『「（《〈〔［｛\\[{(][^〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]*(?:☯[^a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]☯|📑|🌕)[^〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]*[｝］〕〉》）」』】〗\\]})](?:[^。]{0,5}(?:[〖【『「（《〈〔［｛\\[{(][^〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]*(?:☯[^a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]☯|📑)[^〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]*[｝］〕〉》）」』】〗\\]})]|[^📑!,()\\s\\u4e00-\\u9fa5、，：；？！。…─‘’“”（）《》〖〗【】]+))*(?:(?:[^\\n]{1,10}|(?:[\\u4e00-\\u9fa5]{0,5}[，、])*[\\u4e00-\\u9fa5]+[！。]?)(?=\\n))?/g,\"$1\")\n.replace(/((?:[请請][记記]住)?[^⚙️🌕📑︴*\\n(),\\u4e00-\\u9fa5、，：；？！。…─「」‘’“”（）《》〖〗【】]*(?:(?:[^⚙️🌕📑︴*\\n(),\\u4e00-\\u9fa5、：，；？！。…─「」‘’“”（）《》〖〗【】]+[*(), \\u4e00-\\u9fa5、，:：；？！。…─「」‘’“”（）《》〖〗【】]{1,3})*[^*︴📑☯⚙️🌕\\s&;(),āáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜa-zA-ZＡ-Ｚａ-ｚ0-9０-９\\u4e00-\\u9fa5、,，:：;；?？!！。…～~─'\"‘’“”【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}％%・/／＝=_＿.．＋+－-]+(?!(?:[^>]+>)?⚙️)|☯[^☯\\n]+☯\\.☯[^☯\\n]+☯|本[文书](?:首发|来自)|(?:章节不完整.?|完整章节)?请.{2,6}(?:搜索|百度|引擎|关键[词字])+|(?:[阅閱][讀读]|访问|訪問|[網网地][站址]|链接|鏈接|[\\u4e00-\\u9fa50-9a-zA-Z]{0,4}(?:文学|中文|[網网]))+[:：]|[\\u4e00-\\u9fa50-9a-zA-Z]{0,6}(?:[網网地][站址]|链接|鏈接)为|.{2,4}文[学學][網网]|[请請].{2,4}收藏(?:.{0,2}推[荐薦])?|(?:天才)一秒[記记]住|，?請?訪問|(?:[更最][快新]|[快高]速|热门|(?:[阅閱][讀读])?完整|本|(?:官[網网]|本站).{0,2})(?:章[節节]|小说|更新|[網网地][址站][:：]?|快速)|更新(?:速度)?[最更]?快|(?:(?:无错)?小说|正版|免费|全[文本]|在线|访问|訪問|txt|TXT|继续|各种|推[荐薦]|收藏|分享|交流|你?喜欢的)+(?:全文|免费|在线|[阅閱]?[讀读]|下载|章[節节]|小说|好书)|章[節节](?:目录|列表)|小说[網网](?:更新)?|手打全文|[纯全](?:手打|文字)|手机看书|手机版|笔趣阁|(?:本站|[網网]站|站内|看)?无(?:任何)?(?:广告|弹窗|防盗)(?:章节)?|不弹窗|(?:(?:請|请|或者?)?(?:訪問|访问|[電电手][腦脑机機]|[網网][址站]|用[户戶]|浏览|瀏覽|閱讀|阅读|看小说|看漫画)){2,}|看小说|看漫画|(?:用[^\\n]{2,6})?(?:[追看]书|小说)(?:就用|软件|☯[^☯]+☯)，?|用[^\\n]{2,6}[追看]书|(?:..的)?(?:最佳选择|阅读体验)|(?:推[荐薦]|收藏|分享)(?:本站|我们)|小说..版|文章质量更好|谢谢各位(?:读者|书友)支持|水印广告测试|本章未完|请翻页|点击下一页|领.{0,2}红包|同步更新《[^《》]+》|关注[〖【『「（《〈〔［｛\\[{(][^〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]+[)｝］〕〉》）」』】〗\\]}])(?:[* (),\\u4e00-\\u9fa5、，：；？！。…─‘’“”（）《》〖〗【】]{0,3}[^⚙️📑*\\n(),\\u4e00-\\u9fa5、，：；？！。…─「」‘’“”（）《》〖〗【】]+|[….。!！]+(?=\\n))*|⚙️(?!<)[^⚙️\\n]+⚙️)/g,\"\\n⚙️$1⚙️\\n\")\n.replace(/⚙️(<[^<>]+>)⚙️\\n|[〖【『「（《〈〔［｛\\[{(](?:[^〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]{0,3}\\n⚙️(?!\\s*\\S\\s*⚙️).+⚙️\\n*)+[^〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]{0,3}[)｝］〕〉》）」』】〗\\]}]|(🌕)\\s*⚙️|⚙️\\n[^\\u4e00-\\u9fa5]{0,5}\\n⚙️|\\n⚙️\\s*(\\S)\\s*⚙️\\n(?![^⚙️]{1,3}⚙️)|(⚙️\\n)|([，、；])[\\s,，。、…:：;；?？!！`’]*[,，。、…:：;；?？!！`’](?!⚙️)|\\n[\\s,，。、…:：;；?？!！`’]*(?=[,，。、:：;；?？!！])|([：？！。…─])(?:[^⚙️☯a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5\\n…─“‘’”〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]+(?=\\n)|[^⚙️☯a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5\\n…─“‘’”〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]+)|☯/g,\"$1$2$3$4$5$6\")\n.replace(/([)）？！?!…」』”\\s。])(?:[^\\n（(🌕)）”』」’。]{0,5}(?:(?:\\n⚙️.+⚙️\\n|[^（()）\\n”』」。]{0,5}📑)[^（()）\\n。]{0,5}(?:\\n⚙️.+⚙️(?:\\n(?=\\n⚙️|[^（()）\\n]{1,5}\\n))?|[^（()）\\n。]{0,5}📑(?:[^📑]{1,5}(?=\\n⚙️))?)+(?:[^（()）\\n]{1,5}(?=\\n))?|(?:(?:(?:\\n⚙️.+⚙️\\n|[^（()）\\n。]{0,5}📑)[^（()）\\n]{0,5}){2,}|[^（(🌕)）”』」’\\n。]{0,5}(?:(?:請|关键[词字]|[電电手][腦機]|用戶|瀏覽|[阅閱]讀|推[薦荐]|收藏|分享|文章质量|谢谢(各位|支持|大家)|水印|翻页|点击|下[一\\s]*[页頁篇章回节節话話]|免费|热门|官网|正版|在线|同步|下载|文学|中文|章节|[本网][站址]|站内|小说|更新|无错|[本全][文本章]|首发|广个?告|弹窗|防盗|访问|訪問|txt|TXT|读者|书友|百度|[插说]一?[下句]话?，[\\u4e00-\\u9fa5]{0,5})[^（()）\\n]{0,5})*(?:📑|\\n⚙️[^\\n]+⚙️\\n)[^（()）\\n]{0,5}(?:(?:請|关键[词字]|[電电手][腦機]|用戶|瀏覽|[阅閱]讀|推[薦荐]|收藏|分享|文章质量|谢谢(各位|支持|大家)|水印|翻页|点击|下[一\\s]*[页頁篇章回节節话話]|免费|热门|官网|正版|在线|下载|同步|文学|中文|章节|[本网][站址]|站内|小说|更新|无错|[本全][文本章]|首发|广个?告|弹窗|防盗|访问|訪問|txt|TXT|读者|书友|百度)[^（()）\\n]{0,5})*|[^（(🌕)）\\n”』」’。]{0,3}\\n⚙️.+⚙️\\n[^（()）\\n。]{0,3})(?:[\\u4e00-\\u9fa5]+[！。]?|[^a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5\\n]+)?(?=\\n)))+|\\n⚙️[^\\u4e00-\\u9fa5]+⚙️\\n|📑|\\s*︴\\s*|\\n?⚙️\\n?|\\n[^a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5\\n]{2,}\\n[^🌕a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5\\n“《‘【〖『「]*/g,\"$1\")\n.replace(/(?:(?:\\n🌕[^\\n]*)+(?:\\n+[^\\n]+){0,4}|\\n(?:[(（{｛][^(（<{｛｝}>）)]*(?:(?:[(（{｛][^(（<{｛｝}>）)]*[）)｝}])[^(（<{｛｝}>）)]*)*[）)｝}]?\\s*)+|[^\\n]*起点(?:原创|中文)[^\\n]*|[〖【『「（《〈〔［｛\\[{(]?未完待续[^\\n]*)[^\\u4e00-\\u9fa5<>]*$|^\\s*(?:(?:[^\\n]+\\n+){0,4}(?:🌕[^\\n]*\\n?)+|(?:[(（{｛][^(（<{｛｝}>）)]*(?:(?:[(（{｛][^(（<{｛｝}>）)]*[）)｝}])[^(（<{｛｝}>）)]*)*[）)｝}]?\\s*)+|，[^\\n]+)\\n|(?:^|\\n)[^a-z0-9A-Z\\u4e00-\\u9fa5]*(?=\\n)|🌕|\\n\\s*[a-zA-Z]+\\s*$/g,\"\")}",
            "sourceRegex": "",
            "webJs": ""
        },
        "ruleExplore": {
            "bookList": ""
        },
        "ruleSearch": {
            "author": "@get:{au}",
            "bookList": "@js:b=baseUrl.substr(baseUrl.indexOf(\"=\")+1);\nl=(l=source.getVariable())?String(l).split(\"\\n\"):[\n\"https://goo.gle.workers.dev/search?q=\",\n\"https://images.hk.53yu.com/search?safe=off&hl=zh-CN&q=\",\n\"https://www.google.com/search?q=\"\n];\njsoup=org.jsoup.Jsoup.parse;\nfor(i=+java.get(\"索引\"),r=jsoup(src);i<l.length;i++){\ner=r.select(\"#rso .g:not(:has(:matches(^(广告|推广|手游)$)))\");\nif(er.size()){break\n}else r=jsoup(java.ajax(l[i]+b));\n}er",
            "bookUrl": "a:has(cite)@href",
            "coverUrl": "",
            "intro": "div:not(:has(cite,a)) span:not([class])@all||div:has(>.jYOxx) span@all",
            "kind": "@js:java.get(\"类\")",
            "lastChapter": "a cite@text",
            "name": "h3@text\n@js:re=String(src).replace(/\\s*(?:&nbsp;)+\\s*/g,\" \").replace(/\\s*<\\/?em>\\s*/g,\"\");\nif(类=re.match(/(?:[\\s\\[\\];?!,.()、，；？！。…─（）［］〖〗【】》]|<[^a/][^>]*>|<\\/[^>]+>)(?:[分大]\\s*类|类\\s*[型别])(?:[:：\\s]|<[^>]+>)+([^\\s<\"./／｜|>]+)/))java.put(\"类\",类[1]);\nkey=java.get(\"key\");\nax=java.get(\"aut\");\njava.put(\"源\",r=(r=result.match(/(.{0,2})《([^《》]+)》(.{0,3})/))&&r[3]!=\"作品集\"&&!r[1].match(/新[书作]/)?r[2]:result);\n\nr=r.replace(/^(简介页|详情页|目录页|正版|全本|免费阅读|[\\s。.,_/|《「『【〖（(\\[\\])）〗】』」─—-]+)+/,\"\").replace(/(?!^)[^\\u4e00-\\u9fa5a-zA-Z0-9]*(?:笔趣阁|思路客|燃文|小说|漫画|手机)?(?:[.|,_/\\s「『【〖（(\\[\\])）〗】』」。─—-]|(?:人工|机器|电脑)?校正|精校|完[整结]|加料|番外|未删节|简介|全[文本集]|下载|(?:小说|漫画|大全|正版(?:小说|漫画)?|免费|免费小说|免费漫画|免费全[文本]|在线|最[新快]|全部|手机|电脑)(?:全[文本集部]|大全|免费|在线|阅读|下载|章节|小说|更新|漫画|\\.)|([^a-zA-Z0-9])(?:azw|mobi|epub|txt)(?![a-zA-Z0-9])|(?:最全)?(?:章节|目录|列表){2,}|更新章节最快|无广告|(?::顶点)?无弹窗|无防盗|小说网|手打全文|[纯全](?:手打|文字)|\\s*by\\s*(?=[\\u4e00-\\u9fa5]))[\\S\\s]*/i,\"$1\");\n\nif(ax==\"#\"||!~re.indexOf(ax)){\nax=re.match(/《([^《》]+)》作品集|[\\s\\[\\];?!,.()、，；？！。…─（）［］〖〗【】《》>]作\\s*者(?:[:：\\s“\"'(（]|<[^it\\/][^>]*>|<\\/[^>]+>)+(?![^\\s<(《“（）”》)>\\/\\[\\];?!,、，；？！。…─［］〖〗【】]*\\.{3}<)([^\\s<(《“（\"'）”》)>\\[\\];?!,、，；？！。…─［］〖〗【】/／｜|:：]+?)(?=(?:其[他它]|小说|[更最][快新]|\\.\\s*)?..[:：]|所?写?的《|[\\s<(《“（\"'）”》)>\\[\\];?!,、，；？！。─［］〖〗【】/／｜|])/);\nif(!ax){\nax=re.match(new RegExp(r+\"[^a-z0-9A-Z\\\\u4e00-\\\\u9fa5]*([^\\\\s]+?)\\\\s+著|(?:由|原创)(?:(?:原创|网络)?作[家者])?(?![\\\\u4e00-\\\\u9fa5a-zA-Z0-9_-]*(?:[书网]友|网)所?提供)([\\\\u4e00-\\\\u9fa5a-zA-Z0-9_-]+?)(?:为大家)?(?:所作|所?(?:(?:[精倾]心)?[创著]作|提供|写?的(?:《|\"+r+\")))\"));\nif(!ax)ax=result.match(/[^.|,_/\\s\\[\\]（()）【〖〗】。-]+[（(](?![^\\s]+[\\s、：；？！…─“‘《〖【，。:;?!\"'】〗》’”][^(（）)]+|(?:连载中?|完本|大结局|上|中|下|[\\s.一二三四五六七八九十百千万〇零0-9]+)[）)])([^（()）]+?)(?:(?:\\s+|所)?著|的?新书|[/／｜|][^)）]+)?[)）]/)}\nax=ax?ax[1]||ax[2]:\"\"}\n\nif(!ax.length&&~re.indexOf(key)&&!~r.indexOf(key))ax=key;\n\nif(r.indexOf(ax)>0&&!~key.indexOf(r))r=r.split(ax)[0].replace(/[:：]$/,'');\n\nzt=[(小说=key.indexOf(\"小说\"))&&小说^(长=key.length-2),(有声=key.indexOf(\"有声\"))&&有声^长];\nif(zt[0]&&zt[1]){\nrez=\"(?!^)(有声|小说|有声小说)$|^(有声|小说|有声小说)(?!$)\"\n}else if(zt[1]){\nrez=\"(?!^)有声$|^有声(?!$)\"\n}else if(zt[0]){\nrez=\"(?!^)小说$|^小说(?!$)\"\n}else rez=\"☯\";\nif((漫画=key.indexOf(\"漫画\"))&&漫画^长)rez+=\"|(?!^)漫画$|^漫画(?!$)\";\n\nix=r.replace(new RegExp(rez),\"\").split(/[：:]/);i=0;\nwhile(i<ix.length){x=ix[i];\nif(~x.indexOf(key)||~key.indexOf(x))break;i++}\nif(i==ix.length)i=0;\n\njava.put(\"au\",ax);\njava.put(\"bb\",ix.slice(i,i+2).join(\":\"))",
            "wordCount": "div.St3GK a:last-child@text||div.osl a:eq(0)@text\n##\\s\\d+$|;$"
        },
        "ruleToc": {
            "chapterList": "@js:if(java.get(\"单\")==''){\nsrc=org.jsoup.Jsoup.parse(src);\n\nif((result=java.get(\"录\"))==\"\"){if(页=(result=src.select('a[href~=\\\\S]:matches(下[一\\\\s]*[页頁]|下[一二三四五六七八九十百千万〇零0-9]{2,}章):not([href~=^#|javascript:])')).size())result=result.first().attr('href')\n}else{网=String(result).split(\"🌕\");\nfor(i=3,页=+网[0],result=网[1]+2+网[3];i<=页;i++)result+='\\n'+网[1]+i+网[3];\nresult=String(result)}\n\nif(页)java.put(\"页\",/,/.test(book.tocUrl)?result.split('\\n').join(',{\"webView\":true}\\n')+',{\"webView\":true}':result);\n\n嗅=()=>String(src).match(/[\\[(]([\"'])<[a-z]+[ >][^\\[\\]()]+<\\/a>(?:[^\\[\\],()]*<\\/[a-z]+>)?\\1[\\])]/);\n转=it=>it.replace(/\\\\[Uu]([0-9a-zA-Z]{4})/g,(_,it)=>String.fromCharCode(parseInt('0x'+it)));\n兜=()=>src.select(':matchesOwn(^$|[0-9〇一二三四五六七八九十])>a:matches(\\\\S):not(:has(*>*>:not(span)),[href~=(?i)passport|\\\\.aspx$|\\\\.php$|^https://[^/]+(/|index\\\\.[a-z]+)?$|(^|[^/])[?/].*((book|[^a-z])(info|case|page|reg|Game|Play)[^a-z]|buy[^a-z]|SystemInfo|hot|sort|desc|asc|top|coins|nutrition|review|ticket|update|(app|author|xiazai|down)(?!=))|/list\\\\d*([/_-][^/_-]+/?)?$|\\\\d+_\\\\d+_\\\\d+|target=iframe|https%],:matches((?i)^((点击|软件|应用|安装|客户|移动|手机|电脑|安卓|苹果|下载|阅读|pc|ap[kp]|ipa|plx|deb|exe|zip|rar|txt|epub)[\\\\s.端版]*(?=$|点击|软件|应用|安装|客户|移动|手机|电脑|安卓|苹果|下载|阅读|pc|ap[kp]|ipa|plx|deb|exe|zip|rar|txt|epub)|[A-Za-z0-9\\\\u4e00-\\\\u9fa5]?返回.*(简介|书页|目录)[A-Za-z0-9\\\\u4e00-\\\\u9fa5]?|[<>-]+|\\\\d+-\\\\d+章|书页|目录|简介|[上下首尾]([一\\\\s]*[页頁]|[\\\\s\\\\d零〇一二三四五六七八九十百]*章)|[↑\\\\[]?[倒正反逆顺順]序[↓\\\\]]?)$))');\n\nif((zt=java.get(\"嗅\"))!=''){\nif(zt>0&&(嗅=嗅())){\nsrc=嗅[0];\nif(zt==2)src=转(src);\nsrc=org.jsoup.Jsoup.parse(src)}\nsrc.select(java.get(\"除\")).remove();\nif(java.get(\"兜\")==1)src=兜();\nsrc=src.select(java.get(\"查\"))\n\nif(!页){for(首=String(java.get(\"首\")).split('\\n'),ss=src.size(),i=0;i<ss;i++)if(首[i]!=src.get(i)){\nif(i>1)src.subList(1,i).clear();break;}}\n\n}else{\nbook.putVariable(\"除\",除=\"meta,link,a:has(img),\"+((zt=java.get(\"全\")!=1)?\"a[href$=\"+String(book.tocUrl).replace(/,\\{\"webView\":true\\}|^.{8}[^/]*/g,'')+\"],\":\"\")+(基=String(java.get(\"基\")),基==''?'':\"a[href$=\"+基.replace(/^.{8}[^/]*/,'')+\"],\")+\"a[href~=javascript:|#|[a-z]+[A-Z][a-z]+Id[=_-]|[^/][/?&]sub[A-Z]|action=list],a:matches(^$|最新章节$|^[^\\\\u4e00-\\\\u9fa5A-Z0-9]*(正文|.{0,2}书架|(免费|在线|开始|立即|全文|从头|点击|正文)+[试阅]读|[^\\\\s\\\\d外内楔前后卷篇章]*(更新调整|[两一二三四五六七八九十]+连更|作者[:：给要有]|双倍月票|感言|推书|推[a-z0-9A-Z_\\\\u4e00-\\\\u9fa5-]+书|[求个请投点下张](月?票|收藏|订阅|推荐)|(感谢|作者)[^\\\\s]*(读者|书友|大家|各位)|[书点]评[^\\\\s]*活动|[没有空]更新|没时间更新|请个?假|关于本书|关于更新|打赏名单|起点活动)[^\\\\s]*)[^\\\\u4e00-\\\\u9fa5A-Z0-9]*$)\");\n\nbook.putVariable(\"嗅\",(基=嗅())?(src=org.jsoup.Jsoup.parse((zt=/\\\\[Uu]([0-9a-zA-Z]{4})/.test(基=基[0]))?转(基):基),zt)?2:1:0);\nsrc.select(除).remove();\n\nif(zt=java.get(\"全\")!=1){\n找=ll=null;\n$=it=>(qc=ll,查=找,ll=src.select(找=it)).size()>14&&(查=it,src=re=ll);\n\nif(!(((ck=java.get(\"ck\"))!=\"\"&&$(\"[href~=\"+ck+\"(?!index(/|\\.[a-z]+)?$)[^.?/_-][^&/_-]*/?$|/[vV][iI][pP][_-]?([Rr]ead|[Cc]hapter|action=article)|([A-Za-z]\\\\d+|\\\\d[A-Za-z]+|[A-Z][a-z]+|[a-z][A-Z]+){3,}[^/?&]*$]\"))||$(\"[href~=^[a-z0-9]+(/|\\\\.[^./]+)?$]\"))){\nif(qc&&qc.size()>ll.size())找=查,ll=qc;\n\n$=it=>(re=src.select(it)).size()&&(查=it,src=re);\n\nif(!($(\"[data-cid]\")||$(\"[href~=(?i)(^|[/_-])(chapter|read)+([_-]?id)?/[^/_-]+[/_-][^/_-]+]\")||$(\"[href~=(?i)(^|[&?/_-](book|novel|comic|manhua|mh?)?)(chapter|read)+([_-]?id)?[?/=]]\")||$(\"[href~=(?i)[&?/_-]cid[&?/_=-]]\")||$(\"[data-href]\"))){\nsrc=兜();\nbook.putVariable(\"兜\",1);\n\nba=(ba=String(java.get(\"ba\"))).match(/(\\?(?:[^=]+=)+)(.+)$/)||ba.match(/(?:[^/_-][/_-]([^/._-]+))?[/_-]([^/._-]+)(?:\\/|\\/index[^/]*|\\.[^/.]+)?$/);\n\nif(xi=(id=ba[2]).match(/\\?[^=]+=([^&]+)/)||id.match(/^[^\\d%]*(\\d{2,}|[1-9])$/)||ba[1]&&ba[1].match(/^[^\\d%]*(\\d{2,})$/))id=xi[1];\n\n$(\"[href~=([^\\\\d]|^)\"+id+\"[/_&-][^\\\\d]*\\\\d+]:not([href~=\"+id+\"[^\\\\d]*$]),[href~=/[vV][iI][pP]|([A-Za-z]\\\\d+|\\\\d[a-zA-Z]+|[A-Z][a-z]+|[a-z][A-Z]+){3,}[^/?]*$|([^\\\\d]|^)\"+id+\"[/_&-][^\\\\d]*\"+id+\"(/|\\\\.[^.]+|&.+)?$]\")||$(\"[title]\")||$(\"[href~=/view/\\\\d+\\\\.[a-zA-Z]+$]\")}\nif(re.size()<ll.size())查=找,src=ll}}\n\nif(!(zt&&re.size()))src=src.select('a'),查='a';\nif(查)book.putVariable(\"查\",查);\nif(页)java.put(\"首\",src)}\n\nsrc}else if((list=java.get(\"单\"))!=1){\n\nif((网=String(list).split(\"🌕\")).length>1){\nfor(i=+网[2],x=+网[0],j=2,list=\"<a href='\"+baseUrl+\"'>正文1</a>\";i<=x;i++,j++)list+=\"<a href='\"+网[1]+i+网[3]+\"'>正文\"+j+\"</a>\"}\n\norg.jsoup.Jsoup.parse(list).select('a')\n\n}else org.jsoup.Jsoup.parse(\"<a href='\"+baseUrl+\"'>正文</a>\").select('a')",
            "chapterName": "text",
            "chapterUrl": "href@js:chapter.putVariable(\"next\",'a[href~=(?:^|[?/])'+(r=result.trim().replace(/([*$|?+(){}\\[\\]\\^\\\\])/g,'\\\\$1')).match(/[^?/=.]+(?:=(?![01]$)[^=]+)*(?=\\/*$|\\.[^?/.]+$|=[01]$)/)[0]+'[=/_-]2(?:\\\\/|\\\\.[^?/.]+)? *$]@href||a[href~=(?:^|[?/])'+r.replace(/\\d+(?=[^\\d]*$)/,it=>+it+1)+' *$]@href||');result+java.get(\"动\")",
            "isVip": "",
            "nextTocUrl": "@js:java.get(\"页\")",
            "updateTime": ""
        },
        "searchUrl": "{{l=(l=source.getVariable())?String(l).split(\"\\n\"):[\n\"https://goo.gle.workers.dev/search?q=\",\n\"https://images.hk.53yu.com/search?safe=off&hl=zh-CN&q=\",\n\"https://www.google.com/search?q=\"\n];\n\nfor(i=+java.get(\"索引\");i<l.length;i++){\ntry{z=(zz=java.get(y=l[i],{})).statusCode()}catch(e){continue;}\nif(z==200||z==301&&(y=zz.header(\"Location\"))\n){java.put(\"索引\",i);\nbreak;}\n}\n\nkey=key.trim();aut=\"#\";\nif(ke=key.match(/^([单跳逆动静字图]+)\\^([\\S\\s]+)/))key=ke[2],java.put(\"custom\",ke[1]);\nz=key.lastIndexOf(\"#\")+1;\ns=key.lastIndexOf(\"$\");\nif(/\\$[a-zA-Z0-9/._-]+$/.test(key))key=key.slice(0,s).concat(\" site:\",key.slice(s+1));\ns=s+1?s:key.length;\nas=key.slice(z?z:s,s);\nif(!/^\\s*$/.test(as)){\naut=as.match(/[^\\s\"]+/)[0];\nkey=key.slice(0,z-1).concat(\" \",key.slice(z))}\njava.put(\"aut\",aut);\njava.put(\"key\",key.match(/[^\\s\"]+/)[0]);\ny+key}}&start=<0,{{page*10}}>",
        "weight": 0
    },
    {
        "bookSourceComment": "─────当前版本Pro V50─────\n\n点击登录即可查看:\n\n0、书源制作思路\n\n1、版本更新日志\n\n2、书源用法展示\n\n3、相关问题解释\n\n───────搜索格式────────\n\n完全格式：书名#作者$网站\n简化格式1：书名$网站\n简化格式2：书名#作者\n简化格式3：书名\n\n说明：搜索“斗破苍穹#天蚕土豆$www.qidian.com”将在“www.qidian.com”中搜索名为斗破苍穹、作者为天蚕土豆的书籍\n\n──────前缀设置全体───────\n\n用法：“单跳逆原动静字图”等字后跟“^”再跟“搜索关键字”，可实现这些字对应的功能。\n\n范围：本次搜索到的所有书籍都会执行指定的功能。\n\n示例：“图^斗破苍穹”、“逆静^斗破苍穹#天蚕土豆”、“跳^斗破苍穹$www.qidian.com”。\n─────⤵\n跳：允许目录自动跳转，目录标题说点击跳转时可如此做。\n\n逆：设置书籍目录章节逆向排序，配合指定网站的搜索方式针对小说全是逆向排序的网站比较方便。\n\n原：设置书籍不进行净化替换，优点是加载正文快速且不会被误删内容，缺点是需要自己写“替换净化”规则并在正文中启用才能净化网站推广文本。\n\n动：强制设置正文动态加载(正文默认会进行需要动态加载还是静态加载的判断，然后自动切换模式，若判断失误导致本应切换成动态加载却未切换时，可强制设置正文动态加载)。\n\n静：强制设置正文静态加载(正文默认会进行需要动态加载还是静态加载的判断，然后自动切换模式，若判断失误导致本应保持静态加载却切换成动态加载而使正文加载时间变长时，可强制设置正文静态加载)。\n\n图：设置成看图模式(不设置则默认图文模式)，只显示图片，不显示文字。\n\n字：设置成纯字模式(不设置则默认图文模式)，只显示文本，不显示图片。\n─────⤴\n\n──────书籍变量设置───────\n\n用法：\n将“单直跳全逆原图字动静”中任意多个字\n或“[目录url]”或“[正文尾页url]单”\n或“数字#第二页链接#”\n或“[目录尾页url]录”\n放在详情页右上角的书籍变量中，\n确认后点刷新就能触发这些字段对应的功能。\n\n范围：只控制当前书籍执行指定功能。\n\n书籍变量格式示范：[http://m.biquku.la/0/425/]全字\n\n─────⤵\n直：不做目录识别，直接将详情页作为目录页，或以“[目录链接]”格式直接指定目录链接，目录识别错误时可这种做。\n\n全：直接显示“预览正文”和查询到的所有章节，跳过章节筛选环节，单页文章和部分筛选后章节不全的小说网站可这样做。\n─────⤴\n\n──目录有分页却无翻页按钮或书籍无目录──\n\n单：无目录打开即正文但有尾页或下一页按钮的书籍，必须设置为单向模式，这样书源会直接将入口页作为正文第一页，并将第一页及其所有下一页共同构造生成“正文1”、“正文2”…的目录形式来阅读，搜索前缀“单^”、书籍变量“单”。\n\n录：有目录分页但无目录下一页按钮的书籍，可在书籍变量中直接指定复制到的最后目录页链接为目录链接并添加指令“录”，即可自动生成所有目录分页。\n书籍变量：“[https://m.zuizaoxiaoshuo.com/ml/33280_13]录”\n\n辅助生成──无目录打开即正文也无尾页和下一页按钮的书籍，需指定章节数量并用第二页链接作为参考链接生成所有分页。\n书籍变量──220#https://wap.yqshuwang.com/2021n/02/14972_2.html#\n效果说明──根据第二页链接“https://wap.yqshuwang.com/2021n/02/14972_2.html”生成220条章节的目录列表。\n\n单个章节──目录仅一个章节且这个章节正文中无下一页按钮时，可复制那个章节的正文尾页链接并用指令“单”，便可将所有正文分页构造成章节列表。\n书籍变量──[http://www.yulinzhanye.la/20/20733/532447_9.html]单",
        "bookSourceGroup": "📑必应搜书,通用",
        "bookSourceName": "必应搜书",
        "bookSourceType": 0,
        "bookSourceUrl": "必应搜书",
        "bookUrlPattern": "",
        "customOrder": 71,
        "enabled": true,
        "enabledCookieJar": false,
        "enabledExplore": true,
        "exploreUrl": "",
        "header": "{\"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36\"}",
        "lastUpdateTime": 1650209800448,
        "loginUrl": "https://gitee.com/no-mystery/shuyuan/",
        "respondTime": 180000,
        "ruleBookInfo": {
            "author": "@get:{x}",
            "canReName": "true",
            "coverUrl": "@js:(s=java.getStringList('img[alt*='+book.name+']@src||meta[property$=image]@content||img[src~=(cover|file|article)[^a-z]|/\\\\d+[/_-]\\\\d+(s?\\\\.|$)]@src||img[data-src~=\\\\S]@data-src||img[src*=/img]@src||img[src~=^(data|https?):|^[^:]+/]@src')).size()?/^data:/.test(s=s.get(0))?java.base64Encode(s):s:null",
            "init": "",
            "intro": "@js:'　　'+java.get(\"g\")",
            "kind": "@js:java.get(\"v\")",
            "lastChapter": "@get:{z}",
            "name": "@js:r=org.jsoup.Jsoup.parse(result);\nr.select(\"script,noscript,style,head>:not(meta),footer,[class~=^foot],[id~=^foot],a:has(>:last-child:matchesOwn(^分类$)),[value]\").remove();\n\nn=String(book.name);\nm=String(r).replace(/(?:&nbsp;)+/g,\" \");\n书=java.get(\"源\");\n\nif(x=(y=r.select('[property$=book_name]')).size()){\ny=y.attr(\"content\");\nu=书.indexOf(y)\n}else for(u=true,c=r.select(\"h1,h2,h3,strong\").eachText();x<c.size();x++)if(\n(y=c.get(x))!=''&&(u=书.indexOf(y),~u&&u<4))break;\nif(!~(y=String(y)).indexOf(n)&&~u)n=y;\n\nif((x=r.select(\"[property$=author]\")\n).size()){\nx=String(x.attr(\"content\")).replace(/^作\\s*[者家][\\s:：]*|(?!^)[/／｜|，,\\s][^⚙️]*$/,\"\")\n}else{\nx=m.match(/>\\s*([^>]+?)(?:\\s*<\\/[a-z]+>\\s*|\\s+)著\\s*<|[\\s\\[\\];?!,.()、，；？！。…─（）［］〖〗【】>《》](?:小说|漫画)?作\\s*者(?![^>]+->)(?:[:：\\s〖【（《［\\[\\(]|<[^it\\/][^>]*>|<\\/[^>]+>)+([^\\s<\">,，/／｜|\\)\\]］》）】〗]+)/);\nx=x?x[1]?x[1]:x[2]:(x=r.select(\"#author,.author\"),x.size()?String(x.first().text()).replace(/(?!^)[/／｜|，,\\s][^⚙️]*$/,\"\"):\"\")}\n\nif(n.indexOf(x)>0&&!~java.get(\"key\").indexOf(n))n=n.split(x)[0];\njava.put(\"x\",x);\n\ny=r.select(\"meta[property~=(category|status)$]\");\nc=y.size()?String(y.eachAttr(\"content\"))\n.slice(1,-1).replace(/(?!^)\\s*[，,./／｜|]\\s*/,\",\"):(y=m.match(/(?:[\\s\\[\\];?!,.()、，；？！。…─（）［］〖〗【】》]|<[^a/][^>]*>|<\\/[^>]+>)(?:[分大]\\s*类|类\\s*[型别])(?:[:：\\s]|<[^>]+>)+([^\\s<.\"/／｜|>]+)/))&&y[1];\nif(c)java.put(\"v\",c);\n\ny=r.select(\"meta[property~=latest_chapter_name$]\");\n\nc=y.size()?y.attr(\"content\"):(y=m.match(/>(?:\\s*[更最]\\s*[新近])+(?:\\s*章\\s*节)?(?:[:：\\s\\[]|<[^>]+>)+(?!\\s*(?:-|&gt;)\\s*<|[:：\\s0-9T年月日时分秒*-]{5,}<|[^:：]+[^章\\s]\\s*[:：]\\s*<|更新(?:时间)?[:：])([^<\"/／｜|\\]>]+)/))&&y[1];\nif(c)java.put(\"z\",c);\n\n正=true;\nif((key=String(java.get(\"custom\"))).length){\nif(~key.indexOf(\"全\"))java.put(\"全\",1);\nif((\nu=key.match(/[^\\[\\]]+(?=\\])/),\nc=~key.indexOf(\"录\"),\ny=~key.indexOf(\"单\"),\nbaseUrl=u?u[0]:baseUrl,\n(c||u)&&(baseUrl=c||y?(baseUrl=String((c=baseUrl.match(/(.+[^\\d])(\\d+)([^\\d]*)$/))[1]+1+c[3]),\nc=c[2]+'🌕'+c[1]+'🌕'+2+'🌕'+c[3],\nbaseUrl):baseUrl)\n)||~key.indexOf(\"直\")\n)java.put(\"目\",1),正=1;\nif(~key.indexOf(\"录\"))java.put(\"录\",c),正=1;\nif(y||~key.indexOf(\"#\")){\nif(!u){\nif((网=key.match(/(\\d+)#([^#]+)/))\n&&(尾=网[1],网=网[2].match(/^(.*[^\\d])([12])([^/?\\d]*)$/))\n||(尾=r.select('a[href~=\\\\d[^/?\\\\d]*$]:matches(^(尾|末|最后一)[頁页篇章回节節话話]$)')).size()\n&&(网=r.select('a:matches(^2$)')).size()\n&&(网=String(网.first().attr('href')).match(/^(.*[^\\d])([12])([^/?\\d]*)$/))\n&&(尾=String(尾.first().attr('href')).match(/\\d+(?=[^/?\\d]*$)/)[0])){\nc=尾+'🌕'+网[1]+'🌕'+网[2]+'🌕'+网[3]\n}else if((c=r.select('a:matches(^(\\\\d+|…+|\\\\.+)$)')).size()){\nif((网=String(c).split(/<a[^>]+>[^\\d<]+<\\/a>/)).length==2){\nfor(c=网[0],尾=网[1],x=+网[1].match(/>([^<]+)/)[1],网=网[0].match(/href=\"([^\"]*[^\\d])(\\d+)([^/?\\d\"]*)\"[^>]*>([^<]+)<[^<]+$/),j=+网[4],i=+网[2]-j;j<x;j++)c+=\"<a href='\"+网[1]+(j+i)+网[3]+\"'>\"+j+\"</a>\";\nc+=尾}\n}else c=1}\njava.put(\"单\",c),正=false}\nif(~key.indexOf(\"跳\"))java.put(\"跳\",1);\nif(~key.indexOf(\"逆\"))book.setReverseToc(true);\nelse book.setReverseToc(false);\nif((u=~key.indexOf(\"图\"))||~key.indexOf(\"原\"))java.put(\"原\",1);\nif(~key.indexOf(\"动\"))java.put(\"动\",',{\"webView\":true}');\nelse if(~key.indexOf(\"静\"))java.put(\"静\",1);\nif(u||~key.indexOf(\"字\"))java.put(\"文\",u?1:2)\n}else book.setReverseToc(false);\n\ny=r.select(\"meta[property$=description][content~=\\\\S]\");\nc=y.size()?y.get(y.size()-1).attr(\"content\"):(r.select(':matchesOwn([\\\\u4e00-\\\\u9fa5]{2,})>:not(br),:not(body,br,:matchesOwn([\\\\s\\\\S]{50}),:has(body,:matchesOwn([\\\\s\\\\S]{50})))').remove(),r.select(\":matchesOwn(\\\\S)\").text());\n\njava.put(\"g\",String(c!=\"\"?c:book.intro).replace(/[\\snbsp;]*(?:&nbsp;|\\s){2,}|\\s*([？！。]+[”」』\\]\\}\\)）｝】〗〕〉]?)\\s*/g,\"$1　　\").replace(/(?=　　)/g,\"\\n\"));\n\nif(正==1)m=java.ajax(baseUrl);\njava.setContent(m,baseUrl);\n\nif(正){\nzl=java.getStringList(\"[property$=latest_chapter_url]@content||:matches(^最新章节)>a:only-child:not([href~=^$|#|javascript:])@href||a:matches(^正文\\\\s*[\\\\d第一二三四五六七八九十〇零百千]|^[【《]?(\"+n+\")?[\\\\s》】（\\\\u0028:：＿_－-]*(第[\\\\s0〇零]*[一1]\\\\s*[\\\\u4e00-\\\\u9fa5]|([\\\\u4e00-\\\\u9fa5]{2}阅读[（\\\\u0028:：＿_－-]?)?(0*1([）\\\\u0029.、:：_-]|$)|[〇零]*一([）\\\\u0029\\\\s.、:：_-]|$)))):not([href~=(^|[^/])/[vV][iI][pP]|([A-Za-z]\\\\d+|\\\\d[A-Za-z]+|[A-Z][a-z]+|[a-z][A-Z]+){3,}[^/?&_-]*$|^$|#|javascript:|\"+(bas=baseUrl.replace(/\\/+$|\\.[a-zA-Z]+$/,'')).match(/[^?/]+$/)[0].replace(/([*$|?+\\\\\\^\\[\\](){}])/g,'\\\\$1')+\"(?:[/_-]1)?(?:\\\\/|\\\\.[a-zA-Z]+)?$])@href||a:matches(^[^\\\\u4e00-\\\\u9fa5]*(免费|在线|开始|立即|全文|正文|从头)+[试阅]读[^\\\\u4e00-\\\\u9fa5]*$):not([href~=^$|#|javascript:])@href||a:matches(^0*1[^\\\\d]):not([href~=(^|[^/])/[vV][iI][pP]|([A-Za-z]\\\\d+|\\\\d[A-Za-z]+|[A-Z][a-z]+|[a-z][A-Z]+){3,}[^/?&_-]*$|^$|#|javascript:])@href\");\n\nif(zl.size()&&(ck=String(zl.get(0)).match(/^(.*\\/\\/[^/]+)?([/?]?[^/].+[?&/_-])[^&/_-]+\\/?$/)))(jd=ck[1])&&(h=baseUrl.lastIndexOf('/',baseUrl.indexOf(jd.match(/(?:\\.[^.]+){2,}$|[^./]+\\.[^.]+$/)[0])))>8&&(\nq=baseUrl.indexOf(':'),\n(bas=java.get(baseUrl=baseUrl.slice(0,q+2)+baseUrl.slice(h),{})).statusCode()==200&&java.setContent(bas.body(),baseUrl)\n),java.put(\"ck\",ck[2])}\nn",
            "tocUrl": "@js:if(java.get(\"单\")==''){\nif(java.get(\"录\")==java.get(\"目\")){\nr=org.jsoup.Jsoup.parse(result);\n\nscript=r.select(\":matchesOwn(^$)>a[href^=javascript:]:matches(全文|章[節节]|目[錄录]):not(:matches(最新))\");re=false;\n\nif(!script.size()){\nba=(bas=baseUrl.replace(/\\/$|\\.[a-zA-Z]+$/,'')).match(/(http....[^/?]+)(?:([?/])(.*))?$/);b=ba[1];v=ba[3];\n\nr.select(\"a[href~=[^a-z]page[^a-z]]:not(:matches([反正顺順逆倒]序|[全正]文|更多|全部|所有|章[節节]|作品|目[錄录]|列表)),a:not([href~=^(?!//)[^#:]+$|\"+b.split(':')[1]+\"]),:matchesOwn(\\\\S)>a,a[href~=javascript:|#],a:matches(^\\\\S{1,4}$):not(:matches([反正顺順逆倒]序|[阅閱][讀读]|查看|展[开開]|进入|[全正]文|更多|完整|全部|所有|目[錄录]|列表|章[節节]):not(:contains(分类)))\").remove();\n\ny=r.select(\"a[href~=(?i)catalog|contents|chapters|mulu|(^|[^a-z])ml|showchapter|(^|chapter[/_-]?|\"+v.replace(/(.+)((\\/\\d\\d)\\d+)$/,\"$1$3$2\")+\"[/_-])(more|list|all)|sort[/=_-]asc]\");\n\nif(!y.size()){b3='';\n\nif(ba[2]==\"?\"){\nb3='[href~=^[^?]+$],'\n}else if(ba[3]){\nb3=ba[3].replace(/[*$|?+\\\\\\^\\[\\](){}]/g,'\\\\$0');\n\nb3=\"[href~=\"+b3+\"(\\\\.[^.]+|/\\\\d+(\\\\.[^.]+|/)?)?$],[href~=[/?]\"+b3.replace(/[&/_-][^/_-]+$/,'')+\".*$]:not([href~=[/?]\"+b3.replace(/[/_-]/g,'[/_-]')+\"]),\"}\n\ny=r.select(\"a:not(\"+b3+\"[href~=(?i)(^|[^/])[?/].*((book|[^a-z])(info|case)[^a-z]|(cid|buy)[^a-z]|desc|coins|nutrition|review|ticket|update|(app|author|xiazai|down)(?!=))|/chapter|/index/|/d/],:matches((?i)^$|[0-9零〇一二三四五六七八九十百千万、，：；？！。…‘’“”（）()]|[票榜:：.]|推荐|排行|等级|说明|收藏|书评|简介|分[类卷]|简介|作者|手机|软件|应用|安装|客户|移动|pc|电脑|安卓|苹果|下载|最新|ap[kp]|ipa|plx|deb|exe|zip|rar|txt|epub))\")}\n\nif(y.size()){\nys=y.select(\"a[href~=(?i)catalog|contents|list|chapter|mulu|(^|[^a-z])ml|more|read|all]:matches([反正顺順逆倒]序|全文|章[節节]|目[錄录]):not(:matches(阅读)),a[href~=(?i)catalog|contents|chapter|(^|[^a-z])ml|mulu|read]:matches(更多|列表),a[href~=(?i)catalog|contents|list|chapter|mulu|(^|[^a-z])ml|more|all]:matches(^$),a:matches(^[^\\\\u4e00-\\\\u9fa50-9]*([反正顺順逆倒]序|全文(免[費费])?[阅閱][讀读]|(点击|查看|展[开開]|进入|返?回到?)*([全正]文|(更多|完整|全部|所有)?(章[節节]|(作品)?目[錄录])+)+(列表)?(\\\\s*(查看|展开)?更多)?)[^\\\\u4e00-\\\\u9fa50-9]*$)\");zt=false;\n\nif(!ys.size()){\nba=bas.match(/(\\?(?:[^=]+=)+)(.+)$/)||bas.match(/(?:[^/_-][/_-]([^/._-]+))?[/_-]([^/._-]+)(?:\\/index[^/]*)?$/);\n\nif(xi=(id=ba[2]).match(/\\?[^=]+=([^&]+)/)||id.match(/^[^\\d%]*(\\d{2,}|[1-9])$/))id=xi[1];\nif(ba[1])if(xi=ba[1].match(/^[^\\d%]*(\\d{2,})$/))id=/^\\d$/.test(id)||!xi[1].indexOf(id)?xi[1]:\"(\"+id+\"|\"+xi[1]+\")\";\n\nys=y.select(\"[href~=(?i)^((.*//[^/]+/)?[^=.]*[^\\\\d=.])?\"+id+\"([?_-][a-z=_-]*0|\\\\.[^.]+|[/?]([^\\\\d]*|[^/\\\\d]*/?|(list|more|all)([=_-][a-z]*)?\\\\d+[^\\\\d]*)?)?(&.+)?$]:not(:contains(\"+(bs=String(book.name)[0])+\"))\");\n\nif(!ys.size()){zt=true;\nys=y.select(\"[href~=(?i)^((.*//[^/]+/)?[^=.]*[^\\\\d=.])?(\\\\d+/\"+id+\"[_-]\\\\d+[^\\\\d]*|\"+id+\"[_-][a-z_-]*1[^\\\\d]*)$]:not(:matches(阅读|\"+bs+\"))\")}}\n\nif(ys.size()){\nif((re=ys.select(\"[href~=(/|^)[^.]+$]\")).size())ys=re;\nre=String(ys.first().attr(\"href\"));\n\nfor(x=1;x<ys.size();x++)if((xs=String(ys.get(x).attr(\"href\"))).length>re.length)re=xs;\n\nif(/(?:[2-9]\\d*|1\\d+)[^\\d]*$/.test(re)){\nif(!zt&&(q=re.match(/^(.*[^/])?[&?/].*(?:catalog(ue)?|contents|(?:show)?chapters?|mulu|ml|more|all|list|page)(?:[=_-][a-z]*)?\\d+[^\\d]*$/i))&&v==(q[1]||'').replace(/^http....[^/?]+/,''))zt=true;\nif(zt)re=re.replace(/\\d+(?=[^\\d]*$)/,\"☯1\")}\n\n}}}\n\nre=String(!re?baseUrl:(java.put(\"基\",baseUrl),/^\\/[^/]/.test(re)?b+re:/^https?:/.test(re)?re:/^\\/\\//.test(re)?b.split('//')[0]+re:String(baseUrl).replace(/[^/]*$/,'')+re))}else re=baseUrl;\n\nr=re.replace(/(?:[☯?&/_-][^\\d?/&_-]*[01])+[^\\d]*$/,\"\");\njava.put(\"ba\",r);\nre=re.replace(\"☯\",\"\")}else re=baseUrl;\n\njava.get(\"跳\")==1?re+',{\"webView\":true}':re",
            "wordCount": "{{baseUrl}}##//([^/]+)##$1##"
        },
        "ruleContent": {
            "content": "@js:dt=lr='';c=1;动=java.get(\"动\");\nif(动!=''&&!~baseUrl.indexOf(\",\")){\nresult=String(java.ajax(baseUrl+动))\n}else if(java.get(\"静\")==动)c=dt=2;\n\nr=org.jsoup.Jsoup.parse(r1=result.replace(/&nbsp;/g,' '));\n查=i=java.get(\"序\");\n\nif(java.get(\"文\")==1){for(;c;c--){\nd=[\"img[data-src],img[src~=[^a-z]cid[^a-z]]\"\n,\"img:not([src~=(?i)^$|^javascript:|\\\\.gif|\\\\.png|[^a-z](cover|css|ic(on)?|load(ing|ed)?)[^a-z]])\"\n,\"img[src~=(?i)\\\\.png]:not([src~=(?i)[^a-z](cover|css|ic(on)?|load(ing|ed)?)[^a-z]])\"\n,'img[src~=(?i)\\\\.gif]:not([src~=(?i)[^a-z](cover|css|ic(on)?|load(ing|ed)?)[^a-z]])'];\n\nif(!(查!=\"\"&&(查!=-1&&((lr=r.select(d[查])).size(),true)))){\n$=it=>(lr=r.select(it)).size();\nif($(d[i=0])||$(d[i=1])||$(d[i=2])||false)break;\n\nif(c==2){dt=1;\nr=org.jsoup.Jsoup.parse(java.ajax(baseUrl+',{\"webView\":true}'))\n}else i=$(d[3])?3:-1}}\nif(i==0)lr=String(lr).replace(/(?:src=['\"][^'\"]+['\"] +)?data-/g,'');\nif(查==\"\")book.putVariable(\"序\",i);\n\n}else{\nsc=java.get(\"文\")==2?\n'[style~=(?i)text-align:center|(^| |;)color: *(rgb.(?!255[ ,]+255[ ,]+255)[\\\\d, ]*2\\\\d\\\\d|#(?=[a-f\\\\d]{3}([^a-f\\\\d]|$))(?!fff)[a-f\\\\d]*[d-f]|#(?=[a-f\\\\d]{4})(?!ffffff)([\\\\da-f]{2})*[d-f][\\\\da-f]|green|red|blue|yellow|purple|pink|brown)],script,noscript,style,header,footer,[class~=^foot|^head],[id~=^foot|^head],:has(>a):not(:has(p:matchesOwn(\\\\S),br)),a>*,:has(a):not(:matchesOwn([\\\\S\\\\s]{50,}),:has(:matchesOwn([\\\\S\\\\s]{50,}))),:matchesOwn([\\\\s\\\\S]{50})>:not(br,a,:matchesOwn([\\\\s\\\\S]{50})),:not(br,p,a,:matches([\\\\s\\\\S]{200}),:has(p,br,div:matchesOwn(，|。)+div:matchesOwn(，|。)),:has(p,br,div:matchesOwn(，|。)+div:matchesOwn(，|。)) :matchesOwn(\\\\S):not(:not(p,div,span:has(br))))'\n:\n'[style~=(?i)text-align:center|(^| |;)color: *(rgb.(?!255[ ,]+255[ ,]+255)[\\\\d, ]*2\\\\d\\\\d|#(?=[a-f\\\\d]{3}([^a-f\\\\d]|$))(?!fff)[a-f\\\\d]*[d-f]|#(?=[a-f\\\\d]{4})(?!ffffff)([\\\\da-f]{2})*[d-f][\\\\da-f]|green|red|blue|yellow|purple|pink|brown)],script,noscript,style,header,footer,[class~=^foot|^head],[id~=^foot|^head],:has(>a):not(:has(p:matchesOwn(\\\\S),br,img:not([src~=(?i)^$|^javascript:|[^a-z](css|ic(on)?|load(ing|ed)?)[^a-z]|/\\\\d+s\\\\.jpg]))),img[src~=(?i)^$|^javascript:|[^a-z](css|ic(on)?|load(ing|ed)?)[^a-z]|/\\\\d+s\\\\.jpg],a:not(:matches(^$)>img)>*,:has(a):not(img,:matchesOwn([\\\\S\\\\s]{50,}),:has(img,:matchesOwn([\\\\S\\\\s]{50,}))),:matchesOwn([\\\\s\\\\S]{50})>:not(img,br,a,:has(img),:matchesOwn([\\\\s\\\\S]{50})),:not(img,br,p,a,:matches([\\\\s\\\\S]{200}),:has(p,br,img,div:matchesOwn(，|。)+div:matchesOwn(，|。)),:has(img,p,br,div:matchesOwn(，|。)+div:matchesOwn(，|。)) :matchesOwn(\\\\S):not(:not(p,div,span:has(br))))';\n\nd=[\":matchesOwn(\\\\S):has(br):has(:matchesOwn(\\\\S):has(br))\"\n,\":matchesOwn(\\\\S):has(br)\"\n,\":has(>:matchesOwn(\\\\S):not(:has(*))+:matchesOwn(\\\\S):not(:has(*)))\"\n,\":has(>:has(>p:only-child:matchesOwn(\\\\S):not(:has(*)))+:has(>p:only-child:matchesOwn(\\\\S):not(:has(*))))\"\n,\"img\"\n,\":matchesOwn(\\\\S)\"];\n\ntry{for(查=i!=''?i:java.get(\"元\");c;c--){\n\nif(!(c>1&&(String(r.text()).length<400||r.select(':matchesOwn(内容未加载完成|关闭(阅读|小说)模式)').size()))){\nr.select(sc).remove();\n\nif(!(查!=\"\"&&(lr=r.select(i?d[i==6?5:i]:查)).size()))for(i=0;i<6&&(lr=r.select(d[i]),i==4&&c==1?!lr.size():String(lr.text()).length<200);i++);\nif(c<2||i<6)break;}\n\nr=org.jsoup.Jsoup.parse(r2=String(java.ajax(baseUrl+',{\"webView\":true}')).replace(/(<[a-z]+)&nbsp;/g,'$1 '));\ndt=r1.length==r2.length?2:1}\n\nfor(c=lr.first(),v=1;v<lr.size();v++)if(lr.get(v).parents().contains(c)){\nlr.remove(v);\nv--}else c=lr.get(v);\n\nlr=String((c=lr.size()==2&&i<4)?String(lr.first().text()).length>String(lr.get(1).text()).length?lr.first():lr.get(1):(c=lr.size()==1)?lr.first():lr);\n\nif(查==\"\"){\nif(c&&(查=lr.match(/<([a-z]+) ([^>]+)>/))&&(查[2]=查[2].match(/(?:id|class|style)=(?:\"[^\"]+\"|'[^']+')|[^= ]+(?==\"[^\"]+\"|'[^']+')/g))){\nbook.putVariable(\"元\",查[1]+'['+查[2].join('][')+']')\n}else book.putVariable(\"序\",i)}\n\nlr=lr.replace(/<([a-z]+)[^>]*\"-\\d+\"[^>]*>[^<]+<\\/\\1>|[^<>]*<a[^<]+<\\/a>[^<]*|&lt[; ]?\\/?[a-z]+(?= |\\/?&gt)(?:[ a-z=-]+|\"[^\"]+\"|'[^']+')*\\/?&gt[; ]?|[☯📑⚙️🌕︴]/g,\"\").replace(/\\s+(?:\\s|(?:(?:(?:n?b)?s)?p)?;)/g,\"　　\");\n\nif(java.get(\"原\")!=1)lr=(!lr.indexOf(\"　　\")?lr.replace(/>(?!　　|\\s*(?:(?:(?:n?b)?s)?p)?;)\\s*(?=[^\\s<>])/g,\">︴\"):lr).replace(/((?:[〖【『「（《〈〔［\\[(][^〖【『「（《〈〔［\\[()］〕〉》）」』】〗\\]]*[)］〕〉》）」』】〗\\]]\\s*)*(?:第?\\s*[一二三四五六七八九十百千万〇零0-9]+\\s*[章节回話话：:.．,，、]*\\s*)?{{n=(t=title.match(/\\S+$/)[0].replace(/[*$|?+\\\\\\^\\[\\](){}/]/g,\".?\")).replace(/^(正文[^\\u4e00-\\u9fa5A-Za-z]*|第?[一二三四五六七八九十百千万〇零0-9]+[章节回話话\\s：:.．,，、]*)+/,\"\"),n!=t&&/\\S/.test(n)?\"(?:第?\\\\s*[一二三四五六七八九十百千万〇零0-9]+\\\\s*[章节回話话：:.．,，、]*\\\\s*\"+n+\"|\"+t+\")\":t}}(?:\\s*[〖【『「（《〈〔［\\[(][^〖【『「（《〈〔［\\[()］〕〉》）」』】〗\\]]*[)］〕〉》）」』】〗\\]])*)/g,\"⚙️$1⚙️\")+\"📑\"\n}catch(e){}}\nif(dt)book.putVariable(dt==1?\"动\":\"静\",',{\"webView\":true}');lr",
            "imageStyle": "FULL",
            "nextContentUrl": "@js:if((r=java.getStringList((nx=java.get(\"next\"))+\"a:matches(第二[頁页]|下[一\\\\s]*[頁页]):not([href~=^javascript:|^#])@href||a:matches(下[一\\\\s]*[篇章回节節话話]):not([href~=^javascript:|^#])@href||a[href~=[_-]\\\\d+(/|\\\\.[a-z]+)?$]:has(i,img):not(:matches(\\\\S),[href~=^javascript:|^#])@href\")).size()){\nif(~String(book.tocUrl+(nextChapterUrl||'')).indexOf(r=String(r.get(r.size()-1)))||~r.indexOf(nextChapterUrl||String(book.tocUrl).replace(/.+(?=_\\d+\\/$)/,'')))r=null\n}else r=null;\nif(r){if(nx!='')chapter.putVariable(\"next\",(n=r.replace(/\\d+(?=[^\\d]*$)/,it=>+it+1))==r?'':'a[href=\"'+n+'\"]@href||');\nr+java.get(\"动\")}",
            "replaceRegex": "@js:if(java.get(\"原\")==1){result}else{\nresult=result.replace(/⚙️([^\\u4e00-\\u9fa5⚙️]+|[零〇一二三四五六七八九十百千万\\s]+|(?!第[零〇一二三四五六七八九十])[\\u4e00-\\u9fa5]+)⚙️/g,'$1').split('📑');\nl=result.length-1;\nwhile(l)if(r=result[--l].match(/^(\\n+(?:[^\\n]{1,30}\\n+){1,3})([\\S\\s]+)$/))result[l]=r[1]+r[2].replace(/⚙️/g,'');\nresult.join('📑')\n.replace(/—/g,\"─\")\n.replace(/[·۰•・]/g,\"・\")\n.replace(/\\s*(?:︴[^\\n　]+\\s+)*📑\\s*|^\\s*(︴[^\\n　]+\\s+)*|\\s*(?:　　|\\n)(?:[\\s&#a-zA-Z0-9]*;)?[\\s　?]*/g,\"☯\")\n.replace(/(?:︴[^☯]*☯)+(?=︴)|☯(?:温馨|[^a-zA-Z0-9\\u4e00-\\u9fa5☯]+)提示.?[:：][^☯]+|☯[^☯]+字体不会安装.?请百度[^☯]+|☯.{0,2}正版订阅在阅文旗下的起点和QQ书城，可以第一时间看到最新章节.{0,2}(?=☯)|︴\\s*第?[〖【『「（《〈〔［｛\\[{(][^☯]+(?=☯)|☯第\\s*[（(][^（()）]+[)）][頁页](?=☯)|[^☯]*(?:关注|[微vVＶｖ][^\\u4e00-\\u9fa5A-Za-z0-9]*[信xXｘＸ]|公[^\\u4e00-\\u9fa5]*众[^\\u4e00-\\u9fa5]*号){2,}[^☯]*|(?:&#?[a-z0-9]*;?)+(?=;|☯);*|read[sx][；;?？]+/g,\"\")\n.replace(/\\s+/g,\" \")\n.replace(/☯[ ☯]*/g,\"\\n\")\n.replace(/(\\n[〖【『「（《〈〔［｛\\[{(]?)([pPＰｐ][SsｓＳ]+(?=[ ：:;；，,、。.─\\d\\u4e00-\\u9fa5])[^\\n]+)/g,\"$1🌕$2\")\n.replace(/\\[\\[\\[[^\\[\\]]+http:file2.qidian.comchapters(.{5,6})(..)([^\\[\\]]{35})\\]\\]\\]/g,'<img src=\"http://file2.qidian.com/chapters/$1/$2/$3\">')\n.replace(/(<img )[^>]*(src=\"[^\"]+\")[^>]*(>)|((?: ?[＋+－-]?[0-9０-９]+(?:[．.／/][0-9０-９]+)?[％%:：]?[a-zA-Z]*)+ ?|[ _＿－-]?[a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９]+)/g,\"$1$2$3☯$4☯\")\n.replace(/☯[・。](?=☯)/g,\"☯.\")\n.replace(/,\\n/g,\"，\")\n.replace(/!(?=\\n)/g,\"！\")\n.replace(/\\?(?=\\n)/g,\"？\")\n.replace(/(<[^<]+)☯☯/g,\"⚙️$1⚙️\\n\")\n.replace(/(?:\\n[^āáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ\\u4e00-\\u9fa5\\n〖【『「《“‘＜（〈〔［｛({\\[\\]})｝］〕〉）＞’”》」』】〗、，：；？！。…─🌕︴\\n]+|([。？！…”』」】〗])[^a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5\\n〖【『「《“‘＜（〈〔［｛({\\[\\]})｝］〕〉）＞’”》」』】〗、，：；？！。…─☯︴\\n]+[\\u4e00-\\u9fa5]+)?[^a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5\\n〖【『「《“‘＜（〈〔［｛({\\[\\]})｝］〕〉）＞’”》」』】〗、，：；？！。…─⚙️☯︴\\n]+(?=\\n)|[^☯!\"'(),\\s\\u4e00-\\u9fa5、，：；？！。…─〖【『「《“‘＜（〈〔［｛｝］〕〉）＞’”》」』】〗]*☯([a-zA-ZＡ-Ｚａ-ｚ]*[āáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ][a-zA-ZＡ-Ｚａ-ｚ]*)☯[^☯!\"'(),\\s\\u4e00-\\u9fa5、，：；？！。…─〖【『「《“‘＜（〈〔［｛｝］〕〉）＞’”》」』】〗]*/g,\"$1$2\")\n.replace(/[^!\"'(),\\s\\u4e00-\\u9fa5、，：；？！。…─〖【『「《“‘＜<（〈〔［｛({\\[\\]})｝］〕〉）>＞’”》」』】〗︴🌕]*(?:☯[^.．!(),\\n\\u4e00-\\u9fa5、，：；？！。…─〖【『「《“‘＜（〈〔［｛({\\[\\]})｝］〕〉）＞’”》」』】〗⚙️]+|([^☯!(),\\na-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5、，：；？！。…─〖【『「《“‘<＜（〈〔［｛({\\[\\]})｝］〕〉）＞>’”》」』】〗⚙️])(?!\\1)|☯(?=[^☯!(),\\na-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5、，：；？！。…─〖【『「《“‘＜（〈〔［｛({\\[\\]})｝］〕〉）＞’”》」』】〗][!(),\\s\\u4e00-\\u9fa5、，：；？！。…─〖【『「《“‘＜（〈〔［｛({\\[\\]})｝］〕〉）＞’”》」』】〗])|[〖【『「（《〈〔［｛\\[{(][^a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]*[)｝］〕〉》）」』】〗\\]}]){4,}|[^；;％%～~?？!！\"'”’。…─\\na-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]*[〖【『「（《〈〔［｛\\[{(][^a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]*[)｝］〕〉》）」』】〗\\]}](?:[^a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]+(?=[)｝］〕〉》）」』】〗\\]}]))?/g,\"📑\")\n.replace(/([；;％%～~?？!！\"'”’。…─])📑(?=[)｝］〕〉》）」』】〗\\]}])/g,'$1')\n.replace(/(?:([\\n。？！])[^\\n。？！]{1,10})?[〖【『「（《〈〔［｛\\[{(][^〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]*(?:☯[^a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]☯|📑|🌕)[^〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]*[｝］〕〉》）」』】〗\\]})](?:[^。]{0,5}(?:[〖【『「（《〈〔［｛\\[{(][^〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]*(?:☯[^a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]☯|📑)[^〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]*[｝］〕〉》）」』】〗\\]})]|[^📑!,()\\s\\u4e00-\\u9fa5、，：；？！。…─‘’“”（）《》〖〗【】]+))*(?:(?:[^\\n]{1,10}|(?:[\\u4e00-\\u9fa5]{0,5}[，、])*[\\u4e00-\\u9fa5]+[！。]?)(?=\\n))?/g,\"$1\")\n.replace(/((?:[请請][记記]住)?[^⚙️🌕📑︴*\\n(),\\u4e00-\\u9fa5、，：；？！。…─「」‘’“”（）《》〖〗【】]*(?:(?:[^⚙️🌕📑︴*\\n(),\\u4e00-\\u9fa5、：，；？！。…─「」‘’“”（）《》〖〗【】]+[*(), \\u4e00-\\u9fa5、，:：；？！。…─「」‘’“”（）《》〖〗【】]{1,3})*[^*︴📑☯⚙️🌕\\s&;(),āáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜa-zA-ZＡ-Ｚａ-ｚ0-9０-９\\u4e00-\\u9fa5、,，:：;；?？!！。…～~─'\"‘’“”【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}％%・/／＝=_＿.．＋+－-]+(?!(?:[^>]+>)?⚙️)|☯[^☯\\n]+☯\\.☯[^☯\\n]+☯|本[文书](?:首发|来自)|(?:章节不完整.?|完整章节)?请.{2,6}(?:搜索|百度|引擎|关键[词字])+|(?:[阅閱][讀读]|访问|訪問|[網网地][站址]|链接|鏈接|[\\u4e00-\\u9fa50-9a-zA-Z]{0,4}(?:文学|中文|[網网]))+[:：]|[\\u4e00-\\u9fa50-9a-zA-Z]{0,6}(?:[網网地][站址]|链接|鏈接)为|.{2,4}文[学學][網网]|[请請].{2,4}收藏(?:.{0,2}推[荐薦])?|(?:天才)一秒[記记]住|，?請?訪問|(?:[更最][快新]|[快高]速|热门|(?:[阅閱][讀读])?完整|本|(?:官[網网]|本站).{0,2})(?:章[節节]|小说|更新|[網网地][址站][:：]?|快速)|更新(?:速度)?[最更]?快|(?:(?:无错)?小说|正版|免费|全[文本]|在线|访问|訪問|txt|TXT|继续|各种|推[荐薦]|收藏|分享|交流|你?喜欢的)+(?:全文|免费|在线|[阅閱]?[讀读]|下载|章[節节]|小说|好书)|章[節节](?:目录|列表)|小说[網网](?:更新)?|手打全文|[纯全](?:手打|文字)|手机看书|手机版|笔趣阁|(?:本站|[網网]站|站内|看)?无(?:任何)?(?:广告|弹窗|防盗)(?:章节)?|不弹窗|(?:(?:請|请|或者?)?(?:訪問|访问|[電电手][腦脑机機]|[網网][址站]|用[户戶]|浏览|瀏覽|閱讀|阅读|看小说|看漫画)){2,}|看小说|看漫画|(?:用[^\\n]{2,6})?(?:[追看]书|小说)(?:就用|软件|☯[^☯]+☯)，?|用[^\\n]{2,6}[追看]书|(?:..的)?(?:最佳选择|阅读体验)|(?:推[荐薦]|收藏|分享)(?:本站|我们)|小说..版|文章质量更好|谢谢各位(?:读者|书友)支持|水印广告测试|本章未完|请翻页|点击下一页|领.{0,2}红包|同步更新《[^《》]+》|关注[〖【『「（《〈〔［｛\\[{(][^〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]+[)｝］〕〉》）」』】〗\\]}])(?:[* (),\\u4e00-\\u9fa5、，：；？！。…─‘’“”（）《》〖〗【】]{0,3}[^⚙️📑*\\n(),\\u4e00-\\u9fa5、，：；？！。…─「」‘’“”（）《》〖〗【】]+|[….。!！]+(?=\\n))*|⚙️(?!<)[^⚙️\\n]+⚙️)/g,\"\\n⚙️$1⚙️\\n\")\n.replace(/⚙️(<[^<>]+>)⚙️\\n|[〖【『「（《〈〔［｛\\[{(](?:[^〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]{0,3}\\n⚙️(?!\\s*\\S\\s*⚙️).+⚙️\\n*)+[^〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]{0,3}[)｝］〕〉》）」』】〗\\]}]|(🌕)\\s*⚙️|⚙️\\n[^\\u4e00-\\u9fa5]{0,5}\\n⚙️|\\n⚙️\\s*(\\S)\\s*⚙️\\n(?![^⚙️]{1,3}⚙️)|(⚙️\\n)|([，、；])[\\s,，。、…:：;；?？!！`’]*[,，。、…:：;；?？!！`’](?!⚙️)|\\n[\\s,，。、…:：;；?？!！`’]*(?=[,，。、:：;；?？!！])|([：？！。…─])(?:[^⚙️☯a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5\\n…─“‘’”〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]+(?=\\n)|[^⚙️☯a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5\\n…─“‘’”〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]+)|☯/g,\"$1$2$3$4$5$6\")\n.replace(/([)）？！?!…」』”\\s。])(?:[^\\n（(🌕)）”』」’。]{0,5}(?:(?:\\n⚙️.+⚙️\\n|[^（()）\\n”』」。]{0,5}📑)[^（()）\\n。]{0,5}(?:\\n⚙️.+⚙️(?:\\n(?=\\n⚙️|[^（()）\\n]{1,5}\\n))?|[^（()）\\n。]{0,5}📑(?:[^📑]{1,5}(?=\\n⚙️))?)+(?:[^（()）\\n]{1,5}(?=\\n))?|(?:(?:(?:\\n⚙️.+⚙️\\n|[^（()）\\n。]{0,5}📑)[^（()）\\n]{0,5}){2,}|[^（(🌕)）”』」’\\n。]{0,5}(?:(?:請|关键[词字]|[電电手][腦機]|用戶|瀏覽|[阅閱]讀|推[薦荐]|收藏|分享|文章质量|谢谢(各位|支持|大家)|水印|翻页|点击|下[一\\s]*[页頁篇章回节節话話]|免费|热门|官网|正版|在线|同步|下载|文学|中文|章节|[本网][站址]|站内|小说|更新|无错|[本全][文本章]|首发|广个?告|弹窗|防盗|访问|訪問|txt|TXT|读者|书友|百度|[插说]一?[下句]话?，[\\u4e00-\\u9fa5]{0,5})[^（()）\\n]{0,5})*(?:📑|\\n⚙️[^\\n]+⚙️\\n)[^（()）\\n]{0,5}(?:(?:請|关键[词字]|[電电手][腦機]|用戶|瀏覽|[阅閱]讀|推[薦荐]|收藏|分享|文章质量|谢谢(各位|支持|大家)|水印|翻页|点击|下[一\\s]*[页頁篇章回节節话話]|免费|热门|官网|正版|在线|下载|同步|文学|中文|章节|[本网][站址]|站内|小说|更新|无错|[本全][文本章]|首发|广个?告|弹窗|防盗|访问|訪問|txt|TXT|读者|书友|百度)[^（()）\\n]{0,5})*|[^（(🌕)）\\n”』」’。]{0,3}\\n⚙️.+⚙️\\n[^（()）\\n。]{0,3})(?:[\\u4e00-\\u9fa5]+[！。]?|[^a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5\\n]+)?(?=\\n)))+|\\n⚙️[^\\u4e00-\\u9fa5]+⚙️\\n|📑|\\s*︴\\s*|\\n?⚙️\\n?|\\n[^a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5\\n]{2,}\\n[^🌕a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5\\n“《‘【〖『「]*/g,\"$1\")\n.replace(/(?:(?:\\n🌕[^\\n]*)+(?:\\n+[^\\n]+){0,4}|\\n(?:[(（{｛][^(（<{｛｝}>）)]*(?:(?:[(（{｛][^(（<{｛｝}>）)]*[）)｝}])[^(（<{｛｝}>）)]*)*[）)｝}]?\\s*)+|[^\\n]*起点(?:原创|中文)[^\\n]*|[〖【『「（《〈〔［｛\\[{(]?未完待续[^\\n]*)[^\\u4e00-\\u9fa5<>]*$|^\\s*(?:(?:[^\\n]+\\n+){0,4}(?:🌕[^\\n]*\\n?)+|(?:[(（{｛][^(（<{｛｝}>）)]*(?:(?:[(（{｛][^(（<{｛｝}>）)]*[）)｝}])[^(（<{｛｝}>）)]*)*[）)｝}]?\\s*)+|，[^\\n]+)\\n|(?:^|\\n)[^a-z0-9A-Z\\u4e00-\\u9fa5]*(?=\\n)|🌕|\\n\\s*[a-zA-Z]+\\s*$/g,\"\")}"
        },
        "ruleExplore": {
            "author": "",
            "bookList": "",
            "bookUrl": "",
            "intro": "",
            "name": ""
        },
        "ruleSearch": {
            "author": "@get:{au}",
            "bookList": "@js:jsoup=org.jsoup.Jsoup.parse;\nfor(i=0,r=jsoup(src);i<100;i++){\ner=r.select(\".b_algo:not(:has(:matches(^(广告|推广|手游)$)))\");\nif(er.size()){break\n}else r=jsoup(java.ajax(baseUrl));\n}er",
            "bookUrl": "h2 a@href",
            "coverUrl": "",
            "intro": "p@text",
            "kind": "@js:java.get(\"类\")",
            "lastChapter": "h2 a@href##[^/]+//",
            "name": "h2 a@text\n@js:re=String(src).replace(/\\s*(?:&nbsp;)+\\s*/g,\" \").replace(/\\s*<\\/?(?:strong|i)>\\s*/g,\"\");\nif(类=re.match(/(?:[\\s\\[\\];?!,.()、，；？！。…─（）［］〖〗【】》]|<[^a/][^>]*>|<\\/[^>]+>)(?:[分大]\\s*类|类\\s*[型别])(?:[:：\\s]|<[^>]+>)+([^\\s<\"./／｜|>]+)/))java.put(\"类\",类[1]);\nkey=java.get(\"key\");\nax=java.get(\"aut\");\njava.put(\"源\",r=(r=result.match(/(.{0,2})《([^《》]+)》(.{0,3})/))&&r[3]!=\"作品集\"&&!r[1].match(/新[书作]/)?r[2]:result);\n\nr=r.replace(/^(简介页|详情页|目录页|正版|全本|免费阅读|[\\s。.,_/|《「『【〖（(\\[\\])）〗】』」─—-]+)+/,\"\").replace(/(?!^)[^\\u4e00-\\u9fa5a-zA-Z0-9]*(?:笔趣阁|思路客|燃文|小说|漫画|手机)?(?:[.|,_/\\s「『【〖（(\\[\\])）〗】』」。─—-]|(?:人工|机器|电脑)?校正|精校|完[整结]|加料|番外|未删节|简介|全[文本集]|下载|(?:小说|漫画|大全|正版(?:小说|漫画)?|免费|免费小说|免费漫画|免费全[文本]|在线|最[新快]|全部|手机|电脑)(?:全[文本集部]|大全|免费|在线|阅读|下载|章节|小说|更新|漫画|\\.)|([^a-zA-Z0-9])(?:azw|mobi|epub|txt)(?![a-zA-Z0-9])|(?:最全)?(?:章节|目录|列表){2,}|更新章节最快|无广告|(?::顶点)?无弹窗|无防盗|小说网|手打全文|[纯全](?:手打|文字)|\\s*by\\s*(?=[\\u4e00-\\u9fa5]))[\\S\\s]*/i,\"$1\");\n\nif(ax==\"#\"||!~re.indexOf(ax)){\nax=re.match(/《([^《》]+)》作品集|[\\s\\[\\];?!,.()、，；？！。…─（）［］〖〗【】《》>]作\\s*者(?:[:：\\s“\"'(（]|<[^it\\/][^>]*>|<\\/[^>]+>)+(?![^\\s<(《“（）”》)>\\/\\[\\];?!,、，；？！。…─［］〖〗【】]*\\.{3}<)([^\\s<(《“（\"'）”》)>\\[\\];?!,、，；？！。…─［］〖〗【】/／｜|:：]+?)(?=(?:其[他它]|小说|[更最][快新]|\\.\\s*)?..[:：]|所?写?的《|[\\s<(《“（\"'）”》)>\\[\\];?!,、，；？！。─［］〖〗【】/／｜|])/);\nif(!ax){\nax=re.match(new RegExp(r+\"[^a-z0-9A-Z\\\\u4e00-\\\\u9fa5]*([^\\\\s]+?)\\\\s+著|(?:由|原创)(?:(?:原创|网络)?作[家者])?(?![\\\\u4e00-\\\\u9fa5a-zA-Z0-9_-]*(?:[书网]友|网)所?提供)([\\\\u4e00-\\\\u9fa5a-zA-Z0-9_-]+?)(?:为大家)?(?:所作|所?(?:(?:[精倾]心)?[创著]作|提供|写?的(?:《|\"+r+\")))\"));\nif(!ax)ax=result.match(/[^.|,_/\\s\\[\\]（()）【〖〗】。-]+[（(](?![^\\s]+[\\s、：；？！…─“‘《〖【，。:;?!\"'】〗》’”][^(（）)]+|(?:连载中?|完本|大结局|上|中|下|[\\s.一二三四五六七八九十百千万〇零0-9]+)[）)])([^（()）]+?)(?:(?:\\s+|所)?著|的?新书|[/／｜|][^)）]+)?[)）]/)}\nax=ax?ax[1]||ax[2]:\"\"}\n\nif(!ax.length&&~re.indexOf(key)&&!~r.indexOf(key))ax=key;\n\nif(r.indexOf(ax)>0&&!~key.indexOf(r))r=r.split(ax)[0].replace(/[:：]$/,'');\n\nzt=[(小说=key.indexOf(\"小说\"))&&小说^(长=key.length-2),(有声=key.indexOf(\"有声\"))&&有声^长];\nif(zt[0]&&zt[1]){\nrez=\"(?!^)(有声|小说|有声小说)$|^(有声|小说|有声小说)(?!$)\"\n}else if(zt[1]){\nrez=\"(?!^)有声$|^有声(?!$)\"\n}else if(zt[0]){\nrez=\"(?!^)小说$|^小说(?!$)\"\n}else rez=\"☯\";\nif((漫画=key.indexOf(\"漫画\"))&&漫画^长)rez+=\"|(?!^)漫画$|^漫画(?!$)\";\n\nix=r.replace(new RegExp(rez),\"\").split(/[：:]/);i=0;\nwhile(i<ix.length){x=ix[i];\nif(~x.indexOf(key)||~key.indexOf(x))break;i++}\nif(i==ix.length)i=0;\n\njava.put(\"au\",ax);\njava.put(\"bb\",ix.slice(i,i+2).join(\":\"))",
            "wordCount": ""
        },
        "ruleToc": {
            "chapterList": "@js:if(java.get(\"单\")==''){\nsrc=org.jsoup.Jsoup.parse(src);\n\nif((result=java.get(\"录\"))==\"\"){if(页=(result=src.select('a[href~=\\\\S]:matches(下[一\\\\s]*[页頁]|下[一二三四五六七八九十百千万〇零0-9]{2,}章):not([href~=^#|javascript:])')).size())result=result.first().attr('href')\n}else{网=String(result).split(\"🌕\");\nfor(i=3,页=+网[0],result=网[1]+2+网[3];i<=页;i++)result+='\\n'+网[1]+i+网[3];\nresult=String(result)}\n\nif(页)java.put(\"页\",/,/.test(book.tocUrl)?result.split('\\n').join(',{\"webView\":true}\\n')+',{\"webView\":true}':result);\n\n嗅=()=>String(src).match(/[\\[(]([\"'])<[a-z]+[ >][^\\[\\]()]+<\\/a>(?:[^\\[\\],()]*<\\/[a-z]+>)?\\1[\\])]/);\n转=it=>it.replace(/\\\\[Uu]([0-9a-zA-Z]{4})/g,(_,it)=>String.fromCharCode(parseInt('0x'+it)));\n兜=()=>src.select(':matchesOwn(^$|[0-9〇一二三四五六七八九十])>a:matches(\\\\S):not(:has(*>*>:not(span)),[href~=(?i)passport|\\\\.aspx$|\\\\.php$|^https://[^/]+(/|index\\\\.[a-z]+)?$|(^|[^/])[?/].*((book|[^a-z])(info|case|page|reg|Game|Play)[^a-z]|buy[^a-z]|SystemInfo|hot|sort|desc|asc|top|coins|nutrition|review|ticket|update|(app|author|xiazai|down)(?!=))|/list\\\\d*([/_-][^/_-]+/?)?$|\\\\d+_\\\\d+_\\\\d+|target=iframe|https%],:matches((?i)^((点击|软件|应用|安装|客户|移动|手机|电脑|安卓|苹果|下载|阅读|pc|ap[kp]|ipa|plx|deb|exe|zip|rar|txt|epub)[\\\\s.端版]*(?=$|点击|软件|应用|安装|客户|移动|手机|电脑|安卓|苹果|下载|阅读|pc|ap[kp]|ipa|plx|deb|exe|zip|rar|txt|epub)|[A-Za-z0-9\\\\u4e00-\\\\u9fa5]?返回.*(简介|书页|目录)[A-Za-z0-9\\\\u4e00-\\\\u9fa5]?|[<>-]+|\\\\d+-\\\\d+章|书页|目录|简介|[上下首尾]([一\\\\s]*[页頁]|[\\\\s\\\\d零〇一二三四五六七八九十百]*章)|[↑\\\\[]?[倒正反逆顺順]序[↓\\\\]]?)$))');\n\nif((zt=java.get(\"嗅\"))!=''){\nif(zt>0&&(嗅=嗅())){\nsrc=嗅[0];\nif(zt==2)src=转(src);\nsrc=org.jsoup.Jsoup.parse(src)}\nsrc.select(java.get(\"除\")).remove();\nif(java.get(\"兜\")==1)src=兜();\nsrc=src.select(java.get(\"查\"))\n\nif(!页){for(首=String(java.get(\"首\")).split('\\n'),ss=src.size(),i=0;i<ss;i++)if(首[i]!=src.get(i)){\nif(i>1)src.subList(1,i).clear();break;}}\n\n}else{\nbook.putVariable(\"除\",除=\"meta,link,a:has(img),\"+((zt=java.get(\"全\")!=1)?\"a[href$=\"+String(book.tocUrl).replace(/,\\{\"webView\":true\\}|^.{8}[^/]*/g,'')+\"],\":\"\")+(基=String(java.get(\"基\")),基==''?'':\"a[href$=\"+基.replace(/^.{8}[^/]*/,'')+\"],\")+\"a[href~=javascript:|#|[a-z]+[A-Z][a-z]+Id[=_-]|[^/][/?&]sub[A-Z]|action=list],a:matches(^$|最新章节$|^[^\\\\u4e00-\\\\u9fa5A-Z0-9]*(正文|.{0,2}书架|(免费|在线|开始|立即|全文|从头|点击|正文)+[试阅]读|[^\\\\s\\\\d外内楔前后卷篇章]*(更新调整|[两一二三四五六七八九十]+连更|作者[:：给要有]|双倍月票|感言|推书|推[a-z0-9A-Z_\\\\u4e00-\\\\u9fa5-]+书|[求个请投点下张](月?票|收藏|订阅|推荐)|(感谢|作者)[^\\\\s]*(读者|书友|大家|各位)|[书点]评[^\\\\s]*活动|[没有空]更新|没时间更新|请个?假|关于本书|关于更新|打赏名单|起点活动)[^\\\\s]*)[^\\\\u4e00-\\\\u9fa5A-Z0-9]*$)\");\n\nbook.putVariable(\"嗅\",(基=嗅())?(src=org.jsoup.Jsoup.parse((zt=/\\\\[Uu]([0-9a-zA-Z]{4})/.test(基=基[0]))?转(基):基),zt)?2:1:0);\nsrc.select(除).remove();\n\nif(zt=java.get(\"全\")!=1){\n找=ll=null;\n$=it=>(qc=ll,查=找,ll=src.select(找=it)).size()>14&&(查=it,src=re=ll);\n\nif(!(((ck=java.get(\"ck\"))!=\"\"&&$(\"[href~=\"+ck+\"(?!index(/|\\.[a-z]+)?$)[^.?/_-][^&/_-]*/?$|/[vV][iI][pP][_-]?([Rr]ead|[Cc]hapter|action=article)|([A-Za-z]\\\\d+|\\\\d[A-Za-z]+|[A-Z][a-z]+|[a-z][A-Z]+){3,}[^/?&]*$]\"))||$(\"[href~=^[a-z0-9]+(/|\\\\.[^./]+)?$]\"))){\nif(qc&&qc.size()>ll.size())找=查,ll=qc;\n\n$=it=>(re=src.select(it)).size()&&(查=it,src=re);\n\nif(!($(\"[data-cid]\")||$(\"[href~=(?i)(^|[/_-])(chapter|read)+([_-]?id)?/[^/_-]+[/_-][^/_-]+]\")||$(\"[href~=(?i)(^|[&?/_-](book|novel|comic|manhua|mh?)?)(chapter|read)+([_-]?id)?[?/=]]\")||$(\"[href~=(?i)[&?/_-]cid[&?/_=-]]\")||$(\"[data-href]\"))){\nsrc=兜();\nbook.putVariable(\"兜\",1);\n\nba=(ba=String(java.get(\"ba\"))).match(/(\\?(?:[^=]+=)+)(.+)$/)||ba.match(/(?:[^/_-][/_-]([^/._-]+))?[/_-]([^/._-]+)(?:\\/|\\/index[^/]*|\\.[^/.]+)?$/);\n\nif(xi=(id=ba[2]).match(/\\?[^=]+=([^&]+)/)||id.match(/^[^\\d%]*(\\d{2,}|[1-9])$/)||ba[1]&&ba[1].match(/^[^\\d%]*(\\d{2,})$/))id=xi[1];\n\n$(\"[href~=([^\\\\d]|^)\"+id+\"[/_&-][^\\\\d]*\\\\d+]:not([href~=\"+id+\"[^\\\\d]*$]),[href~=/[vV][iI][pP]|([A-Za-z]\\\\d+|\\\\d[a-zA-Z]+|[A-Z][a-z]+|[a-z][A-Z]+){3,}[^/?]*$|([^\\\\d]|^)\"+id+\"[/_&-][^\\\\d]*\"+id+\"(/|\\\\.[^.]+|&.+)?$]\")||$(\"[title]\")||$(\"[href~=/view/\\\\d+\\\\.[a-zA-Z]+$]\")}\nif(re.size()<ll.size())查=找,src=ll}}\n\nif(!(zt&&re.size()))src=src.select('a'),查='a';\nif(查)book.putVariable(\"查\",查);\nif(页)java.put(\"首\",src)}\n\nsrc}else if((list=java.get(\"单\"))!=1){\n\nif((网=String(list).split(\"🌕\")).length>1){\nfor(i=+网[2],x=+网[0],j=2,list=\"<a href='\"+baseUrl+\"'>正文1</a>\";i<=x;i++,j++)list+=\"<a href='\"+网[1]+i+网[3]+\"'>正文\"+j+\"</a>\"}\n\norg.jsoup.Jsoup.parse(list).select('a')\n\n}else org.jsoup.Jsoup.parse(\"<a href='\"+baseUrl+\"'>正文</a>\").select('a')",
            "chapterName": "text",
            "chapterUrl": "href@js:chapter.putVariable(\"next\",'a[href~=(?:^|[?/])'+(r=result.trim().replace(/([*$|?+(){}\\[\\]\\^\\\\])/g,'\\\\$1')).match(/[^?/=.]+(?:=(?![01]$)[^=]+)*(?=\\/*$|\\.[^?/.]+$|=[01]$)/)[0]+'[=/_-]2(?:\\\\/|\\\\.[^?/.]+)? *$]@href||a[href~=(?:^|[?/])'+r.replace(/\\d+(?=[^\\d]*$)/,it=>+it+1)+' *$]@href||');result+java.get(\"动\")",
            "nextTocUrl": "@js:java.get(\"页\")"
        },
        "searchUrl": "https://cn.bing.com/search?first={{(page-1)*10+1}}&q={{\nkey=key.trim();aut=\"#\";\nif(ke=key.match(/^([单跳逆动静字图]+)\\^([\\S\\s]+)/))key=ke[2],java.put(\"custom\",ke[1]);\nz=key.lastIndexOf(\"#\")+1;\ns=key.lastIndexOf(\"$\");\nif(/\\$[a-zA-Z0-9/._-]+$/.test(key))key=key.slice(0,s).concat(\" site:\",key.slice(s+1));\ns=s+1?s:key.length;\nas=key.slice(z?z:s,s);\nif(!/^\\s*$/.test(as)){\naut=as.match(/[^\\s\"]+/)[0];\nkey=key.slice(0,z-1).concat(\" \",key.slice(z))}\njava.put(\"aut\",aut);\njava.put(\"key\",key.match(/[^\\s\"]+/)[0]);\nkey}}",
        "weight": 0
    },
    {
        "bookSourceComment": "─────当前版本Pro V50─────\n\n点击登录即可查看:\n\n0、书源制作思路\n\n1、版本更新日志\n\n2、书源用法展示\n\n3、相关问题解释\n\n───────搜索格式────────\n\n完全格式：书名#作者$网站\n简化格式1：书名$网站\n简化格式2：书名#作者\n简化格式3：书名\n\n说明：搜索“斗破苍穹#天蚕土豆$www.qidian.com”将在“www.qidian.com”中搜索名为斗破苍穹、作者为天蚕土豆的书籍\n\n──────前缀设置全体───────\n\n用法：“单跳逆原动静字图”等字后跟“^”再跟“搜索关键字”，可实现这些字对应的功能。\n\n范围：本次搜索到的所有书籍都会执行指定的功能。\n\n示例：“图^斗破苍穹”、“逆静^斗破苍穹#天蚕土豆”、“跳^斗破苍穹$www.qidian.com”。\n─────⤵\n跳：允许目录自动跳转，目录标题说点击跳转时可如此做。\n\n逆：设置书籍目录章节逆向排序，配合指定网站的搜索方式针对小说全是逆向排序的网站比较方便。\n\n原：设置书籍不进行净化替换，优点是加载正文快速且不会被误删内容，缺点是需要自己写“替换净化”规则并在正文中启用才能净化网站推广文本。\n\n动：强制设置正文动态加载(正文默认会进行需要动态加载还是静态加载的判断，然后自动切换模式，若判断失误导致本应切换成动态加载却未切换时，可强制设置正文动态加载)。\n\n静：强制设置正文静态加载(正文默认会进行需要动态加载还是静态加载的判断，然后自动切换模式，若判断失误导致本应保持静态加载却切换成动态加载而使正文加载时间变长时，可强制设置正文静态加载)。\n\n图：设置成看图模式(不设置则默认图文模式)，只显示图片，不显示文字。\n\n字：设置成纯字模式(不设置则默认图文模式)，只显示文本，不显示图片。\n─────⤴\n\n──────书籍变量设置───────\n\n用法：\n将“单直跳全逆原图字动静”中任意多个字\n或“[目录url]”或“[正文尾页url]单”\n或“数字#第二页链接#”\n或“[目录尾页url]录”\n放在详情页右上角的书籍变量中，\n确认后点刷新就能触发这些字段对应的功能。\n\n范围：只控制当前书籍执行指定功能。\n\n书籍变量格式示范：[http://m.biquku.la/0/425/]全字\n\n─────⤵\n直：不做目录识别，直接将详情页作为目录页，或以“[目录链接]”格式直接指定目录链接，目录识别错误时可这种做。\n\n全：直接显示“预览正文”和查询到的所有章节，跳过章节筛选环节，单页文章和部分筛选后章节不全的小说网站可这样做。\n─────⤴\n\n──目录有分页却无翻页按钮或书籍无目录──\n\n单：无目录打开即正文但有尾页或下一页按钮的书籍，必须设置为单向模式，这样书源会直接将入口页作为正文第一页，并将第一页及其所有下一页共同构造生成“正文1”、“正文2”…的目录形式来阅读，搜索前缀“单^”、书籍变量“单”。\n\n录：有目录分页但无目录下一页按钮的书籍，可在书籍变量中直接指定复制到的最后目录页链接为目录链接并添加指令“录”，即可自动生成所有目录分页。\n书籍变量：“[https://m.zuizaoxiaoshuo.com/ml/33280_13]录”\n\n辅助生成──无目录打开即正文也无尾页和下一页按钮的书籍，需指定章节数量并用第二页链接作为参考链接生成所有分页。\n书籍变量──220#https://wap.yqshuwang.com/2021n/02/14972_2.html#\n效果说明──根据第二页链接“https://wap.yqshuwang.com/2021n/02/14972_2.html”生成220条章节的目录列表。\n\n单个章节──目录仅一个章节且这个章节正文中无下一页按钮时，可复制那个章节的正文尾页链接并用指令“单”，便可将所有正文分页构造成章节列表。\n书籍变量──[http://www.yulinzhanye.la/20/20733/532447_9.html]单\n\n───────夸克发现说明──────\n\n夸克通过发现每次进入都会重定向到新的网站，为了避免刷新目录导致链接变来变去，故自动生成当前书籍链接方在“书籍变量”中。\n\n想重新自动定向到新网站，可清空书籍变量确认后刷新，若不清空则一直访问生成的网站。",
        "bookSourceGroup": "📑夸克搜书,通用",
        "bookSourceName": "夸克搜书",
        "bookSourceType": 0,
        "bookSourceUrl": "夸克搜书",
        "bookUrlPattern": "",
        "customOrder": 72,
        "enabled": true,
        "enabledCookieJar": false,
        "enabledExplore": true,
        "exploreUrl": "[{\n    \"title\": \"男频🚹总榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=全部&rank=rank_update\",\n    \"style\": {\"layout_flexGrow\": 1}\n },{\n    \"title\": \"玄幻热搜榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=玄幻&rank=rank_hot\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": true}\n },{\n    \"title\": \"玄幻好评榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=玄幻&rank=rank_good\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"玄幻完结榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=玄幻&rank=rank_finish\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"玄幻窜升榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=玄幻&rank=rank_increase\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"玄幻新书榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=玄幻&rank=rank_new\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"玄幻勤更榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=玄幻&rank=rank_update\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"都市热搜榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=都市&rank=rank_hot\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": true}\n },{\n    \"title\": \"都市好评榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=都市&rank=rank_good\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"都市完结榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=都市&rank=rank_finish\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"都市窜升榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=都市&rank=rank_increase\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"都市新书榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=都市&rank=rank_new\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"都市勤更榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=都市&rank=rank_update\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"科幻热搜榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=科幻&rank=rank_hot\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": true}\n },{\n    \"title\": \"科幻好评榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=科幻&rank=rank_good\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"科幻完结榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=科幻&rank=rank_finish\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"科幻窜升榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=科幻&rank=rank_increase\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"科幻新书榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=科幻&rank=rank_new\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"科幻勤更榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=科幻&rank=rank_update\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"历史热搜榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=历史&rank=rank_hot\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": true}\n },{\n    \"title\": \"历史好评榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=历史&rank=rank_good\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"历史完结榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=历史&rank=rank_finish\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"历史窜升榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=历史&rank=rank_increase\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"历史新书榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=历史&rank=rank_new\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"历史勤更榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=历史&rank=rank_update\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"仙侠热搜榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=仙侠&rank=rank_hot\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": true}\n },{\n    \"title\": \"仙侠好评榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=仙侠&rank=rank_good\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"仙侠完结榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=仙侠&rank=rank_finish\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"仙侠窜升榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=仙侠&rank=rank_increase\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"仙侠新书榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=仙侠&rank=rank_new\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"仙侠勤更榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=仙侠&rank=rank_update\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"游戏热搜榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=游戏&rank=rank_hot\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": true}\n },{\n    \"title\": \"游戏好评榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=游戏&rank=rank_good\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"游戏完结榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=游戏&rank=rank_finish\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"游戏窜升榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=游戏&rank=rank_increase\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"游戏新书榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=游戏&rank=rank_new\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"游戏勤更榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=游戏&rank=rank_update\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"武侠热搜榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=武侠&rank=rank_hot\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": true}\n },{\n    \"title\": \"武侠好评榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=武侠&rank=rank_good\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"武侠完结榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=武侠&rank=rank_finish\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"武侠窜升榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=武侠&rank=rank_increase\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"武侠新书榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=武侠&rank=rank_new\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"武侠勤更榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=武侠&rank=rank_update\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"灵异热搜榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=灵异悬疑&rank=rank_hot\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": true}\n },{\n    \"title\": \"灵异好评榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=灵异悬疑&rank=rank_good\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"灵异完结榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=灵异悬疑&rank=rank_finish\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"灵异窜升榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=灵异悬疑&rank=rank_increase\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"灵异新书榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=灵异悬疑&rank=rank_new\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"灵异勤更榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=灵异悬疑&rank=rank_update\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"奇幻热搜榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=奇幻&rank=rank_hot\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": true}\n },{\n    \"title\": \"奇幻好评榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=奇幻&rank=rank_good\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"奇幻完结榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=奇幻&rank=rank_finish\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"奇幻窜升榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=奇幻&rank=rank_increase\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"奇幻新书榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=奇幻&rank=rank_new\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"奇幻勤更榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=奇幻&rank=rank_update\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"军事热搜榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=军事&rank=rank_hot\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": true}\n },{\n    \"title\": \"军事好评榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=军事&rank=rank_good\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"军事完结榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=军事&rank=rank_finish\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"军事窜升榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=军事&rank=rank_increase\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"军事新书榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=军事&rank=rank_new\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"军事勤更榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=军事&rank=rank_update\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"体育热搜榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=体育&rank=rank_hot\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": true}\n },{\n    \"title\": \"体育好评榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=体育&rank=rank_good\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"体育完结榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=体育&rank=rank_finish\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"体育窜升榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=体育&rank=rank_increase\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"体育新书榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=体育&rank=rank_new\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"体育勤更榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=male&cate=体育&rank=rank_update\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"女频🚺总榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=female&cate=全部&rank=rank_update\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": true}\n },{\n    \"title\": \"现言热搜榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=female&cate=现言&rank=rank_hot\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": true}\n },{\n    \"title\": \"现言好评榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=female&cate=现言&rank=rank_good\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"现言完结榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=female&cate=现言&rank=rank_finish\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"现言窜升榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=female&cate=现言&rank=rank_increase\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"现言新书榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=female&cate=现言&rank=rank_new\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"现言勤更榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=female&cate=现言&rank=rank_update\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"同人热搜榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=female&cate=同人&rank=rank_hot\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": true}\n },{\n    \"title\": \"同人好评榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=female&cate=同人&rank=rank_good\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"同人完结榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=female&cate=同人&rank=rank_finish\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"同人窜升榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=female&cate=同人&rank=rank_increase\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"同人新书榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=female&cate=同人&rank=rank_new\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"同人勤更榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=female&cate=同人&rank=rank_update\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"古言热搜榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=female&cate=古言&rank=rank_hot\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": true}\n },{\n    \"title\": \"古言好评榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=female&cate=古言&rank=rank_good\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"古言完结榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=female&cate=古言&rank=rank_finish\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"古言窜升榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=female&cate=古言&rank=rank_increase\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"古言新书榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=female&cate=古言&rank=rank_new\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"古言勤更榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=female&cate=古言&rank=rank_update\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"轻幻热搜榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=female&cate=二次元&rank=rank_hot\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": true}\n },{\n    \"title\": \"轻幻好评榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=female&cate=二次元&rank=rank_good\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"轻幻完结榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=female&cate=二次元&rank=rank_finish\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"轻幻窜升榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=female&cate=二次元&rank=rank_increase\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"轻幻新书榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=female&cate=二次元&rank=rank_new\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"轻幻勤更榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=female&cate=二次元&rank=rank_update\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"幻言热搜榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=female&cate=幻言&rank=rank_hot\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": true}\n },{\n    \"title\": \"幻言好评榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=female&cate=幻言&rank=rank_good\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"幻言完结榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=female&cate=幻言&rank=rank_finish\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"幻言窜升榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=female&cate=幻言&rank=rank_increase\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"幻言新书榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=female&cate=幻言&rank=rank_new\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"幻言勤更榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=female&cate=幻言&rank=rank_update\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"校园热搜榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=female&cate=校园&rank=rank_hot\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": true}\n },{\n    \"title\": \"校园好评榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=female&cate=校园&rank=rank_good\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"校园完结榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=female&cate=校园&rank=rank_finish\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"校园窜升榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=female&cate=校园&rank=rank_increase\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"校园新书榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=female&cate=校园&rank=rank_new\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"校园勤更榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=female&cate=校园&rank=rank_update\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"耽美热搜榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=female&cate=耽美&rank=rank_hot\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": true}\n },{\n    \"title\": \"耽美好评榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=female&cate=耽美&rank=rank_good\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"耽美完结榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=female&cate=耽美&rank=rank_finish\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"耽美窜升榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=female&cate=耽美&rank=rank_increase\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"耽美新书榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=female&cate=耽美&rank=rank_new\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n },{\n    \"title\": \"耽美勤更榜\",\n    \"url\": \"https://quark.sm.cn/api/rest?method=Novelnew.home&gender=female&cate=耽美&rank=rank_update\",\n    \"style\": {\"layout_flexGrow\": 1,\"layout_wrapBefore\": false\n    }\n }]",
        "header": "{\"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36\"}",
        "lastUpdateTime": 1650209811066,
        "loginUrl": "https://gitee.com/no-mystery/shuyuan/",
        "respondTime": 180000,
        "ruleBookInfo": {
            "author": "@get:{x}",
            "canReName": "true",
            "coverUrl": "@js:java.get('key')==''&&book.coverUrl||((s=java.getStringList('img[alt*='+book.name+']@src||meta[property$=image]@content||img[src~=(cover|file|article)[^a-z]|/\\\\d+[/_-]\\\\d+(s?\\\\.|$)]@src||img[data-src~=\\\\S]@data-src||img[src*=/img]@src||img[src~=^(data|https?):|^[^:]+/]@src')).size()&&/^data:/.test(s=s.get(0))?java.base64Encode(s):s)",
            "init": "",
            "intro": "@js:java.get(\"g\")",
            "kind": "@js:java.get(\"v\")",
            "lastChapter": "@get:{z}",
            "name": "@js:正=true;\nif((key=String(java.get(\"custom\"))).length){\nif(~key.indexOf(\"全\"))java.put(\"全\",1);\nif((\nu=key.match(/[^\\[\\]]+(?=\\])/),\nc=~key.indexOf(\"录\"),\ny=~key.indexOf(\"单\"),\nbaseUrl=u?u[0]:baseUrl,\n(c||u)&&(baseUrl=c||y?(baseUrl=String((c=baseUrl.match(/(.+[^\\d])(\\d+)([^\\d]*)$/))[1]+1+c[3]),\nc=c[2]+'🌕'+c[1]+'🌕'+2+'🌕'+c[3],\nbaseUrl):baseUrl)\n)||~key.indexOf(\"直\")\n)java.put(\"目\",1),正=1;\nif(~key.indexOf(\"录\"))java.put(\"录\",c),正=1;\nif(y||~key.indexOf(\"#\")){\nif(!u){\nif((网=key.match(/(\\d+)#([^#]+)/))\n&&(尾=网[1],网=网[2].match(/^(.*[^\\d])([12])([^/?\\d]*)$/))\n||(尾=r.select('a[href~=\\\\d[^/?\\\\d]*$]:matches(^(尾|末|最后一)[頁页篇章回节節话話]$)')).size()\n&&(网=r.select('a:matches(^2$)')).size()\n&&(网=String(网.first().attr('href')).match(/^(.*[^\\d])([12])([^/?\\d]*)$/))\n&&(尾=String(尾.first().attr('href')).match(/\\d+(?=[^/?\\d]*$)/)[0])){\nc=尾+'🌕'+网[1]+'🌕'+网[2]+'🌕'+网[3]\n}else if((c=r.select('a:matches(^(\\\\d+|…+|\\\\.+)$)')).size()){\nif((网=String(c).split(/<a[^>]+>[^\\d<]+<\\/a>/)).length==2){\nfor(c=网[0],尾=网[1],x=+网[1].match(/>([^<]+)/)[1],网=网[0].match(/href=\"([^\"]*[^\\d])(\\d+)([^/?\\d\"]*)\"[^>]*>([^<]+)<[^<]+$/),j=+网[4],i=+网[2]-j;j<x;j++)c+=\"<a href='\"+网[1]+(j+i)+网[3]+\"'>\"+j+\"</a>\";\nc+=尾}\n}else c=1}\njava.put(\"单\",c),正=false}\nif(~key.indexOf(\"跳\"))java.put(\"跳\",1);\nif(~key.indexOf(\"逆\"))book.setReverseToc(true);\nelse book.setReverseToc(false);\nif((u=~key.indexOf(\"图\"))||~key.indexOf(\"原\"))java.put(\"原\",1);\nif(~key.indexOf(\"动\"))java.put(\"动\",',{\"webView\":true}');\nelse if(~key.indexOf(\"静\"))java.put(\"静\",1);\nif(u||~key.indexOf(\"字\"))java.put(\"文\",u?1:2)\n}else book.setReverseToc(false);\n\nif(zt=java.get(\"key\")==\"\"){\nif(key.indexOf(\"[h\")==key.indexOf(\"#h\")){\nr=java.getStringList(\"#results>div:has(a.c-header-inner:not([href~=\\\\.(baidu|qq|google|so|sogou|toutiao|bing|bilibili|douban|zhihu|shuqi|dangdang|sohu|renren|kaixin001|sina|163|ifeng)\\\\.com|\\\\.(sm|tianya)\\\\.cn|javascript:|&fr=shenma_],:matches(^(广告|推广|官方|手游|正版)$)):matches(番外|阅读|未删[减节]|完整版|最新(章节|更新|\\\\.)|[^0-9a-zA-Z]([aA][Zz][Ww]|[mM][Oo][bB][Ii]|[Ee][pP][uU][Bb]|[Tt][Xx][Tt])(?![0-9a-zA-Z])|章节|目录|弹窗|广告|防盗|手打全文|[纯全](?:手打|文字)|全[文本集])) a.c-header-inner@href||a.c-header-inner:not([href~=\\\\.(baidu|qq|google|so|sogou|toutiao|bing|bilibili|douban|zhihu|shuqi|dangdang|sohu|renren|kaixin001|sina|163|ifeng)\\\\.com|\\\\.(sm|tianya)\\\\.cn|javascript:|&fr=shenma_])@href\");\n\nif(r.size()){\n\nfor(i=0;i<r.size();i++){\n\ntry{z=(zz=java.get(ua=r.get(i),{})).statusCode()}catch(e){z=false}\n\nif(z==200||z==301&&(zt=false,true)){\njava.put(\"custom\",\"[\"+(baseUrl=String(zt?ua:zz.header(\"Location\")))+\"]\");\nif(zt)zt=!/<meta[^<>]+charset(?![ =:\"']+[uU][tT][fF]-8)|^[^<]*$/i.test(result=zz.body());\njava.put(\"访问\",zt?1:\"\");\nbreak;}\n}\n}\n}\nif(java.get(\"访问\")==\"\")result=java.ajax(baseUrl)}\n\nr=org.jsoup.Jsoup.parse(result);\nr.select(\"script,noscript,style,head>:not(meta),footer,[class~=^foot],[id~=^foot],a:has(>:last-child:matchesOwn(^分类$))\").remove();\n\nn=String(book.name);\n\nm=String(r).replace(/(?:&nbsp;)+/g,\" \");\n\nif(z=!zt){书=java.get(\"源\");\n\nif(x=(y=r.select('[property$=book_name]')).size()){\ny=y.attr(\"content\");\nu=书.indexOf(y)\n}else for(u=true,c=r.select(\"h1,h2,h3,strong\").eachText();x<c.size();x++)if(\n(y=c.get(x))!=''&&(u=书.indexOf(y),~u&&u<4))break;\nif(!~(y=String(y)).indexOf(n)&&~u)n=y;\n\nif((x=r.select(\"[property$=author]\")\n).size()){\nx=String(x.attr(\"content\")).replace(/^作\\s*[者家][\\s:：]*|(?!^)[/／｜|，,\\s][^⚙️]*$/,\"\")\n}else{\nx=m.match(/>\\s*([^>]+?)(?:\\s*<\\/[a-z]+>\\s*|\\s+)著\\s*<|[\\s\\[\\];?!,.()、，；？！。…─（）［］〖〗【】>《》](?:小说|漫画)?作\\s*者(?![^>]+->)(?:[:：\\s〖【（《［\\[\\(]|<[^it\\/][^>]*>|<\\/[^>]+>)+([^\\s<\">,，/／｜|\\)\\]］》）】〗]+)/);\nx=x?x[1]?x[1]:x[2]:(x=r.select(\"#author,.author\"),x.size()?String(x.first().text()).replace(/(?!^)[/／｜|，,\\s][^⚙️]*$/,\"\"):\"\")}\n\nif(n.indexOf(x)>0&&!~java.get(\"key\").indexOf(n))n=n.split(x)[0];\njava.put(\"x\",x)}\n\nif(z||book.kind==''){\ny=r.select(\"meta[property~=(category|status)$]\");\nc=y.size()?String(y.eachAttr(\"content\"))\n.slice(1,-1).replace(/(?!^)\\s*[，,./／｜|]\\s*/,\",\"):(y=m.match(/(?:[\\s\\[\\];?!,.()、，；？！。…─（）［］〖〗【】》]|<[^a/][^>]*>|<\\/[^>]+>)(?:[分大]\\s*类|类\\s*[型别])(?:[:：\\s]|<[^>]+>)+([^\\s<.\"/／｜|>]+)/))&&y[1];\nif(c)java.put(\"v\",c)}\n\ny=r.select(\"meta[property~=latest_chapter_name$]\");\n\nc=y.size()?y.attr(\"content\"):(y=m.match(/>(?:\\s*[更最]\\s*[新近])+(?:\\s*章\\s*节)?(?:[:：\\s\\[]|<[^>]+>)+(?!\\s*(?:-|&gt;)\\s*<|[:：\\s0-9T年月日时分秒*-]{5,}<|[^:：]+[^章\\s]\\s*[:：]\\s*<|更新(?:时间)?[:：])([^<\"/／｜|\\]>]+)/))&&y[1];\nif(c)java.put(\"z\",c);\n\nif(z||(c=book.intro)==''){\ny=r.select(\"meta[property$=description][content~=\\\\S]\");\nc=y.size()?y.get(y.size()-1).attr(\"content\"):(r.select(':matchesOwn([\\\\u4e00-\\\\u9fa5]{2,})>:not(br),:not(body,br,:matchesOwn([\\\\s\\\\S]{50}),:has(body,:matchesOwn([\\\\s\\\\S]{50})))').remove(),r.select(\":matchesOwn(\\\\S)\").text())}\nc=String(c==\"\"?book.intro:c);\n\nif(java.get(\"g\")==\"\")java.put(\"g\",\"\\n\"+c.replace(/[\\snbsp;]*(?:&nbsp;|\\s){2,}|\\s*([？！。]+[”」』\\]\\}\\)）｝】〗〕〉]?)\\s*/g,\"$1　　\").replace(/(?!^)(?=　　)/g,\"\\n\"));\n\nif(正==1)m=java.ajax(baseUrl);\njava.setContent(m,baseUrl);\n\nif(正){\nzl=java.getStringList(\"[property$=latest_chapter_url]@content||:matches(^最新章节)>a:only-child:not([href~=^$|#|javascript:])@href||a:matches(^正文\\\\s*[\\\\d第一二三四五六七八九十〇零百千]|^[【《]?(\"+n+\")?[\\\\s》】（\\\\u0028:：＿_－-]*(第[\\\\s0〇零]*[一1]\\\\s*[\\\\u4e00-\\\\u9fa5]|([\\\\u4e00-\\\\u9fa5]{2}阅读[（\\\\u0028:：＿_－-]?)?(0*1([）\\\\u0029.、:：_-]|$)|[〇零]*一([）\\\\u0029\\\\s.、:：_-]|$)))):not([href~=(^|[^/])/[vV][iI][pP]|([A-Za-z]\\\\d+|\\\\d[A-Za-z]+|[A-Z][a-z]+|[a-z][A-Z]+){3,}[^/?&_-]*$|^$|#|javascript:|\"+(bas=baseUrl.replace(/\\/+$|\\.[a-zA-Z]+$/,'')).match(/[^?/]+$/)[0].replace(/([*$|?+\\\\\\^\\[\\](){}])/g,'\\\\$1')+\"(?:[/_-]1)?(?:\\\\/|\\\\.[a-zA-Z]+)?$])@href||a:matches(^[^\\\\u4e00-\\\\u9fa5]*(免费|在线|开始|立即|全文|正文|从头)+[试阅]读[^\\\\u4e00-\\\\u9fa5]*$):not([href~=^$|#|javascript:])@href||a:matches(^0*1[^\\\\d]):not([href~=(^|[^/])/[vV][iI][pP]|([A-Za-z]\\\\d+|\\\\d[A-Za-z]+|[A-Z][a-z]+|[a-z][A-Z]+){3,}[^/?&_-]*$|^$|#|javascript:])@href\");\n\nif(zl.size()&&(ck=String(zl.get(0)).match(/^(.*\\/\\/[^/]+)?([/?]?[^/].+[?&/_-])[^&/_-]+\\/?$/)))(jd=ck[1])&&(h=baseUrl.lastIndexOf('/',baseUrl.indexOf(jd.match(/(?:\\.[^.]+){2,}$|[^./]+\\.[^.]+$/)[0])))>8&&(\nq=baseUrl.indexOf(':'),\n(bas=java.get(baseUrl=baseUrl.slice(0,q+2)+baseUrl.slice(h),{})).statusCode()==200&&java.setContent(bas.body(),baseUrl)\n),java.put(\"ck\",ck[2])}\nn",
            "tocUrl": "@js:if(java.get(\"单\")==''){\nif(java.get(\"录\")==java.get(\"目\")){\nr=org.jsoup.Jsoup.parse(result);\n\nscript=r.select(\":matchesOwn(^$)>a[href^=javascript:]:matches(全文|章[節节]|目[錄录]):not(:matches(最新))\");re=false;\n\nif(!script.size()){\nba=(bas=baseUrl.replace(/\\/$|\\.[a-zA-Z]+$/,'')).match(/(http....[^/?]+)(?:([?/])(.*))?$/);b=ba[1];v=ba[3];\n\nr.select(\"a[href~=[^a-z]page[^a-z]]:not(:matches([反正顺順逆倒]序|[全正]文|更多|全部|所有|章[節节]|作品|目[錄录]|列表)),a:not([href~=^(?!//)[^#:]+$|\"+b.split(':')[1]+\"]),:matchesOwn(\\\\S)>a,a[href~=javascript:|#],a:matches(^\\\\S{1,4}$):not(:matches([反正顺順逆倒]序|[阅閱][讀读]|查看|展[开開]|进入|[全正]文|更多|完整|全部|所有|目[錄录]|列表|章[節节]):not(:contains(分类)))\").remove();\n\ny=r.select(\"a[href~=(?i)catalog|contents|chapters|mulu|(^|[^a-z])ml|showchapter|(^|chapter[/_-]?|\"+v.replace(/(.+)((\\/\\d\\d)\\d+)$/,\"$1$3$2\")+\"[/_-])(more|list|all)|sort[/=_-]asc]\");\n\nif(!y.size()){b3='';\n\nif(ba[2]==\"?\"){\nb3='[href~=^[^?]+$],'\n}else if(ba[3]){\nb3=ba[3].replace(/[*$|?+\\\\\\^\\[\\](){}]/g,'\\\\$0');\n\nb3=\"[href~=\"+b3+\"(\\\\.[^.]+|/\\\\d+(\\\\.[^.]+|/)?)?$],[href~=[/?]\"+b3.replace(/[&/_-][^/_-]+$/,'')+\".*$]:not([href~=[/?]\"+b3.replace(/[/_-]/g,'[/_-]')+\"]),\"}\n\ny=r.select(\"a:not(\"+b3+\"[href~=(?i)(^|[^/])[?/].*((book|[^a-z])(info|case)[^a-z]|(cid|buy)[^a-z]|desc|coins|nutrition|review|ticket|update|(app|author|xiazai|down)(?!=))|/chapter|/index/|/d/],:matches((?i)^$|[0-9零〇一二三四五六七八九十百千万、，：；？！。…‘’“”（）()]|[票榜:：.]|推荐|排行|等级|说明|收藏|书评|简介|分[类卷]|简介|作者|手机|软件|应用|安装|客户|移动|pc|电脑|安卓|苹果|下载|最新|ap[kp]|ipa|plx|deb|exe|zip|rar|txt|epub))\")}\n\nif(y.size()){\nys=y.select(\"a[href~=(?i)catalog|contents|list|chapter|mulu|(^|[^a-z])ml|more|read|all]:matches([反正顺順逆倒]序|全文|章[節节]|目[錄录]):not(:matches(阅读)),a[href~=(?i)catalog|contents|chapter|(^|[^a-z])ml|mulu|read]:matches(更多|列表),a[href~=(?i)catalog|contents|list|chapter|mulu|(^|[^a-z])ml|more|all]:matches(^$),a:matches(^[^\\\\u4e00-\\\\u9fa50-9]*([反正顺順逆倒]序|全文(免[費费])?[阅閱][讀读]|(点击|查看|展[开開]|进入|返?回到?)*([全正]文|(更多|完整|全部|所有)?(章[節节]|(作品)?目[錄录])+)+(列表)?(\\\\s*(查看|展开)?更多)?)[^\\\\u4e00-\\\\u9fa50-9]*$)\");zt=false;\n\nif(!ys.size()){\nba=bas.match(/(\\?(?:[^=]+=)+)(.+)$/)||bas.match(/(?:[^/_-][/_-]([^/._-]+))?[/_-]([^/._-]+)(?:\\/index[^/]*)?$/);\n\nif(xi=(id=ba[2]).match(/\\?[^=]+=([^&]+)/)||id.match(/^[^\\d%]*(\\d{2,}|[1-9])$/))id=xi[1];\nif(ba[1])if(xi=ba[1].match(/^[^\\d%]*(\\d{2,})$/))id=/^\\d$/.test(id)||!xi[1].indexOf(id)?xi[1]:\"(\"+id+\"|\"+xi[1]+\")\";\n\nys=y.select(\"[href~=(?i)^((.*//[^/]+/)?[^=.]*[^\\\\d=.])?\"+id+\"([?_-][a-z=_-]*0|\\\\.[^.]+|[/?]([^\\\\d]*|[^/\\\\d]*/?|(list|more|all)([=_-][a-z]*)?\\\\d+[^\\\\d]*)?)?(&.+)?$]:not(:contains(\"+(bs=String(book.name)[0])+\"))\");\n\nif(!ys.size()){zt=true;\nys=y.select(\"[href~=(?i)^((.*//[^/]+/)?[^=.]*[^\\\\d=.])?(\\\\d+/\"+id+\"[_-]\\\\d+[^\\\\d]*|\"+id+\"[_-][a-z_-]*1[^\\\\d]*)$]:not(:matches(阅读|\"+bs+\"))\")}}\n\nif(ys.size()){\nif((re=ys.select(\"[href~=(/|^)[^.]+$]\")).size())ys=re;\nre=String(ys.first().attr(\"href\"));\n\nfor(x=1;x<ys.size();x++)if((xs=String(ys.get(x).attr(\"href\"))).length>re.length)re=xs;\n\nif(/(?:[2-9]\\d*|1\\d+)[^\\d]*$/.test(re)){\nif(!zt&&(q=re.match(/^(.*[^/])?[&?/].*(?:catalog(ue)?|contents|(?:show)?chapters?|mulu|ml|more|all|list|page)(?:[=_-][a-z]*)?\\d+[^\\d]*$/i))&&v==(q[1]||'').replace(/^http....[^/?]+/,''))zt=true;\nif(zt)re=re.replace(/\\d+(?=[^\\d]*$)/,\"☯1\")}\n\n}}}\n\nre=String(!re?baseUrl:(java.put(\"基\",baseUrl),/^\\/[^/]/.test(re)?b+re:/^https?:/.test(re)?re:/^\\/\\//.test(re)?b.split('//')[0]+re:String(baseUrl).replace(/[^/]*$/,'')+re))}else re=baseUrl;\n\nr=re.replace(/(?:[☯?&/_-][^\\d?/&_-]*[01])+[^\\d]*$/,\"\");\njava.put(\"ba\",r);\nre=re.replace(\"☯\",\"\")}else re=baseUrl;\n\njava.get(\"跳\")==1?re+',{\"webView\":true}':re",
            "wordCount": "{{baseUrl}}##//([^/]+)##$1##"
        },
        "ruleContent": {
            "content": "@js:dt=lr='';c=1;动=java.get(\"动\");\nif(动!=''&&!~baseUrl.indexOf(\",\")){\nresult=String(java.ajax(baseUrl+动))\n}else if(java.get(\"静\")==动)c=dt=2;\n\nr=org.jsoup.Jsoup.parse(r1=result.replace(/&nbsp;/g,' '));\n查=i=java.get(\"序\");\n\nif(java.get(\"文\")==1){for(;c;c--){\nd=[\"img[data-src],img[src~=[^a-z]cid[^a-z]]\"\n,\"img:not([src~=(?i)^$|^javascript:|\\\\.gif|\\\\.png|[^a-z](cover|css|ic(on)?|load(ing|ed)?)[^a-z]])\"\n,\"img[src~=(?i)\\\\.png]:not([src~=(?i)[^a-z](cover|css|ic(on)?|load(ing|ed)?)[^a-z]])\"\n,'img[src~=(?i)\\\\.gif]:not([src~=(?i)[^a-z](cover|css|ic(on)?|load(ing|ed)?)[^a-z]])'];\n\nif(!(查!=\"\"&&(查!=-1&&((lr=r.select(d[查])).size(),true)))){\n$=it=>(lr=r.select(it)).size();\nif($(d[i=0])||$(d[i=1])||$(d[i=2])||false)break;\n\nif(c==2){dt=1;\nr=org.jsoup.Jsoup.parse(java.ajax(baseUrl+',{\"webView\":true}'))\n}else i=$(d[3])?3:-1}}\nif(i==0)lr=String(lr).replace(/(?:src=['\"][^'\"]+['\"] +)?data-/g,'');\nif(查==\"\")book.putVariable(\"序\",i);\n\n}else{\nsc=java.get(\"文\")==2?\n'[style~=(?i)text-align:center|(^| |;)color: *(rgb.(?!255[ ,]+255[ ,]+255)[\\\\d, ]*2\\\\d\\\\d|#(?=[a-f\\\\d]{3}([^a-f\\\\d]|$))(?!fff)[a-f\\\\d]*[d-f]|#(?=[a-f\\\\d]{4})(?!ffffff)([\\\\da-f]{2})*[d-f][\\\\da-f]|green|red|blue|yellow|purple|pink|brown)],script,noscript,style,header,footer,[class~=^foot|^head],[id~=^foot|^head],:has(>a):not(:has(p:matchesOwn(\\\\S),br)),a>*,:has(a):not(:matchesOwn([\\\\S\\\\s]{50,}),:has(:matchesOwn([\\\\S\\\\s]{50,}))),:matchesOwn([\\\\s\\\\S]{50})>:not(br,a,:matchesOwn([\\\\s\\\\S]{50})),:not(br,p,a,:matches([\\\\s\\\\S]{200}),:has(p,br,div:matchesOwn(，|。)+div:matchesOwn(，|。)),:has(p,br,div:matchesOwn(，|。)+div:matchesOwn(，|。)) :matchesOwn(\\\\S):not(:not(p,div,span:has(br))))'\n:\n'[style~=(?i)text-align:center|(^| |;)color: *(rgb.(?!255[ ,]+255[ ,]+255)[\\\\d, ]*2\\\\d\\\\d|#(?=[a-f\\\\d]{3}([^a-f\\\\d]|$))(?!fff)[a-f\\\\d]*[d-f]|#(?=[a-f\\\\d]{4})(?!ffffff)([\\\\da-f]{2})*[d-f][\\\\da-f]|green|red|blue|yellow|purple|pink|brown)],script,noscript,style,header,footer,[class~=^foot|^head],[id~=^foot|^head],:has(>a):not(:has(p:matchesOwn(\\\\S),br,img:not([src~=(?i)^$|^javascript:|[^a-z](css|ic(on)?|load(ing|ed)?)[^a-z]|/\\\\d+s\\\\.jpg]))),img[src~=(?i)^$|^javascript:|[^a-z](css|ic(on)?|load(ing|ed)?)[^a-z]|/\\\\d+s\\\\.jpg],a:not(:matches(^$)>img)>*,:has(a):not(img,:matchesOwn([\\\\S\\\\s]{50,}),:has(img,:matchesOwn([\\\\S\\\\s]{50,}))),:matchesOwn([\\\\s\\\\S]{50})>:not(img,br,a,:has(img),:matchesOwn([\\\\s\\\\S]{50})),:not(img,br,p,a,:matches([\\\\s\\\\S]{200}),:has(p,br,img,div:matchesOwn(，|。)+div:matchesOwn(，|。)),:has(img,p,br,div:matchesOwn(，|。)+div:matchesOwn(，|。)) :matchesOwn(\\\\S):not(:not(p,div,span:has(br))))';\n\nd=[\":matchesOwn(\\\\S):has(br):has(:matchesOwn(\\\\S):has(br))\"\n,\":matchesOwn(\\\\S):has(br)\"\n,\":has(>:matchesOwn(\\\\S):not(:has(*))+:matchesOwn(\\\\S):not(:has(*)))\"\n,\":has(>:has(>p:only-child:matchesOwn(\\\\S):not(:has(*)))+:has(>p:only-child:matchesOwn(\\\\S):not(:has(*))))\"\n,\"img\"\n,\":matchesOwn(\\\\S)\"];\n\ntry{for(查=i!=''?i:java.get(\"元\");c;c--){\n\nif(!(c>1&&(String(r.text()).length<400||r.select(':matchesOwn(内容未加载完成|关闭(阅读|小说)模式)').size()))){\nr.select(sc).remove();\n\nif(!(查!=\"\"&&(lr=r.select(i?d[i==6?5:i]:查)).size()))for(i=0;i<6&&(lr=r.select(d[i]),i==4&&c==1?!lr.size():String(lr.text()).length<200);i++);\nif(c<2||i<6)break;}\n\nr=org.jsoup.Jsoup.parse(r2=String(java.ajax(baseUrl+',{\"webView\":true}')).replace(/(<[a-z]+)&nbsp;/g,'$1 '));\ndt=r1.length==r2.length?2:1}\n\nfor(c=lr.first(),v=1;v<lr.size();v++)if(lr.get(v).parents().contains(c)){\nlr.remove(v);\nv--}else c=lr.get(v);\n\nlr=String((c=lr.size()==2&&i<4)?String(lr.first().text()).length>String(lr.get(1).text()).length?lr.first():lr.get(1):(c=lr.size()==1)?lr.first():lr);\n\nif(查==\"\"){\nif(c&&(查=lr.match(/<([a-z]+) ([^>]+)>/))&&(查[2]=查[2].match(/(?:id|class|style)=(?:\"[^\"]+\"|'[^']+')|[^= ]+(?==\"[^\"]+\"|'[^']+')/g))){\nbook.putVariable(\"元\",查[1]+'['+查[2].join('][')+']')\n}else book.putVariable(\"序\",i)}\n\nlr=lr.replace(/<([a-z]+)[^>]*\"-\\d+\"[^>]*>[^<]+<\\/\\1>|[^<>]*<a[^<]+<\\/a>[^<]*|&lt[; ]?\\/?[a-z]+(?= |\\/?&gt)(?:[ a-z=-]+|\"[^\"]+\"|'[^']+')*\\/?&gt[; ]?|[☯📑⚙️🌕︴]/g,\"\").replace(/\\s+(?:\\s|(?:(?:(?:n?b)?s)?p)?;)/g,\"　　\");\n\nif(java.get(\"原\")!=1)lr=(!lr.indexOf(\"　　\")?lr.replace(/>(?!　　|\\s*(?:(?:(?:n?b)?s)?p)?;)\\s*(?=[^\\s<>])/g,\">︴\"):lr).replace(/((?:[〖【『「（《〈〔［\\[(][^〖【『「（《〈〔［\\[()］〕〉》）」』】〗\\]]*[)］〕〉》）」』】〗\\]]\\s*)*(?:第?\\s*[一二三四五六七八九十百千万〇零0-9]+\\s*[章节回話话：:.．,，、]*\\s*)?{{n=(t=title.match(/\\S+$/)[0].replace(/[*$|?+\\\\\\^\\[\\](){}/]/g,\".?\")).replace(/^(正文[^\\u4e00-\\u9fa5A-Za-z]*|第?[一二三四五六七八九十百千万〇零0-9]+[章节回話话\\s：:.．,，、]*)+/,\"\"),n!=t&&/\\S/.test(n)?\"(?:第?\\\\s*[一二三四五六七八九十百千万〇零0-9]+\\\\s*[章节回話话：:.．,，、]*\\\\s*\"+n+\"|\"+t+\")\":t}}(?:\\s*[〖【『「（《〈〔［\\[(][^〖【『「（《〈〔［\\[()］〕〉》）」』】〗\\]]*[)］〕〉》）」』】〗\\]])*)/g,\"⚙️$1⚙️\")+\"📑\"\n}catch(e){}}\nif(dt)book.putVariable(dt==1?\"动\":\"静\",',{\"webView\":true}');lr",
            "imageStyle": "FULL",
            "nextContentUrl": "@js:if((r=java.getStringList((nx=java.get(\"next\"))+\"a:matches(第二[頁页]|下[一\\\\s]*[頁页]):not([href~=^javascript:|^#])@href||a:matches(下[一\\\\s]*[篇章回节節话話]):not([href~=^javascript:|^#])@href||a[href~=[_-]\\\\d+(/|\\\\.[a-z]+)?$]:has(i,img):not(:matches(\\\\S),[href~=^javascript:|^#])@href\")).size()){\nif(~String(book.tocUrl+(nextChapterUrl||'')).indexOf(r=String(r.get(r.size()-1)))||~r.indexOf(nextChapterUrl||String(book.tocUrl).replace(/.+(?=_\\d+\\/$)/,'')))r=null\n}else r=null;\nif(r){if(nx!='')chapter.putVariable(\"next\",(n=r.replace(/\\d+(?=[^\\d]*$)/,it=>+it+1))==r?'':'a[href=\"'+n+'\"]@href||');\nr+java.get(\"动\")}",
            "replaceRegex": "@js:if(java.get(\"原\")==1){result}else{\nresult=result.replace(/⚙️([^\\u4e00-\\u9fa5⚙️]+|[零〇一二三四五六七八九十百千万\\s]+|(?!第[零〇一二三四五六七八九十])[\\u4e00-\\u9fa5]+)⚙️/g,'$1').split('📑');\nl=result.length-1;\nwhile(l)if(r=result[--l].match(/^(\\n+(?:[^\\n]{1,30}\\n+){1,3})([\\S\\s]+)$/))result[l]=r[1]+r[2].replace(/⚙️/g,'');\nresult.join('📑')\n.replace(/—/g,\"─\")\n.replace(/[·۰•・]/g,\"・\")\n.replace(/\\s*(?:︴[^\\n　]+\\s+)*📑\\s*|^\\s*(︴[^\\n　]+\\s+)*|\\s*(?:　　|\\n)(?:[\\s&#a-zA-Z0-9]*;)?[\\s　?]*/g,\"☯\")\n.replace(/(?:︴[^☯]*☯)+(?=︴)|☯(?:温馨|[^a-zA-Z0-9\\u4e00-\\u9fa5☯]+)提示.?[:：][^☯]+|☯[^☯]+字体不会安装.?请百度[^☯]+|☯.{0,2}正版订阅在阅文旗下的起点和QQ书城，可以第一时间看到最新章节.{0,2}(?=☯)|︴\\s*第?[〖【『「（《〈〔［｛\\[{(][^☯]+(?=☯)|☯第\\s*[（(][^（()）]+[)）][頁页](?=☯)|[^☯]*(?:关注|[微vVＶｖ][^\\u4e00-\\u9fa5A-Za-z0-9]*[信xXｘＸ]|公[^\\u4e00-\\u9fa5]*众[^\\u4e00-\\u9fa5]*号){2,}[^☯]*|(?:&#?[a-z0-9]*;?)+(?=;|☯);*|read[sx][；;?？]+/g,\"\")\n.replace(/\\s+/g,\" \")\n.replace(/☯[ ☯]*/g,\"\\n\")\n.replace(/(\\n[〖【『「（《〈〔［｛\\[{(]?)([pPＰｐ][SsｓＳ]+(?=[ ：:;；，,、。.─\\d\\u4e00-\\u9fa5])[^\\n]+)/g,\"$1🌕$2\")\n.replace(/\\[\\[\\[[^\\[\\]]+http:file2.qidian.comchapters(.{5,6})(..)([^\\[\\]]{35})\\]\\]\\]/g,'<img src=\"http://file2.qidian.com/chapters/$1/$2/$3\">')\n.replace(/(<img )[^>]*(src=\"[^\"]+\")[^>]*(>)|((?: ?[＋+－-]?[0-9０-９]+(?:[．.／/][0-9０-９]+)?[％%:：]?[a-zA-Z]*)+ ?|[ _＿－-]?[a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９]+)/g,\"$1$2$3☯$4☯\")\n.replace(/☯[・。](?=☯)/g,\"☯.\")\n.replace(/,\\n/g,\"，\")\n.replace(/!(?=\\n)/g,\"！\")\n.replace(/\\?(?=\\n)/g,\"？\")\n.replace(/(<[^<]+)☯☯/g,\"⚙️$1⚙️\\n\")\n.replace(/(?:\\n[^āáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ\\u4e00-\\u9fa5\\n〖【『「《“‘＜（〈〔［｛({\\[\\]})｝］〕〉）＞’”》」』】〗、，：；？！。…─🌕︴\\n]+|([。？！…”』」】〗])[^a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5\\n〖【『「《“‘＜（〈〔［｛({\\[\\]})｝］〕〉）＞’”》」』】〗、，：；？！。…─☯︴\\n]+[\\u4e00-\\u9fa5]+)?[^a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5\\n〖【『「《“‘＜（〈〔［｛({\\[\\]})｝］〕〉）＞’”》」』】〗、，：；？！。…─⚙️☯︴\\n]+(?=\\n)|[^☯!\"'(),\\s\\u4e00-\\u9fa5、，：；？！。…─〖【『「《“‘＜（〈〔［｛｝］〕〉）＞’”》」』】〗]*☯([a-zA-ZＡ-Ｚａ-ｚ]*[āáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ][a-zA-ZＡ-Ｚａ-ｚ]*)☯[^☯!\"'(),\\s\\u4e00-\\u9fa5、，：；？！。…─〖【『「《“‘＜（〈〔［｛｝］〕〉）＞’”》」』】〗]*/g,\"$1$2\")\n.replace(/[^!\"'(),\\s\\u4e00-\\u9fa5、，：；？！。…─〖【『「《“‘＜<（〈〔［｛({\\[\\]})｝］〕〉）>＞’”》」』】〗︴🌕]*(?:☯[^.．!(),\\n\\u4e00-\\u9fa5、，：；？！。…─〖【『「《“‘＜（〈〔［｛({\\[\\]})｝］〕〉）＞’”》」』】〗⚙️]+|([^☯!(),\\na-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5、，：；？！。…─〖【『「《“‘<＜（〈〔［｛({\\[\\]})｝］〕〉）＞>’”》」』】〗⚙️])(?!\\1)|☯(?=[^☯!(),\\na-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5、，：；？！。…─〖【『「《“‘＜（〈〔［｛({\\[\\]})｝］〕〉）＞’”》」』】〗][!(),\\s\\u4e00-\\u9fa5、，：；？！。…─〖【『「《“‘＜（〈〔［｛({\\[\\]})｝］〕〉）＞’”》」』】〗])|[〖【『「（《〈〔［｛\\[{(][^a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]*[)｝］〕〉》）」』】〗\\]}]){4,}|[^；;％%～~?？!！\"'”’。…─\\na-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]*[〖【『「（《〈〔［｛\\[{(][^a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]*[)｝］〕〉》）」』】〗\\]}](?:[^a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]+(?=[)｝］〕〉》）」』】〗\\]}]))?/g,\"📑\")\n.replace(/([；;％%～~?？!！\"'”’。…─])📑(?=[)｝］〕〉》）」』】〗\\]}])/g,'$1')\n.replace(/(?:([\\n。？！])[^\\n。？！]{1,10})?[〖【『「（《〈〔［｛\\[{(][^〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]*(?:☯[^a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]☯|📑|🌕)[^〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]*[｝］〕〉》）」』】〗\\]})](?:[^。]{0,5}(?:[〖【『「（《〈〔［｛\\[{(][^〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]*(?:☯[^a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]☯|📑)[^〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]*[｝］〕〉》）」』】〗\\]})]|[^📑!,()\\s\\u4e00-\\u9fa5、，：；？！。…─‘’“”（）《》〖〗【】]+))*(?:(?:[^\\n]{1,10}|(?:[\\u4e00-\\u9fa5]{0,5}[，、])*[\\u4e00-\\u9fa5]+[！。]?)(?=\\n))?/g,\"$1\")\n.replace(/((?:[请請][记記]住)?[^⚙️🌕📑︴*\\n(),\\u4e00-\\u9fa5、，：；？！。…─「」‘’“”（）《》〖〗【】]*(?:(?:[^⚙️🌕📑︴*\\n(),\\u4e00-\\u9fa5、：，；？！。…─「」‘’“”（）《》〖〗【】]+[*(), \\u4e00-\\u9fa5、，:：；？！。…─「」‘’“”（）《》〖〗【】]{1,3})*[^*︴📑☯⚙️🌕\\s&;(),āáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜa-zA-ZＡ-Ｚａ-ｚ0-9０-９\\u4e00-\\u9fa5、,，:：;；?？!！。…～~─'\"‘’“”【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}％%・/／＝=_＿.．＋+－-]+(?!(?:[^>]+>)?⚙️)|☯[^☯\\n]+☯\\.☯[^☯\\n]+☯|本[文书](?:首发|来自)|(?:章节不完整.?|完整章节)?请.{2,6}(?:搜索|百度|引擎|关键[词字])+|(?:[阅閱][讀读]|访问|訪問|[網网地][站址]|链接|鏈接|[\\u4e00-\\u9fa50-9a-zA-Z]{0,4}(?:文学|中文|[網网]))+[:：]|[\\u4e00-\\u9fa50-9a-zA-Z]{0,6}(?:[網网地][站址]|链接|鏈接)为|.{2,4}文[学學][網网]|[请請].{2,4}收藏(?:.{0,2}推[荐薦])?|(?:天才)一秒[記记]住|，?請?訪問|(?:[更最][快新]|[快高]速|热门|(?:[阅閱][讀读])?完整|本|(?:官[網网]|本站).{0,2})(?:章[節节]|小说|更新|[網网地][址站][:：]?|快速)|更新(?:速度)?[最更]?快|(?:(?:无错)?小说|正版|免费|全[文本]|在线|访问|訪問|txt|TXT|继续|各种|推[荐薦]|收藏|分享|交流|你?喜欢的)+(?:全文|免费|在线|[阅閱]?[讀读]|下载|章[節节]|小说|好书)|章[節节](?:目录|列表)|小说[網网](?:更新)?|手打全文|[纯全](?:手打|文字)|手机看书|手机版|笔趣阁|(?:本站|[網网]站|站内|看)?无(?:任何)?(?:广告|弹窗|防盗)(?:章节)?|不弹窗|(?:(?:請|请|或者?)?(?:訪問|访问|[電电手][腦脑机機]|[網网][址站]|用[户戶]|浏览|瀏覽|閱讀|阅读|看小说|看漫画)){2,}|看小说|看漫画|(?:用[^\\n]{2,6})?(?:[追看]书|小说)(?:就用|软件|☯[^☯]+☯)，?|用[^\\n]{2,6}[追看]书|(?:..的)?(?:最佳选择|阅读体验)|(?:推[荐薦]|收藏|分享)(?:本站|我们)|小说..版|文章质量更好|谢谢各位(?:读者|书友)支持|水印广告测试|本章未完|请翻页|点击下一页|领.{0,2}红包|同步更新《[^《》]+》|关注[〖【『「（《〈〔［｛\\[{(][^〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]+[)｝］〕〉》）」』】〗\\]}])(?:[* (),\\u4e00-\\u9fa5、，：；？！。…─‘’“”（）《》〖〗【】]{0,3}[^⚙️📑*\\n(),\\u4e00-\\u9fa5、，：；？！。…─「」‘’“”（）《》〖〗【】]+|[….。!！]+(?=\\n))*|⚙️(?!<)[^⚙️\\n]+⚙️)/g,\"\\n⚙️$1⚙️\\n\")\n.replace(/⚙️(<[^<>]+>)⚙️\\n|[〖【『「（《〈〔［｛\\[{(](?:[^〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]{0,3}\\n⚙️(?!\\s*\\S\\s*⚙️).+⚙️\\n*)+[^〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]{0,3}[)｝］〕〉》）」』】〗\\]}]|(🌕)\\s*⚙️|⚙️\\n[^\\u4e00-\\u9fa5]{0,5}\\n⚙️|\\n⚙️\\s*(\\S)\\s*⚙️\\n(?![^⚙️]{1,3}⚙️)|(⚙️\\n)|([，、；])[\\s,，。、…:：;；?？!！`’]*[,，。、…:：;；?？!！`’](?!⚙️)|\\n[\\s,，。、…:：;；?？!！`’]*(?=[,，。、:：;；?？!！])|([：？！。…─])(?:[^⚙️☯a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5\\n…─“‘’”〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]+(?=\\n)|[^⚙️☯a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5\\n…─“‘’”〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]+)|☯/g,\"$1$2$3$4$5$6\")\n.replace(/([)）？！?!…」』”\\s。])(?:[^\\n（(🌕)）”』」’。]{0,5}(?:(?:\\n⚙️.+⚙️\\n|[^（()）\\n”』」。]{0,5}📑)[^（()）\\n。]{0,5}(?:\\n⚙️.+⚙️(?:\\n(?=\\n⚙️|[^（()）\\n]{1,5}\\n))?|[^（()）\\n。]{0,5}📑(?:[^📑]{1,5}(?=\\n⚙️))?)+(?:[^（()）\\n]{1,5}(?=\\n))?|(?:(?:(?:\\n⚙️.+⚙️\\n|[^（()）\\n。]{0,5}📑)[^（()）\\n]{0,5}){2,}|[^（(🌕)）”』」’\\n。]{0,5}(?:(?:請|关键[词字]|[電电手][腦機]|用戶|瀏覽|[阅閱]讀|推[薦荐]|收藏|分享|文章质量|谢谢(各位|支持|大家)|水印|翻页|点击|下[一\\s]*[页頁篇章回节節话話]|免费|热门|官网|正版|在线|同步|下载|文学|中文|章节|[本网][站址]|站内|小说|更新|无错|[本全][文本章]|首发|广个?告|弹窗|防盗|访问|訪問|txt|TXT|读者|书友|百度|[插说]一?[下句]话?，[\\u4e00-\\u9fa5]{0,5})[^（()）\\n]{0,5})*(?:📑|\\n⚙️[^\\n]+⚙️\\n)[^（()）\\n]{0,5}(?:(?:請|关键[词字]|[電电手][腦機]|用戶|瀏覽|[阅閱]讀|推[薦荐]|收藏|分享|文章质量|谢谢(各位|支持|大家)|水印|翻页|点击|下[一\\s]*[页頁篇章回节節话話]|免费|热门|官网|正版|在线|下载|同步|文学|中文|章节|[本网][站址]|站内|小说|更新|无错|[本全][文本章]|首发|广个?告|弹窗|防盗|访问|訪問|txt|TXT|读者|书友|百度)[^（()）\\n]{0,5})*|[^（(🌕)）\\n”』」’。]{0,3}\\n⚙️.+⚙️\\n[^（()）\\n。]{0,3})(?:[\\u4e00-\\u9fa5]+[！。]?|[^a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5\\n]+)?(?=\\n)))+|\\n⚙️[^\\u4e00-\\u9fa5]+⚙️\\n|📑|\\s*︴\\s*|\\n?⚙️\\n?|\\n[^a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5\\n]{2,}\\n[^🌕a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5\\n“《‘【〖『「]*/g,\"$1\")\n.replace(/(?:(?:\\n🌕[^\\n]*)+(?:\\n+[^\\n]+){0,4}|\\n(?:[(（{｛][^(（<{｛｝}>）)]*(?:(?:[(（{｛][^(（<{｛｝}>）)]*[）)｝}])[^(（<{｛｝}>）)]*)*[）)｝}]?\\s*)+|[^\\n]*起点(?:原创|中文)[^\\n]*|[〖【『「（《〈〔［｛\\[{(]?未完待续[^\\n]*)[^\\u4e00-\\u9fa5<>]*$|^\\s*(?:(?:[^\\n]+\\n+){0,4}(?:🌕[^\\n]*\\n?)+|(?:[(（{｛][^(（<{｛｝}>）)]*(?:(?:[(（{｛][^(（<{｛｝}>）)]*[）)｝}])[^(（<{｛｝}>）)]*)*[）)｝}]?\\s*)+|，[^\\n]+)\\n|(?:^|\\n)[^a-z0-9A-Z\\u4e00-\\u9fa5]*(?=\\n)|🌕|\\n\\s*[a-zA-Z]+\\s*$/g,\"\")}",
            "sourceRegex": "",
            "webJs": ""
        },
        "ruleExplore": {
            "author": "$.author",
            "bookList": "$..novel_item[*]",
            "bookUrl": "$.url",
            "coverUrl": "$.icon",
            "intro": "$.description",
            "kind": "$.status&&$.tag@js:String(result).slice(1,-1).split(/\\s/)",
            "lastChapter": "",
            "name": "$.title##[(（][^(（）)]*[）)]$",
            "wordCount": ""
        },
        "ruleSearch": {
            "author": "@get:{au}",
            "bookList": "@js:java.get(\"key\")!=\"\"?java.getElements(\"#results>div:has(a.c-header-inner:not([href~=\\\\.shuqi\\\\.com|\\\\.sm\\\\.cn|javascript:|&fr=shenma_],:matches(^(广告|推广|手游)$)))\"):java.getElements(\"a[data-index][href^=https://quark.sm.cn/s?q=]\")",
            "bookUrl": "@get:{link}",
            "coverUrl": "@get:{d}@get:{l}\n@js:decodeURIComponent(result)",
            "intro": "@js:java.put(\"i\",\"\"+java.get(\"zt\")?\"\":String(java.get(\"ii\")).replace(/^.{1,12}\\n/,\"\"))",
            "kind": "@js:java.get(\"类\")",
            "lastChapter": "a.c-header-inner@data-recoorgi||a.c-header-inner@href||*@href@put:{zt:\"@css:div>span.c-e-subtitle-item@text\",ii:\".js-c-paragraph-text@all\",d:\"*@data-i\",l:\"*@data-load\"}\n@js:java.put(\"link\",result.match(/[^\\n]+/)[0]);\n##[^/]+//",
            "name": "@js:sc=org.jsoup.Jsoup.parse(re=String(src).replace(/\\s*(?:&nbsp;)+\\s*/g,\" \").replace(/\\s*<\\/?em>\\s*/g,\"\"));\nres=String(sc.select('span[c-bind]:matches(\\\\S)').first().text());\n\nkey=java.get(\"key\");\nax=java.get(\"aut\");\nlx=sc.select('div>span.c-e-subtitle-item').text();\njava.put(\"源\",r=(r=res.match(/(.{0,2})《([^《》]+)》(.{0,3})/))&&r[3]!=\"作品集\"&&!r[1].match(/新[书作]/)?r[2]:res.replace(/[(（][^(（）)]*[）)]$/,''));\n\nif(key!=\"\"){\nau=sc.select('span.js-c-property-text a');\n\nif(au.size()){\nax=au.get(0);\nfl=sc.select('span.js-c-property-text:not(:has(a))').text();\nlx=(zb=sc.select('.c-header-title span:not([c-bind])'))?zb.text()+\"\\n\"+fl:fl;\n}else{\nr=r.replace(/^(简介页|详情页|目录页|正版|全本|免费阅读|[\\s。.,_/|《「『【〖（(\\[\\])）〗】』」─—-]+)+/,\"\").replace(/(?!^)[^\\u4e00-\\u9fa5a-zA-Z0-9]*(?:笔趣阁|思路客|燃文|小说|漫画|手机)?(?:[.|,_/\\s「『【〖（(\\[\\])）〗】』」。─—-]|(?:人工|机器|电脑)?校正|精校|完[整结]|加料|番外|未删节|简介|全[文本集]|下载|(?:小说|漫画|大全|正版(?:小说|漫画)?|免费|免费小说|免费漫画|免费全[文本]|在线|最[新快]|全部|手机|电脑)(?:全[文本集部]|大全|免费|在线|阅读|下载|章节|小说|更新|漫画|\\.)|([^a-zA-Z0-9])(?:azw|mobi|epub|txt)(?![a-zA-Z0-9])|(?:最全)?(?:章节|目录|列表){2,}|更新章节最快|无广告|(?::顶点)?无弹窗|无防盗|小说网|手打全文|[纯全](?:手打|文字)|\\s*by\\s*(?=[\\u4e00-\\u9fa5]))[\\S\\s]*/i,\"$1\");\n\nif(ax==\"#\"||!~re.indexOf(ax)){\nax=re.match(/《([^《》]+)》作品集|[\\s\\[\\];?!,.()、，；？！。…─（）［］〖〗【】《》>]作\\s*者(?:[:：\\s“\"'(（]|<[^it\\/][^>]*>|<\\/[^>]+>)+(?![^\\s<(《“（）”》)>\\/\\[\\];?!,、，；？！。…─［］〖〗【】]*\\.{3}<)([^\\s<(《“（\"'）”》)>\\[\\];?!,、，；？！。…─［］〖〗【】/／｜|:：]+?)(?=(?:其[他它]|小说|[更最][快新]|\\.\\s*)?..[:：]|所?写?的《|[\\s<(《“（\"'）”》)>\\[\\];?!,、，；？！。─［］〖〗【】/／｜|])/);\nif(!ax){\nax=re.match(new RegExp(r+\"[^a-z0-9A-Z\\\\u4e00-\\\\u9fa5]*([^\\\\s]+?)\\\\s+著|(?:由|原创)(?:(?:原创|网络)?作[家者])?(?![\\\\u4e00-\\\\u9fa5a-zA-Z0-9_-]*(?:[书网]友|网)所?提供)([\\\\u4e00-\\\\u9fa5a-zA-Z0-9_-]+?)(?:为大家)?(?:所作|所?(?:(?:[精倾]心)?[创著]作|提供|写?的(?:《|\"+r+\")))\"));\nif(!ax)ax=res.match(/[^.|,_/\\s\\[\\]（()）【〖〗】。-]+[（(](?![^\\s]+[\\s、：；？！…─“‘《〖【，。:;?!\"'】〗》’”][^(（）)]+|(?:连载中?|完本|大结局|上|中|下|[\\s.一二三四五六七八九十百千万〇零0-9]+)[）)])([^（()）]+?)(?:(?:\\s+|所)?著|的?新书|[/／｜|][^)）]+)?[)）]/)}\nax=ax?ax[1]||ax[2]:\"\"}\n\nif(!ax.length&&~re.indexOf(key)&&!~r.indexOf(key))ax=key;\n\nif(r.indexOf(ax)>0&&!~key.indexOf(r))r=r.split(ax)[0].replace(/[:：]$/,'');\n\nzt=[(小说=key.indexOf(\"小说\"))&&小说^(长=key.length-2),(有声=key.indexOf(\"有声\"))&&有声^长];\nif(zt[0]&&zt[1]){\nrez=\"(?!^)(有声|小说|有声小说)$|^(有声|小说|有声小说)(?!$)\"\n}else if(zt[1]){\nrez=\"(?!^)有声$|^有声(?!$)\"\n}else if(zt[0]){\nrez=\"(?!^)小说$|^小说(?!$)\"\n}else rez=\"☯\";\nif((漫画=key.indexOf(\"漫画\"))&&漫画^长)rez+=\"|(?!^)漫画$|^漫画(?!$)\";\n\nix=r.replace(new RegExp(rez),\"\").split(/[：:]/);i=0;\nwhile(i<ix.length){x=ix[i];\nif(~x.indexOf(key)||~key.indexOf(x))break;i++}\nif(i==ix.length)i=0;\nr=ix.slice(i,i+2).join(\":\")}}\n\nlx=String(''+lx?lx:''+key?(lx=sc.select('a.c-e-subtitle-l span:not([class=\"c-e-subtitle-item l\"])')).size()&&lx.text()||(lx=re.match(/(?:[\\s\\[\\];?!,.()、，；？！。…─（）［］〖〗【】》]|<[^a/][^>]*>|<\\/[^>]+>)(?:[分大]\\s*类|类\\s*[型别])(?:[:：\\s]|<[^>]+>)+([^\\s<\"./／｜|>]+)/))&&lx[1]||'':sc.select('.c-e-subtitle-item').text()).replace(/[^：:]+[：:]|.*(类[型别]|[大分]类|\\[)\\s*|([\\]”，。、；？！─…,_/／｜| 　-]|\\.(?!\\d)).*/g,'');\nif(正=res.match(/^正版$|[^\\s\\d［\\[\\]］]+(?=\\]|］)/))lx=正[0]+','+lx;\njava.put(\"类\",lx);\njava.put(\"au\",String(ax).replace(/<[^>]+>/g,''));\njava.put(\"bb\",r)",
            "wordCount": "div:has(>span:matches(\\S)+span:matches(^新$))>span:first-child@text||span:matches(^新$)+ul li:first-child@text\n##^.*[更最]\\s*新?(章节|[(（][^(（）)]+[）)])*[:：\\s]*|\\s(?:新|\\d+)$|;$"
        },
        "ruleToc": {
            "chapterList": "@js:if(java.get(\"单\")==''){\nsrc=org.jsoup.Jsoup.parse(src);\n\nif((result=java.get(\"录\"))==\"\"){if(页=(result=src.select('a[href~=\\\\S]:matches(下[一\\\\s]*[页頁]|下[一二三四五六七八九十百千万〇零0-9]{2,}章):not([href~=^#|javascript:])')).size())result=result.first().attr('href')\n}else{网=String(result).split(\"🌕\");\nfor(i=3,页=+网[0],result=网[1]+2+网[3];i<=页;i++)result+='\\n'+网[1]+i+网[3];\nresult=String(result)}\n\nif(页)java.put(\"页\",/,/.test(book.tocUrl)?result.split('\\n').join(',{\"webView\":true}\\n')+',{\"webView\":true}':result);\n\n嗅=()=>String(src).match(/[\\[(]([\"'])<[a-z]+[ >][^\\[\\]()]+<\\/a>(?:[^\\[\\],()]*<\\/[a-z]+>)?\\1[\\])]/);\n转=it=>it.replace(/\\\\[Uu]([0-9a-zA-Z]{4})/g,(_,it)=>String.fromCharCode(parseInt('0x'+it)));\n兜=()=>src.select(':matchesOwn(^$|[0-9〇一二三四五六七八九十])>a:matches(\\\\S):not(:has(*>*>:not(span)),[href~=(?i)passport|\\\\.aspx$|\\\\.php$|^https://[^/]+(/|index\\\\.[a-z]+)?$|(^|[^/])[?/].*((book|[^a-z])(info|case|page|reg|Game|Play)[^a-z]|buy[^a-z]|SystemInfo|hot|sort|desc|asc|top|coins|nutrition|review|ticket|update|(app|author|xiazai|down)(?!=))|/list\\\\d*([/_-][^/_-]+/?)?$|\\\\d+_\\\\d+_\\\\d+|target=iframe|https%],:matches((?i)^((点击|软件|应用|安装|客户|移动|手机|电脑|安卓|苹果|下载|阅读|pc|ap[kp]|ipa|plx|deb|exe|zip|rar|txt|epub)[\\\\s.端版]*(?=$|点击|软件|应用|安装|客户|移动|手机|电脑|安卓|苹果|下载|阅读|pc|ap[kp]|ipa|plx|deb|exe|zip|rar|txt|epub)|[A-Za-z0-9\\\\u4e00-\\\\u9fa5]?返回.*(简介|书页|目录)[A-Za-z0-9\\\\u4e00-\\\\u9fa5]?|[<>-]+|\\\\d+-\\\\d+章|书页|目录|简介|[上下首尾]([一\\\\s]*[页頁]|[\\\\s\\\\d零〇一二三四五六七八九十百]*章)|[↑\\\\[]?[倒正反逆顺順]序[↓\\\\]]?)$))');\n\nif((zt=java.get(\"嗅\"))!=''){\nif(zt>0&&(嗅=嗅())){\nsrc=嗅[0];\nif(zt==2)src=转(src);\nsrc=org.jsoup.Jsoup.parse(src)}\nsrc.select(java.get(\"除\")).remove();\nif(java.get(\"兜\")==1)src=兜();\nsrc=src.select(java.get(\"查\"))\n\nif(!页){for(首=String(java.get(\"首\")).split('\\n'),ss=src.size(),i=0;i<ss;i++)if(首[i]!=src.get(i)){\nif(i>1)src.subList(1,i).clear();break;}}\n\n}else{\nbook.putVariable(\"除\",除=\"meta,link,a:has(img),\"+((zt=java.get(\"全\")!=1)?\"a[href$=\"+String(book.tocUrl).replace(/,\\{\"webView\":true\\}|^.{8}[^/]*/g,'')+\"],\":\"\")+(基=String(java.get(\"基\")),基==''?'':\"a[href$=\"+基.replace(/^.{8}[^/]*/,'')+\"],\")+\"a[href~=javascript:|#|[a-z]+[A-Z][a-z]+Id[=_-]|[^/][/?&]sub[A-Z]|action=list],a:matches(^$|最新章节$|^[^\\\\u4e00-\\\\u9fa5A-Z0-9]*(正文|.{0,2}书架|(免费|在线|开始|立即|全文|从头|点击|正文)+[试阅]读|[^\\\\s\\\\d外内楔前后卷篇章]*(更新调整|[两一二三四五六七八九十]+连更|作者[:：给要有]|双倍月票|感言|推书|推[a-z0-9A-Z_\\\\u4e00-\\\\u9fa5-]+书|[求个请投点下张](月?票|收藏|订阅|推荐)|(感谢|作者)[^\\\\s]*(读者|书友|大家|各位)|[书点]评[^\\\\s]*活动|[没有空]更新|没时间更新|请个?假|关于本书|关于更新|打赏名单|起点活动)[^\\\\s]*)[^\\\\u4e00-\\\\u9fa5A-Z0-9]*$)\");\n\nbook.putVariable(\"嗅\",(基=嗅())?(src=org.jsoup.Jsoup.parse((zt=/\\\\[Uu]([0-9a-zA-Z]{4})/.test(基=基[0]))?转(基):基),zt)?2:1:0);\nsrc.select(除).remove();\n\nif(zt=java.get(\"全\")!=1){\n找=ll=null;\n$=it=>(qc=ll,查=找,ll=src.select(找=it)).size()>14&&(查=it,src=re=ll);\n\nif(!(((ck=java.get(\"ck\"))!=\"\"&&$(\"[href~=\"+ck+\"(?!index(/|\\.[a-z]+)?$)[^.?/_-][^&/_-]*/?$|/[vV][iI][pP][_-]?([Rr]ead|[Cc]hapter|action=article)|([A-Za-z]\\\\d+|\\\\d[A-Za-z]+|[A-Z][a-z]+|[a-z][A-Z]+){3,}[^/?&]*$]\"))||$(\"[href~=^[a-z0-9]+(/|\\\\.[^./]+)?$]\"))){\nif(qc&&qc.size()>ll.size())找=查,ll=qc;\n\n$=it=>(re=src.select(it)).size()&&(查=it,src=re);\n\nif(!($(\"[data-cid]\")||$(\"[href~=(?i)(^|[/_-])(chapter|read)+([_-]?id)?/[^/_-]+[/_-][^/_-]+]\")||$(\"[href~=(?i)(^|[&?/_-](book|novel|comic|manhua|mh?)?)(chapter|read)+([_-]?id)?[?/=]]\")||$(\"[href~=(?i)[&?/_-]cid[&?/_=-]]\")||$(\"[data-href]\"))){\nsrc=兜();\nbook.putVariable(\"兜\",1);\n\nba=(ba=String(java.get(\"ba\"))).match(/(\\?(?:[^=]+=)+)(.+)$/)||ba.match(/(?:[^/_-][/_-]([^/._-]+))?[/_-]([^/._-]+)(?:\\/|\\/index[^/]*|\\.[^/.]+)?$/);\n\nif(xi=(id=ba[2]).match(/\\?[^=]+=([^&]+)/)||id.match(/^[^\\d%]*(\\d{2,}|[1-9])$/)||ba[1]&&ba[1].match(/^[^\\d%]*(\\d{2,})$/))id=xi[1];\n\n$(\"[href~=([^\\\\d]|^)\"+id+\"[/_&-][^\\\\d]*\\\\d+]:not([href~=\"+id+\"[^\\\\d]*$]),[href~=/[vV][iI][pP]|([A-Za-z]\\\\d+|\\\\d[a-zA-Z]+|[A-Z][a-z]+|[a-z][A-Z]+){3,}[^/?]*$|([^\\\\d]|^)\"+id+\"[/_&-][^\\\\d]*\"+id+\"(/|\\\\.[^.]+|&.+)?$]\")||$(\"[title]\")||$(\"[href~=/view/\\\\d+\\\\.[a-zA-Z]+$]\")}\nif(re.size()<ll.size())查=找,src=ll}}\n\nif(!(zt&&re.size()))src=src.select('a'),查='a';\nif(查)book.putVariable(\"查\",查);\nif(页)java.put(\"首\",src)}\n\nsrc}else if((list=java.get(\"单\"))!=1){\n\nif((网=String(list).split(\"🌕\")).length>1){\nfor(i=+网[2],x=+网[0],j=2,list=\"<a href='\"+baseUrl+\"'>正文1</a>\";i<=x;i++,j++)list+=\"<a href='\"+网[1]+i+网[3]+\"'>正文\"+j+\"</a>\"}\n\norg.jsoup.Jsoup.parse(list).select('a')\n\n}else org.jsoup.Jsoup.parse(\"<a href='\"+baseUrl+\"'>正文</a>\").select('a')",
            "chapterName": "text",
            "chapterUrl": "href@js:chapter.putVariable(\"next\",'a[href~=(?:^|[?/])'+(r=result.trim().replace(/([*$|?+(){}\\[\\]\\^\\\\])/g,'\\\\$1')).match(/[^?/=.]+(?:=(?![01]$)[^=]+)*(?=\\/*$|\\.[^?/.]+$|=[01]$)/)[0]+'[=/_-]2(?:\\\\/|\\\\.[^?/.]+)? *$]@href||a[href~=(?:^|[?/])'+r.replace(/\\d+(?=[^\\d]*$)/,it=>+it+1)+' *$]@href||');result+java.get(\"动\")",
            "isVip": "",
            "nextTocUrl": "@js:java.get(\"页\")",
            "updateTime": ""
        },
        "searchUrl": "https://quark.sm.cn/s?page={{page}}&q={{\nkey=key.trim();aut=\"#\";\nif(ke=key.match(/^([单跳逆动静字图]+)\\^([\\S\\s]+)/))key=ke[2],java.put(\"custom\",ke[1]);\nz=key.lastIndexOf(\"#\")+1;\ns=key.lastIndexOf(\"$\")+1;\nif(/\\$[a-zA-Z0-9/._-]+$/.test(key)){\nkey=key.slice(0,s-1).concat(\" site:\",key.slice(s))\n}else s=0;\nss=s?s-1:key.length;\nas=key.slice(z?z:ss,ss);\nif(!/^\\s*$/.test(as)){\naut=as.match(/[^\\s\"]+/)[0];\nkey=key.slice(0,z-1).concat(\" \",key.slice(z))}else z=0;\nif(keys=key.slice(0,(z>s?s?s:z:s>z?z?z:s:ss+1)-1)){\nkeys=keys.match(/[^\\s]+/)[0]\n}else if(!s)key=aut+\"作品\";\njava.put(\"key\",keys);\njava.put(\"aut\",aut);\nkey}}",
        "weight": 0
    },
    {
        "bookSourceComment": "─────当前版本Pro V50─────\n\n点击登录即可查看:\n\n0、书源制作思路\n\n1、版本更新日志\n\n2、书源用法展示\n\n3、相关问题解释\n\n───────搜索格式────────\n\n完全格式：书名#作者$网站\n简化格式1：书名$网站\n简化格式2：书名#作者\n简化格式3：书名\n\n说明：搜索“斗破苍穹#天蚕土豆$www.qidian.com”将在“www.qidian.com”中搜索名为斗破苍穹、作者为天蚕土豆的书籍\n\n──────前缀设置全体───────\n\n用法：“单跳逆原动静字图”等字后跟“^”再跟“搜索关键字”，可实现这些字对应的功能。\n\n范围：本次搜索到的所有书籍都会执行指定的功能。\n\n示例：“图^斗破苍穹”、“逆静^斗破苍穹#天蚕土豆”、“跳^斗破苍穹$www.qidian.com”。\n─────⤵\n跳：允许目录自动跳转，目录标题说点击跳转时可如此做。\n\n逆：设置书籍目录章节逆向排序，配合指定网站的搜索方式针对小说全是逆向排序的网站比较方便。\n\n原：设置书籍不进行净化替换，优点是加载正文快速且不会被误删内容，缺点是需要自己写“替换净化”规则并在正文中启用才能净化网站推广文本。\n\n动：强制设置正文动态加载(正文默认会进行需要动态加载还是静态加载的判断，然后自动切换模式，若判断失误导致本应切换成动态加载却未切换时，可强制设置正文动态加载)。\n\n静：强制设置正文静态加载(正文默认会进行需要动态加载还是静态加载的判断，然后自动切换模式，若判断失误导致本应保持静态加载却切换成动态加载而使正文加载时间变长时，可强制设置正文静态加载)。\n\n图：设置成看图模式(不设置则默认图文模式)，只显示图片，不显示文字。\n\n字：设置成纯字模式(不设置则默认图文模式)，只显示文本，不显示图片。\n─────⤴\n\n──────书籍变量设置───────\n\n用法：\n将“单直跳全逆原图字动静”中任意多个字\n或“[目录url]”或“[正文尾页url]单”\n或“数字#第二页链接#”\n或“[目录尾页url]录”\n放在详情页右上角的书籍变量中，\n确认后点刷新就能触发这些字段对应的功能。\n\n范围：只控制当前书籍执行指定功能。\n\n书籍变量格式示范：[http://m.biquku.la/0/425/]全字\n\n─────⤵\n直：不做目录识别，直接将详情页作为目录页，或以“[目录链接]”格式直接指定目录链接，目录识别错误时可这种做。\n\n全：直接显示“预览正文”和查询到的所有章节，跳过章节筛选环节，单页文章和部分筛选后章节不全的小说网站可这样做。\n─────⤴\n\n──目录有分页却无翻页按钮或书籍无目录──\n\n单：无目录打开即正文但有尾页或下一页按钮的书籍，必须设置为单向模式，这样书源会直接将入口页作为正文第一页，并将第一页及其所有下一页共同构造生成“正文1”、“正文2”…的目录形式来阅读，搜索前缀“单^”、书籍变量“单”。\n\n录：有目录分页但无目录下一页按钮的书籍，可在书籍变量中直接指定复制到的最后目录页链接为目录链接并添加指令“录”，即可自动生成所有目录分页。\n书籍变量：“[https://m.zuizaoxiaoshuo.com/ml/33280_13]录”\n\n辅助生成──无目录打开即正文也无尾页和下一页按钮的书籍，需指定章节数量并用第二页链接作为参考链接生成所有分页。\n书籍变量──220#https://wap.yqshuwang.com/2021n/02/14972_2.html#\n效果说明──根据第二页链接“https://wap.yqshuwang.com/2021n/02/14972_2.html”生成220条章节的目录列表。\n\n单个章节──目录仅一个章节且这个章节正文中无下一页按钮时，可复制那个章节的正文尾页链接并用指令“单”，便可将所有正文分页构造成章节列表。\n书籍变量──[http://www.yulinzhanye.la/20/20733/532447_9.html]单",
        "bookSourceGroup": "📑百度搜书,通用",
        "bookSourceName": "百度搜书",
        "bookSourceType": 0,
        "bookSourceUrl": "百度搜书",
        "bookUrlPattern": "",
        "customOrder": 73,
        "enabled": true,
        "enabledCookieJar": false,
        "enabledExplore": true,
        "exploreUrl": "",
        "header": "{\"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36\"}",
        "lastUpdateTime": 1650211205084,
        "loginUrl": "https://gitee.com/no-mystery/shuyuan/",
        "respondTime": 180000,
        "ruleBookInfo": {
            "author": "@get:{x}",
            "canReName": "true",
            "coverUrl": "@js:(s=java.getStringList('img[alt*='+book.name+']@src||meta[property$=image]@content||img[src~=(cover|file|article)[^a-z]|/\\\\d+[/_-]\\\\d+(s?\\\\.|$)]@src||img[data-src~=\\\\S]@data-src||img[src*=/img]@src||img[src~=^(data|https?):|^[^:]+/]@src')).size()?/^data:/.test(s=s.get(0))?java.base64Encode(s):s:null",
            "init": "",
            "intro": "@js:'　　'+java.get(\"g\")",
            "kind": "@js:java.get(\"v\")",
            "lastChapter": "@get:{z}",
            "name": "@js:r=org.jsoup.Jsoup.parse(result);\nr.select(\"script,noscript,style,head>:not(meta),footer,[class~=^foot],[id~=^foot],a:has(>:last-child:matchesOwn(^分类$)),[value]\").remove();\n\nn=String(book.name);\nm=String(r).replace(/(?:&nbsp;)+/g,\" \");\n书=java.get(\"源\");\n\nif(x=(y=r.select('[property$=book_name]')).size()){\ny=y.attr(\"content\");\nu=书.indexOf(y)\n}else for(u=true,c=r.select(\"h1,h2,h3,strong\").eachText();x<c.size();x++)if(\n(y=c.get(x))!=''&&(u=书.indexOf(y),~u&&u<4))break;\nif(!~(y=String(y)).indexOf(n)&&~u)n=y;\n\nif((x=r.select(\"[property$=author]\")\n).size()){\nx=String(x.attr(\"content\")).replace(/^作\\s*[者家][\\s:：]*|(?!^)[/／｜|，,\\s][^⚙️]*$/,\"\")\n}else{\nx=m.match(/>\\s*([^>]+?)(?:\\s*<\\/[a-z]+>\\s*|\\s+)著\\s*<|[\\s\\[\\];?!,.()、，；？！。…─（）［］〖〗【】>《》](?:小说|漫画)?作\\s*者(?![^>]+->)(?:[:：\\s〖【（《［\\[\\(]|<[^it\\/][^>]*>|<\\/[^>]+>)+([^\\s<\">,，/／｜|\\)\\]］》）】〗]+)/);\nx=x?x[1]?x[1]:x[2]:(x=r.select(\"#author,.author\"),x.size()?String(x.first().text()).replace(/(?!^)[/／｜|，,\\s][^⚙️]*$/,\"\"):\"\")}\n\nif(n.indexOf(x)>0&&!~java.get(\"key\").indexOf(n))n=n.split(x)[0];\njava.put(\"x\",x);\n\ny=r.select(\"meta[property~=(category|status)$]\");\nc=y.size()?String(y.eachAttr(\"content\"))\n.slice(1,-1).replace(/(?!^)\\s*[，,./／｜|]\\s*/,\",\"):(y=m.match(/(?:[\\s\\[\\];?!,.()、，；？！。…─（）［］〖〗【】》]|<[^a/][^>]*>|<\\/[^>]+>)(?:[分大]\\s*类|类\\s*[型别])(?:[:：\\s]|<[^>]+>)+([^\\s<.\"/／｜|>]+)/))&&y[1];\nif(c)java.put(\"v\",c);\n\ny=r.select(\"meta[property~=latest_chapter_name$]\");\n\nc=y.size()?y.attr(\"content\"):(y=m.match(/>(?:\\s*[更最]\\s*[新近])+(?:\\s*章\\s*节)?(?:[:：\\s\\[]|<[^>]+>)+(?!\\s*(?:-|&gt;)\\s*<|[:：\\s0-9T年月日时分秒*-]{5,}<|[^:：]+[^章\\s]\\s*[:：]\\s*<|更新(?:时间)?[:：])([^<\"/／｜|\\]>]+)/))&&y[1];\nif(c)java.put(\"z\",c);\n\n正=true;\nif((key=String(java.get(\"custom\"))).length){\nif(~key.indexOf(\"全\"))java.put(\"全\",1);\nif((\nu=key.match(/[^\\[\\]]+(?=\\])/),\nc=~key.indexOf(\"录\"),\ny=~key.indexOf(\"单\"),\nbaseUrl=u?u[0]:baseUrl,\n(c||u)&&(baseUrl=c||y?(baseUrl=String((c=baseUrl.match(/(.+[^\\d])(\\d+)([^\\d]*)$/))[1]+1+c[3]),\nc=c[2]+'🌕'+c[1]+'🌕'+2+'🌕'+c[3],\nbaseUrl):baseUrl)\n)||~key.indexOf(\"直\")\n)java.put(\"目\",1),正=1;\nif(~key.indexOf(\"录\"))java.put(\"录\",c),正=1;\nif(y||~key.indexOf(\"#\")){\nif(!u){\nif((网=key.match(/(\\d+)#([^#]+)/))\n&&(尾=网[1],网=网[2].match(/^(.*[^\\d])([12])([^/?\\d]*)$/))\n||(尾=r.select('a[href~=\\\\d[^/?\\\\d]*$]:matches(^(尾|末|最后一)[頁页篇章回节節话話]$)')).size()\n&&(网=r.select('a:matches(^2$)')).size()\n&&(网=String(网.first().attr('href')).match(/^(.*[^\\d])([12])([^/?\\d]*)$/))\n&&(尾=String(尾.first().attr('href')).match(/\\d+(?=[^/?\\d]*$)/)[0])){\nc=尾+'🌕'+网[1]+'🌕'+网[2]+'🌕'+网[3]\n}else if((c=r.select('a:matches(^(\\\\d+|…+|\\\\.+)$)')).size()){\nif((网=String(c).split(/<a[^>]+>[^\\d<]+<\\/a>/)).length==2){\nfor(c=网[0],尾=网[1],x=+网[1].match(/>([^<]+)/)[1],网=网[0].match(/href=\"([^\"]*[^\\d])(\\d+)([^/?\\d\"]*)\"[^>]*>([^<]+)<[^<]+$/),j=+网[4],i=+网[2]-j;j<x;j++)c+=\"<a href='\"+网[1]+(j+i)+网[3]+\"'>\"+j+\"</a>\";\nc+=尾}\n}else c=1}\njava.put(\"单\",c),正=false}\nif(~key.indexOf(\"跳\"))java.put(\"跳\",1);\nif(~key.indexOf(\"逆\"))book.setReverseToc(true);\nelse book.setReverseToc(false);\nif((u=~key.indexOf(\"图\"))||~key.indexOf(\"原\"))java.put(\"原\",1);\nif(~key.indexOf(\"动\"))java.put(\"动\",',{\"webView\":true}');\nelse if(~key.indexOf(\"静\"))java.put(\"静\",1);\nif(u||~key.indexOf(\"字\"))java.put(\"文\",u?1:2)\n}else book.setReverseToc(false);\n\ny=r.select(\"meta[property$=description][content~=\\\\S]\");\nc=y.size()?y.get(y.size()-1).attr(\"content\"):(r.select(':matchesOwn([\\\\u4e00-\\\\u9fa5]{2,})>:not(br),:not(body,br,:matchesOwn([\\\\s\\\\S]{50}),:has(body,:matchesOwn([\\\\s\\\\S]{50})))').remove(),r.select(\":matchesOwn(\\\\S)\").text());\n\njava.put(\"g\",String(c!=\"\"?c:book.intro).replace(/[\\snbsp;]*(?:&nbsp;|\\s){2,}|\\s*([？！。]+[”」』\\]\\}\\)）｝】〗〕〉]?)\\s*/g,\"$1　　\").replace(/(?=　　)/g,\"\\n\"));\n\nif(正==1)m=java.ajax(baseUrl);\njava.setContent(m,baseUrl);\n\nif(正){\nzl=java.getStringList(\"[property$=latest_chapter_url]@content||:matches(^最新章节)>a:only-child:not([href~=^$|#|javascript:])@href||a:matches(^正文\\\\s*[\\\\d第一二三四五六七八九十〇零百千]|^[【《]?(\"+n+\")?[\\\\s》】（\\\\u0028:：＿_－-]*(第[\\\\s0〇零]*[一1]\\\\s*[\\\\u4e00-\\\\u9fa5]|([\\\\u4e00-\\\\u9fa5]{2}阅读[（\\\\u0028:：＿_－-]?)?(0*1([）\\\\u0029.、:：_-]|$)|[〇零]*一([）\\\\u0029\\\\s.、:：_-]|$)))):not([href~=(^|[^/])/[vV][iI][pP]|([A-Za-z]\\\\d+|\\\\d[A-Za-z]+|[A-Z][a-z]+|[a-z][A-Z]+){3,}[^/?&_-]*$|^$|#|javascript:|\"+(bas=baseUrl.replace(/\\/+$|\\.[a-zA-Z]+$/,'')).match(/[^?/]+$/)[0].replace(/([*$|?+\\\\\\^\\[\\](){}])/g,'\\\\$1')+\"(?:[/_-]1)?(?:\\\\/|\\\\.[a-zA-Z]+)?$])@href||a:matches(^[^\\\\u4e00-\\\\u9fa5]*(免费|在线|开始|立即|全文|正文|从头)+[试阅]读[^\\\\u4e00-\\\\u9fa5]*$):not([href~=^$|#|javascript:])@href||a:matches(^0*1[^\\\\d]):not([href~=(^|[^/])/[vV][iI][pP]|([A-Za-z]\\\\d+|\\\\d[A-Za-z]+|[A-Z][a-z]+|[a-z][A-Z]+){3,}[^/?&_-]*$|^$|#|javascript:])@href\");\n\nif(zl.size()&&(ck=String(zl.get(0)).match(/^(.*\\/\\/[^/]+)?([/?]?[^/].+[?&/_-])[^&/_-]+\\/?$/)))(jd=ck[1])&&(h=baseUrl.lastIndexOf('/',baseUrl.indexOf(jd.match(/(?:\\.[^.]+){2,}$|[^./]+\\.[^.]+$/)[0])))>8&&(\nq=baseUrl.indexOf(':'),\n(bas=java.get(baseUrl=baseUrl.slice(0,q+2)+baseUrl.slice(h),{})).statusCode()==200&&java.setContent(bas.body(),baseUrl)\n),java.put(\"ck\",ck[2])}\nn",
            "tocUrl": "@js:if(java.get(\"单\")==''){\nif(java.get(\"录\")==java.get(\"目\")){\nr=org.jsoup.Jsoup.parse(result);\n\nscript=r.select(\":matchesOwn(^$)>a[href^=javascript:]:matches(全文|章[節节]|目[錄录]):not(:matches(最新))\");re=false;\n\nif(!script.size()){\nba=(bas=baseUrl.replace(/\\/$|\\.[a-zA-Z]+$/,'')).match(/(http....[^/?]+)(?:([?/])(.*))?$/);b=ba[1];v=ba[3];\n\nr.select(\"a[href~=[^a-z]page[^a-z]]:not(:matches([反正顺順逆倒]序|[全正]文|更多|全部|所有|章[節节]|作品|目[錄录]|列表)),a:not([href~=^(?!//)[^#:]+$|\"+b.split(':')[1]+\"]),:matchesOwn(\\\\S)>a,a[href~=javascript:|#],a:matches(^\\\\S{1,4}$):not(:matches([反正顺順逆倒]序|[阅閱][讀读]|查看|展[开開]|进入|[全正]文|更多|完整|全部|所有|目[錄录]|列表|章[節节]):not(:contains(分类)))\").remove();\n\ny=r.select(\"a[href~=(?i)catalog|contents|chapters|mulu|(^|[^a-z])ml|showchapter|(^|chapter[/_-]?|\"+v.replace(/(.+)((\\/\\d\\d)\\d+)$/,\"$1$3$2\")+\"[/_-])(more|list|all)|sort[/=_-]asc]\");\n\nif(!y.size()){b3='';\n\nif(ba[2]==\"?\"){\nb3='[href~=^[^?]+$],'\n}else if(ba[3]){\nb3=ba[3].replace(/[*$|?+\\\\\\^\\[\\](){}]/g,'\\\\$0');\n\nb3=\"[href~=\"+b3+\"(\\\\.[^.]+|/\\\\d+(\\\\.[^.]+|/)?)?$],[href~=[/?]\"+b3.replace(/[&/_-][^/_-]+$/,'')+\".*$]:not([href~=[/?]\"+b3.replace(/[/_-]/g,'[/_-]')+\"]),\"}\n\ny=r.select(\"a:not(\"+b3+\"[href~=(?i)(^|[^/])[?/].*((book|[^a-z])(info|case)[^a-z]|(cid|buy)[^a-z]|desc|coins|nutrition|review|ticket|update|(app|author|xiazai|down)(?!=))|/chapter|/index/|/d/],:matches((?i)^$|[0-9零〇一二三四五六七八九十百千万、，：；？！。…‘’“”（）()]|[票榜:：.]|推荐|排行|等级|说明|收藏|书评|简介|分[类卷]|简介|作者|手机|软件|应用|安装|客户|移动|pc|电脑|安卓|苹果|下载|最新|ap[kp]|ipa|plx|deb|exe|zip|rar|txt|epub))\")}\n\nif(y.size()){\nys=y.select(\"a[href~=(?i)catalog|contents|list|chapter|mulu|(^|[^a-z])ml|more|read|all]:matches([反正顺順逆倒]序|全文|章[節节]|目[錄录]):not(:matches(阅读)),a[href~=(?i)catalog|contents|chapter|(^|[^a-z])ml|mulu|read]:matches(更多|列表),a[href~=(?i)catalog|contents|list|chapter|mulu|(^|[^a-z])ml|more|all]:matches(^$),a:matches(^[^\\\\u4e00-\\\\u9fa50-9]*([反正顺順逆倒]序|全文(免[費费])?[阅閱][讀读]|(点击|查看|展[开開]|进入|返?回到?)*([全正]文|(更多|完整|全部|所有)?(章[節节]|(作品)?目[錄录])+)+(列表)?(\\\\s*(查看|展开)?更多)?)[^\\\\u4e00-\\\\u9fa50-9]*$)\");zt=false;\n\nif(!ys.size()){\nba=bas.match(/(\\?(?:[^=]+=)+)(.+)$/)||bas.match(/(?:[^/_-][/_-]([^/._-]+))?[/_-]([^/._-]+)(?:\\/index[^/]*)?$/);\n\nif(xi=(id=ba[2]).match(/\\?[^=]+=([^&]+)/)||id.match(/^[^\\d%]*(\\d{2,}|[1-9])$/))id=xi[1];\nif(ba[1])if(xi=ba[1].match(/^[^\\d%]*(\\d{2,})$/))id=/^\\d$/.test(id)||!xi[1].indexOf(id)?xi[1]:\"(\"+id+\"|\"+xi[1]+\")\";\n\nys=y.select(\"[href~=(?i)^((.*//[^/]+/)?[^=.]*[^\\\\d=.])?\"+id+\"([?_-][a-z=_-]*0|\\\\.[^.]+|[/?]([^\\\\d]*|[^/\\\\d]*/?|(list|more|all)([=_-][a-z]*)?\\\\d+[^\\\\d]*)?)?(&.+)?$]:not(:contains(\"+(bs=String(book.name)[0])+\"))\");\n\nif(!ys.size()){zt=true;\nys=y.select(\"[href~=(?i)^((.*//[^/]+/)?[^=.]*[^\\\\d=.])?(\\\\d+/\"+id+\"[_-]\\\\d+[^\\\\d]*|\"+id+\"[_-][a-z_-]*1[^\\\\d]*)$]:not(:matches(阅读|\"+bs+\"))\")}}\n\nif(ys.size()){\nif((re=ys.select(\"[href~=(/|^)[^.]+$]\")).size())ys=re;\nre=String(ys.first().attr(\"href\"));\n\nfor(x=1;x<ys.size();x++)if((xs=String(ys.get(x).attr(\"href\"))).length>re.length)re=xs;\n\nif(/(?:[2-9]\\d*|1\\d+)[^\\d]*$/.test(re)){\nif(!zt&&(q=re.match(/^(.*[^/])?[&?/].*(?:catalog(ue)?|contents|(?:show)?chapters?|mulu|ml|more|all|list|page)(?:[=_-][a-z]*)?\\d+[^\\d]*$/i))&&v==(q[1]||'').replace(/^http....[^/?]+/,''))zt=true;\nif(zt)re=re.replace(/\\d+(?=[^\\d]*$)/,\"☯1\")}\n\n}}}\n\nre=String(!re?baseUrl:(java.put(\"基\",baseUrl),/^\\/[^/]/.test(re)?b+re:/^https?:/.test(re)?re:/^\\/\\//.test(re)?b.split('//')[0]+re:String(baseUrl).replace(/[^/]*$/,'')+re))}else re=baseUrl;\n\nr=re.replace(/(?:[☯?&/_-][^\\d?/&_-]*[01])+[^\\d]*$/,\"\");\njava.put(\"ba\",r);\nre=re.replace(\"☯\",\"\")}else re=baseUrl;\n\njava.get(\"跳\")==1?re+',{\"webView\":true}':re",
            "wordCount": "{{baseUrl}}##//([^/]+)##$1##"
        },
        "ruleContent": {
            "content": "@js:dt=lr='';c=1;动=java.get(\"动\");\nif(动!=''&&!~baseUrl.indexOf(\",\")){\nresult=String(java.ajax(baseUrl+动))\n}else if(java.get(\"静\")==动)c=dt=2;\n\nr=org.jsoup.Jsoup.parse(r1=result.replace(/&nbsp;/g,' '));\n查=i=java.get(\"序\");\n\nif(java.get(\"文\")==1){for(;c;c--){\nd=[\"img[data-src],img[src~=[^a-z]cid[^a-z]]\"\n,\"img:not([src~=(?i)^$|^javascript:|\\\\.gif|\\\\.png|[^a-z](cover|css|ic(on)?|load(ing|ed)?)[^a-z]])\"\n,\"img[src~=(?i)\\\\.png]:not([src~=(?i)[^a-z](cover|css|ic(on)?|load(ing|ed)?)[^a-z]])\"\n,'img[src~=(?i)\\\\.gif]:not([src~=(?i)[^a-z](cover|css|ic(on)?|load(ing|ed)?)[^a-z]])'];\n\nif(!(查!=\"\"&&(查!=-1&&((lr=r.select(d[查])).size(),true)))){\n$=it=>(lr=r.select(it)).size();\nif($(d[i=0])||$(d[i=1])||$(d[i=2])||false)break;\n\nif(c==2){dt=1;\nr=org.jsoup.Jsoup.parse(java.ajax(baseUrl+',{\"webView\":true}'))\n}else i=$(d[3])?3:-1}}\nif(i==0)lr=String(lr).replace(/(?:src=['\"][^'\"]+['\"] +)?data-/g,'');\nif(查==\"\")book.putVariable(\"序\",i);\n\n}else{\nsc=java.get(\"文\")==2?\n'[style~=(?i)text-align:center|(^| |;)color: *(rgb.(?!255[ ,]+255[ ,]+255)[\\\\d, ]*2\\\\d\\\\d|#(?=[a-f\\\\d]{3}([^a-f\\\\d]|$))(?!fff)[a-f\\\\d]*[d-f]|#(?=[a-f\\\\d]{4})(?!ffffff)([\\\\da-f]{2})*[d-f][\\\\da-f]|green|red|blue|yellow|purple|pink|brown)],script,noscript,style,header,footer,[class~=^foot|^head],[id~=^foot|^head],:has(>a):not(:has(p:matchesOwn(\\\\S),br)),a>*,:has(a):not(:matchesOwn([\\\\S\\\\s]{50,}),:has(:matchesOwn([\\\\S\\\\s]{50,}))),:matchesOwn([\\\\s\\\\S]{50})>:not(br,a,:matchesOwn([\\\\s\\\\S]{50})),:not(br,p,a,:matches([\\\\s\\\\S]{200}),:has(p,br,div:matchesOwn(，|。)+div:matchesOwn(，|。)),:has(p,br,div:matchesOwn(，|。)+div:matchesOwn(，|。)) :matchesOwn(\\\\S):not(:not(p,div,span:has(br))))'\n:\n'[style~=(?i)text-align:center|(^| |;)color: *(rgb.(?!255[ ,]+255[ ,]+255)[\\\\d, ]*2\\\\d\\\\d|#(?=[a-f\\\\d]{3}([^a-f\\\\d]|$))(?!fff)[a-f\\\\d]*[d-f]|#(?=[a-f\\\\d]{4})(?!ffffff)([\\\\da-f]{2})*[d-f][\\\\da-f]|green|red|blue|yellow|purple|pink|brown)],script,noscript,style,header,footer,[class~=^foot|^head],[id~=^foot|^head],:has(>a):not(:has(p:matchesOwn(\\\\S),br,img:not([src~=(?i)^$|^javascript:|[^a-z](css|ic(on)?|load(ing|ed)?)[^a-z]|/\\\\d+s\\\\.jpg]))),img[src~=(?i)^$|^javascript:|[^a-z](css|ic(on)?|load(ing|ed)?)[^a-z]|/\\\\d+s\\\\.jpg],a:not(:matches(^$)>img)>*,:has(a):not(img,:matchesOwn([\\\\S\\\\s]{50,}),:has(img,:matchesOwn([\\\\S\\\\s]{50,}))),:matchesOwn([\\\\s\\\\S]{50})>:not(img,br,a,:has(img),:matchesOwn([\\\\s\\\\S]{50})),:not(img,br,p,a,:matches([\\\\s\\\\S]{200}),:has(p,br,img,div:matchesOwn(，|。)+div:matchesOwn(，|。)),:has(img,p,br,div:matchesOwn(，|。)+div:matchesOwn(，|。)) :matchesOwn(\\\\S):not(:not(p,div,span:has(br))))';\n\nd=[\":matchesOwn(\\\\S):has(br):has(:matchesOwn(\\\\S):has(br))\"\n,\":matchesOwn(\\\\S):has(br)\"\n,\":has(>:matchesOwn(\\\\S):not(:has(*))+:matchesOwn(\\\\S):not(:has(*)))\"\n,\":has(>:has(>p:only-child:matchesOwn(\\\\S):not(:has(*)))+:has(>p:only-child:matchesOwn(\\\\S):not(:has(*))))\"\n,\"img\"\n,\":matchesOwn(\\\\S)\"];\n\ntry{for(查=i!=''?i:java.get(\"元\");c;c--){\n\nif(!(c>1&&(String(r.text()).length<400||r.select(':matchesOwn(内容未加载完成|关闭(阅读|小说)模式)').size()))){\nr.select(sc).remove();\n\nif(!(查!=\"\"&&(lr=r.select(i?d[i==6?5:i]:查)).size()))for(i=0;i<6&&(lr=r.select(d[i]),i==4&&c==1?!lr.size():String(lr.text()).length<200);i++);\nif(c<2||i<6)break;}\n\nr=org.jsoup.Jsoup.parse(r2=String(java.ajax(baseUrl+',{\"webView\":true}')).replace(/(<[a-z]+)&nbsp;/g,'$1 '));\ndt=r1.length==r2.length?2:1}\n\nfor(c=lr.first(),v=1;v<lr.size();v++)if(lr.get(v).parents().contains(c)){\nlr.remove(v);\nv--}else c=lr.get(v);\n\nlr=String((c=lr.size()==2&&i<4)?String(lr.first().text()).length>String(lr.get(1).text()).length?lr.first():lr.get(1):(c=lr.size()==1)?lr.first():lr);\n\nif(查==\"\"){\nif(c&&(查=lr.match(/<([a-z]+) ([^>]+)>/))&&(查[2]=查[2].match(/(?:id|class|style)=(?:\"[^\"]+\"|'[^']+')|[^= ]+(?==\"[^\"]+\"|'[^']+')/g))){\nbook.putVariable(\"元\",查[1]+'['+查[2].join('][')+']')\n}else book.putVariable(\"序\",i)}\n\nlr=lr.replace(/<([a-z]+)[^>]*\"-\\d+\"[^>]*>[^<]+<\\/\\1>|[^<>]*<a[^<]+<\\/a>[^<]*|&lt[; ]?\\/?[a-z]+(?= |\\/?&gt)(?:[ a-z=-]+|\"[^\"]+\"|'[^']+')*\\/?&gt[; ]?|[☯📑⚙️🌕︴]/g,\"\").replace(/\\s+(?:\\s|(?:(?:(?:n?b)?s)?p)?;)/g,\"　　\");\n\nif(java.get(\"原\")!=1)lr=(!lr.indexOf(\"　　\")?lr.replace(/>(?!　　|\\s*(?:(?:(?:n?b)?s)?p)?;)\\s*(?=[^\\s<>])/g,\">︴\"):lr).replace(/((?:[〖【『「（《〈〔［\\[(][^〖【『「（《〈〔［\\[()］〕〉》）」』】〗\\]]*[)］〕〉》）」』】〗\\]]\\s*)*(?:第?\\s*[一二三四五六七八九十百千万〇零0-9]+\\s*[章节回話话：:.．,，、]*\\s*)?{{n=(t=title.match(/\\S+$/)[0].replace(/[*$|?+\\\\\\^\\[\\](){}/]/g,\".?\")).replace(/^(正文[^\\u4e00-\\u9fa5A-Za-z]*|第?[一二三四五六七八九十百千万〇零0-9]+[章节回話话\\s：:.．,，、]*)+/,\"\"),n!=t&&/\\S/.test(n)?\"(?:第?\\\\s*[一二三四五六七八九十百千万〇零0-9]+\\\\s*[章节回話话：:.．,，、]*\\\\s*\"+n+\"|\"+t+\")\":t}}(?:\\s*[〖【『「（《〈〔［\\[(][^〖【『「（《〈〔［\\[()］〕〉》）」』】〗\\]]*[)］〕〉》）」』】〗\\]])*)/g,\"⚙️$1⚙️\")+\"📑\"\n}catch(e){}}\nif(dt)book.putVariable(dt==1?\"动\":\"静\",',{\"webView\":true}');lr",
            "imageStyle": "FULL",
            "nextContentUrl": "@js:if((r=java.getStringList((nx=java.get(\"next\"))+\"a:matches(第二[頁页]|下[一\\\\s]*[頁页]):not([href~=^javascript:|^#])@href||a:matches(下[一\\\\s]*[篇章回节節话話]):not([href~=^javascript:|^#])@href||a[href~=[_-]\\\\d+(/|\\\\.[a-z]+)?$]:has(i,img):not(:matches(\\\\S),[href~=^javascript:|^#])@href\")).size()){\nif(~String(book.tocUrl+(nextChapterUrl||'')).indexOf(r=String(r.get(r.size()-1)))||~r.indexOf(nextChapterUrl||String(book.tocUrl).replace(/.+(?=_\\d+\\/$)/,'')))r=null\n}else r=null;\nif(r){if(nx!='')chapter.putVariable(\"next\",(n=r.replace(/\\d+(?=[^\\d]*$)/,it=>+it+1))==r?'':'a[href=\"'+n+'\"]@href||');\nr+java.get(\"动\")}",
            "replaceRegex": "@js:if(java.get(\"原\")==1){result}else{\nresult=result.replace(/⚙️([^\\u4e00-\\u9fa5⚙️]+|[零〇一二三四五六七八九十百千万\\s]+|(?!第[零〇一二三四五六七八九十])[\\u4e00-\\u9fa5]+)⚙️/g,'$1').split('📑');\nl=result.length-1;\nwhile(l)if(r=result[--l].match(/^(\\n+(?:[^\\n]{1,30}\\n+){1,3})([\\S\\s]+)$/))result[l]=r[1]+r[2].replace(/⚙️/g,'');\nresult.join('📑')\n.replace(/—/g,\"─\")\n.replace(/[·۰•・]/g,\"・\")\n.replace(/\\s*(?:︴[^\\n　]+\\s+)*📑\\s*|^\\s*(︴[^\\n　]+\\s+)*|\\s*(?:　　|\\n)(?:[\\s&#a-zA-Z0-9]*;)?[\\s　?]*/g,\"☯\")\n.replace(/(?:︴[^☯]*☯)+(?=︴)|☯(?:温馨|[^a-zA-Z0-9\\u4e00-\\u9fa5☯]+)提示.?[:：][^☯]+|☯[^☯]+字体不会安装.?请百度[^☯]+|☯.{0,2}正版订阅在阅文旗下的起点和QQ书城，可以第一时间看到最新章节.{0,2}(?=☯)|︴\\s*第?[〖【『「（《〈〔［｛\\[{(][^☯]+(?=☯)|☯第\\s*[（(][^（()）]+[)）][頁页](?=☯)|[^☯]*(?:关注|[微vVＶｖ][^\\u4e00-\\u9fa5A-Za-z0-9]*[信xXｘＸ]|公[^\\u4e00-\\u9fa5]*众[^\\u4e00-\\u9fa5]*号){2,}[^☯]*|(?:&#?[a-z0-9]*;?)+(?=;|☯);*|read[sx][；;?？]+/g,\"\")\n.replace(/\\s+/g,\" \")\n.replace(/☯[ ☯]*/g,\"\\n\")\n.replace(/(\\n[〖【『「（《〈〔［｛\\[{(]?)([pPＰｐ][SsｓＳ]+(?=[ ：:;；，,、。.─\\d\\u4e00-\\u9fa5])[^\\n]+)/g,\"$1🌕$2\")\n.replace(/\\[\\[\\[[^\\[\\]]+http:file2.qidian.comchapters(.{5,6})(..)([^\\[\\]]{35})\\]\\]\\]/g,'<img src=\"http://file2.qidian.com/chapters/$1/$2/$3\">')\n.replace(/(<img )[^>]*(src=\"[^\"]+\")[^>]*(>)|((?: ?[＋+－-]?[0-9０-９]+(?:[．.／/][0-9０-９]+)?[％%:：]?[a-zA-Z]*)+ ?|[ _＿－-]?[a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９]+)/g,\"$1$2$3☯$4☯\")\n.replace(/☯[・。](?=☯)/g,\"☯.\")\n.replace(/,\\n/g,\"，\")\n.replace(/!(?=\\n)/g,\"！\")\n.replace(/\\?(?=\\n)/g,\"？\")\n.replace(/(<[^<]+)☯☯/g,\"⚙️$1⚙️\\n\")\n.replace(/(?:\\n[^āáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ\\u4e00-\\u9fa5\\n〖【『「《“‘＜（〈〔［｛({\\[\\]})｝］〕〉）＞’”》」』】〗、，：；？！。…─🌕︴\\n]+|([。？！…”』」】〗])[^a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5\\n〖【『「《“‘＜（〈〔［｛({\\[\\]})｝］〕〉）＞’”》」』】〗、，：；？！。…─☯︴\\n]+[\\u4e00-\\u9fa5]+)?[^a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5\\n〖【『「《“‘＜（〈〔［｛({\\[\\]})｝］〕〉）＞’”》」』】〗、，：；？！。…─⚙️☯︴\\n]+(?=\\n)|[^☯!\"'(),\\s\\u4e00-\\u9fa5、，：；？！。…─〖【『「《“‘＜（〈〔［｛｝］〕〉）＞’”》」』】〗]*☯([a-zA-ZＡ-Ｚａ-ｚ]*[āáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ][a-zA-ZＡ-Ｚａ-ｚ]*)☯[^☯!\"'(),\\s\\u4e00-\\u9fa5、，：；？！。…─〖【『「《“‘＜（〈〔［｛｝］〕〉）＞’”》」』】〗]*/g,\"$1$2\")\n.replace(/[^!\"'(),\\s\\u4e00-\\u9fa5、，：；？！。…─〖【『「《“‘＜<（〈〔［｛({\\[\\]})｝］〕〉）>＞’”》」』】〗︴🌕]*(?:☯[^.．!(),\\n\\u4e00-\\u9fa5、，：；？！。…─〖【『「《“‘＜（〈〔［｛({\\[\\]})｝］〕〉）＞’”》」』】〗⚙️]+|([^☯!(),\\na-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5、，：；？！。…─〖【『「《“‘<＜（〈〔［｛({\\[\\]})｝］〕〉）＞>’”》」』】〗⚙️])(?!\\1)|☯(?=[^☯!(),\\na-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5、，：；？！。…─〖【『「《“‘＜（〈〔［｛({\\[\\]})｝］〕〉）＞’”》」』】〗][!(),\\s\\u4e00-\\u9fa5、，：；？！。…─〖【『「《“‘＜（〈〔［｛({\\[\\]})｝］〕〉）＞’”》」』】〗])|[〖【『「（《〈〔［｛\\[{(][^a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]*[)｝］〕〉》）」』】〗\\]}]){4,}|[^；;％%～~?？!！\"'”’。…─\\na-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]*[〖【『「（《〈〔［｛\\[{(][^a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]*[)｝］〕〉》）」』】〗\\]}](?:[^a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]+(?=[)｝］〕〉》）」』】〗\\]}]))?/g,\"📑\")\n.replace(/([；;％%～~?？!！\"'”’。…─])📑(?=[)｝］〕〉》）」』】〗\\]}])/g,'$1')\n.replace(/(?:([\\n。？！])[^\\n。？！]{1,10})?[〖【『「（《〈〔［｛\\[{(][^〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]*(?:☯[^a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]☯|📑|🌕)[^〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]*[｝］〕〉》）」』】〗\\]})](?:[^。]{0,5}(?:[〖【『「（《〈〔［｛\\[{(][^〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]*(?:☯[^a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]☯|📑)[^〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]*[｝］〕〉》）」』】〗\\]})]|[^📑!,()\\s\\u4e00-\\u9fa5、，：；？！。…─‘’“”（）《》〖〗【】]+))*(?:(?:[^\\n]{1,10}|(?:[\\u4e00-\\u9fa5]{0,5}[，、])*[\\u4e00-\\u9fa5]+[！。]?)(?=\\n))?/g,\"$1\")\n.replace(/((?:[请請][记記]住)?[^⚙️🌕📑︴*\\n(),\\u4e00-\\u9fa5、，：；？！。…─「」‘’“”（）《》〖〗【】]*(?:(?:[^⚙️🌕📑︴*\\n(),\\u4e00-\\u9fa5、：，；？！。…─「」‘’“”（）《》〖〗【】]+[*(), \\u4e00-\\u9fa5、，:：；？！。…─「」‘’“”（）《》〖〗【】]{1,3})*[^*︴📑☯⚙️🌕\\s&;(),āáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜa-zA-ZＡ-Ｚａ-ｚ0-9０-９\\u4e00-\\u9fa5、,，:：;；?？!！。…～~─'\"‘’“”【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}％%・/／＝=_＿.．＋+－-]+(?!(?:[^>]+>)?⚙️)|☯[^☯\\n]+☯\\.☯[^☯\\n]+☯|本[文书](?:首发|来自)|(?:章节不完整.?|完整章节)?请.{2,6}(?:搜索|百度|引擎|关键[词字])+|(?:[阅閱][讀读]|访问|訪問|[網网地][站址]|链接|鏈接|[\\u4e00-\\u9fa50-9a-zA-Z]{0,4}(?:文学|中文|[網网]))+[:：]|[\\u4e00-\\u9fa50-9a-zA-Z]{0,6}(?:[網网地][站址]|链接|鏈接)为|.{2,4}文[学學][網网]|[请請].{2,4}收藏(?:.{0,2}推[荐薦])?|(?:天才)一秒[記记]住|，?請?訪問|(?:[更最][快新]|[快高]速|热门|(?:[阅閱][讀读])?完整|本|(?:官[網网]|本站).{0,2})(?:章[節节]|小说|更新|[網网地][址站][:：]?|快速)|更新(?:速度)?[最更]?快|(?:(?:无错)?小说|正版|免费|全[文本]|在线|访问|訪問|txt|TXT|继续|各种|推[荐薦]|收藏|分享|交流|你?喜欢的)+(?:全文|免费|在线|[阅閱]?[讀读]|下载|章[節节]|小说|好书)|章[節节](?:目录|列表)|小说[網网](?:更新)?|手打全文|[纯全](?:手打|文字)|手机看书|手机版|笔趣阁|(?:本站|[網网]站|站内|看)?无(?:任何)?(?:广告|弹窗|防盗)(?:章节)?|不弹窗|(?:(?:請|请|或者?)?(?:訪問|访问|[電电手][腦脑机機]|[網网][址站]|用[户戶]|浏览|瀏覽|閱讀|阅读|看小说|看漫画)){2,}|看小说|看漫画|(?:用[^\\n]{2,6})?(?:[追看]书|小说)(?:就用|软件|☯[^☯]+☯)，?|用[^\\n]{2,6}[追看]书|(?:..的)?(?:最佳选择|阅读体验)|(?:推[荐薦]|收藏|分享)(?:本站|我们)|小说..版|文章质量更好|谢谢各位(?:读者|书友)支持|水印广告测试|本章未完|请翻页|点击下一页|领.{0,2}红包|同步更新《[^《》]+》|关注[〖【『「（《〈〔［｛\\[{(][^〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]+[)｝］〕〉》）」』】〗\\]}])(?:[* (),\\u4e00-\\u9fa5、，：；？！。…─‘’“”（）《》〖〗【】]{0,3}[^⚙️📑*\\n(),\\u4e00-\\u9fa5、，：；？！。…─「」‘’“”（）《》〖〗【】]+|[….。!！]+(?=\\n))*|⚙️(?!<)[^⚙️\\n]+⚙️)/g,\"\\n⚙️$1⚙️\\n\")\n.replace(/⚙️(<[^<>]+>)⚙️\\n|[〖【『「（《〈〔［｛\\[{(](?:[^〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]{0,3}\\n⚙️(?!\\s*\\S\\s*⚙️).+⚙️\\n*)+[^〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]{0,3}[)｝］〕〉》）」』】〗\\]}]|(🌕)\\s*⚙️|⚙️\\n[^\\u4e00-\\u9fa5]{0,5}\\n⚙️|\\n⚙️\\s*(\\S)\\s*⚙️\\n(?![^⚙️]{1,3}⚙️)|(⚙️\\n)|([，、；])[\\s,，。、…:：;；?？!！`’]*[,，。、…:：;；?？!！`’](?!⚙️)|\\n[\\s,，。、…:：;；?？!！`’]*(?=[,，。、:：;；?？!！])|([：？！。…─])(?:[^⚙️☯a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5\\n…─“‘’”〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]+(?=\\n)|[^⚙️☯a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5\\n…─“‘’”〖【『「（《〈〔［｛\\[{()｝］〕〉》）」』】〗\\]}]+)|☯/g,\"$1$2$3$4$5$6\")\n.replace(/([)）？！?!…」』”\\s。])(?:[^\\n（(🌕)）”』」’。]{0,5}(?:(?:\\n⚙️.+⚙️\\n|[^（()）\\n”』」。]{0,5}📑)[^（()）\\n。]{0,5}(?:\\n⚙️.+⚙️(?:\\n(?=\\n⚙️|[^（()）\\n]{1,5}\\n))?|[^（()）\\n。]{0,5}📑(?:[^📑]{1,5}(?=\\n⚙️))?)+(?:[^（()）\\n]{1,5}(?=\\n))?|(?:(?:(?:\\n⚙️.+⚙️\\n|[^（()）\\n。]{0,5}📑)[^（()）\\n]{0,5}){2,}|[^（(🌕)）”』」’\\n。]{0,5}(?:(?:請|关键[词字]|[電电手][腦機]|用戶|瀏覽|[阅閱]讀|推[薦荐]|收藏|分享|文章质量|谢谢(各位|支持|大家)|水印|翻页|点击|下[一\\s]*[页頁篇章回节節话話]|免费|热门|官网|正版|在线|同步|下载|文学|中文|章节|[本网][站址]|站内|小说|更新|无错|[本全][文本章]|首发|广个?告|弹窗|防盗|访问|訪問|txt|TXT|读者|书友|百度|[插说]一?[下句]话?，[\\u4e00-\\u9fa5]{0,5})[^（()）\\n]{0,5})*(?:📑|\\n⚙️[^\\n]+⚙️\\n)[^（()）\\n]{0,5}(?:(?:請|关键[词字]|[電电手][腦機]|用戶|瀏覽|[阅閱]讀|推[薦荐]|收藏|分享|文章质量|谢谢(各位|支持|大家)|水印|翻页|点击|下[一\\s]*[页頁篇章回节節话話]|免费|热门|官网|正版|在线|下载|同步|文学|中文|章节|[本网][站址]|站内|小说|更新|无错|[本全][文本章]|首发|广个?告|弹窗|防盗|访问|訪問|txt|TXT|读者|书友|百度)[^（()）\\n]{0,5})*|[^（(🌕)）\\n”』」’。]{0,3}\\n⚙️.+⚙️\\n[^（()）\\n。]{0,3})(?:[\\u4e00-\\u9fa5]+[！。]?|[^a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5\\n]+)?(?=\\n)))+|\\n⚙️[^\\u4e00-\\u9fa5]+⚙️\\n|📑|\\s*︴\\s*|\\n?⚙️\\n?|\\n[^a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5\\n]{2,}\\n[^🌕a-zA-ZＡ-Ｚａ-ｚāáǎàōóǒòēéěèīíǐìūúǔùǖǘǚǜ0-9０-９\\u4e00-\\u9fa5\\n“《‘【〖『「]*/g,\"$1\")\n.replace(/(?:(?:\\n🌕[^\\n]*)+(?:\\n+[^\\n]+){0,4}|\\n(?:[(（{｛][^(（<{｛｝}>）)]*(?:(?:[(（{｛][^(（<{｛｝}>）)]*[）)｝}])[^(（<{｛｝}>）)]*)*[）)｝}]?\\s*)+|[^\\n]*起点(?:原创|中文)[^\\n]*|[〖【『「（《〈〔［｛\\[{(]?未完待续[^\\n]*)[^\\u4e00-\\u9fa5<>]*$|^\\s*(?:(?:[^\\n]+\\n+){0,4}(?:🌕[^\\n]*\\n?)+|(?:[(（{｛][^(（<{｛｝}>）)]*(?:(?:[(（{｛][^(（<{｛｝}>）)]*[）)｝}])[^(（<{｛｝}>）)]*)*[）)｝}]?\\s*)+|，[^\\n]+)\\n|(?:^|\\n)[^a-z0-9A-Z\\u4e00-\\u9fa5]*(?=\\n)|🌕|\\n\\s*[a-zA-Z]+\\s*$/g,\"\")}",
            "sourceRegex": "",
            "webJs": ""
        },
        "ruleExplore": {
            "bookList": ""
        },
        "ruleSearch": {
            "author": "@get:{au}",
            "bookList": "@js:jsoup=org.jsoup.Jsoup.parse;\nfor(i=0,r=jsoup(src);i<100;i++){\ner=r.select(\"#content_left>:has(h3 a):not(:has(:matches(^(广告|推广|手游)$)))\");\nif(er.size()){break\n}else r=jsoup(java.ajax(baseUrl));\n}er",
            "bookUrl": "@get:{url}",
            "coverUrl": "img@src",
            "intro": ".op_tb_content@all||.c-abstract@all||span:matches([\\u4e00-\\u9fa5]):not(:has(a))@all||p:not(:has(a))@all",
            "kind": "@js:java.get(\"类\")",
            "lastChapter": "h3 a@href\n@js:try{java.put(\"url\",java.get(result,{}).header(\"Location\"))}catch(e){\njava.put(\"url\",result)}\n##[^/]+//",
            "name": "h3 a@text\n@js:re=String(src).replace(/\\s*(?:&nbsp;)+\\s*/g,\" \").replace(/\\s*<\\/?em>\\s*/g,\"\");\n\n类=(类=re.match(/(?:[\\s\\[\\];?!,.()、，；？！。…─（）［］〖〗【】》]|<[^a/][^>]*>|<\\/[^>]+>)(?:[分大]\\s*类|类\\s*[型别])(?:[:：\\s]|<[^>]+>)+([^\\s<\"./／｜|>]+)/))?类[1]:'';\njava.put(\"类\",(正=result.match(/^正版$|[^\\s\\d［\\[\\]］]+(?=\\]|］)/))?正[0]+','+类:类);\nkey=java.get(\"key\");\nax=java.get(\"aut\");\njava.put(\"源\",r=(r=result.match(/(.{0,2})《([^《》]+)》(.{0,3})/))&&r[3]!=\"作品集\"&&!r[1].match(/新[书作]/)?r[2]:result);\n\nr=r.replace(/^(简介页|详情页|目录页|正版|全本|免费阅读|[\\s。.,_/|《「『【〖（(\\[\\])）〗】』」─—-]+)+/,\"\").replace(/(?!^)[^\\u4e00-\\u9fa5a-zA-Z0-9]*(?:笔趣阁|思路客|燃文|小说|漫画|手机)?(?:[.|,_/\\s「『【〖（(\\[\\])）〗】』」。─—-]|(?:人工|机器|电脑)?校正|精校|完[整结]|加料|番外|未删节|简介|全[文本集]|下载|(?:小说|漫画|大全|正版(?:小说|漫画)?|免费|免费小说|免费漫画|免费全[文本]|在线|最[新快]|全部|手机|电脑)(?:全[文本集部]|大全|免费|在线|阅读|下载|章节|小说|更新|漫画|\\.)|([^a-zA-Z0-9])(?:azw|mobi|epub|txt)(?![a-zA-Z0-9])|(?:最全)?(?:章节|目录|列表){2,}|更新章节最快|无广告|(?::顶点)?无弹窗|无防盗|小说网|手打全文|[纯全](?:手打|文字)|\\s*by\\s*(?=[\\u4e00-\\u9fa5]))[\\S\\s]*/i,\"$1\");\n\nif(ax==\"#\"||!~re.indexOf(ax)){\nax=re.match(/《([^《》]+)》作品集|[\\s\\[\\];?!,.()、，；？！。…─（）［］〖〗【】《》>]作\\s*者(?:[:：\\s“\"'(（]|<[^it\\/][^>]*>|<\\/[^>]+>)+(?![^\\s<(《“（）”》)>\\/\\[\\];?!,、，；？！。…─［］〖〗【】]*\\.{3}<)([^\\s<(《“（\"'）”》)>\\[\\];?!,、，；？！。…─［］〖〗【】/／｜|:：]+?)(?=(?:其[他它]|小说|[更最][快新]|\\.\\s*)?..[:：]|所?写?的《|[\\s<(《“（\"'）”》)>\\[\\];?!,、，；？！。─［］〖〗【】/／｜|])/);\nif(!ax){\nax=re.match(new RegExp(r+\"[^a-z0-9A-Z\\\\u4e00-\\\\u9fa5]*([^\\\\s]+?)\\\\s+著|(?:由|原创)(?:(?:原创|网络)?作[家者])?(?![\\\\u4e00-\\\\u9fa5a-zA-Z0-9_-]*(?:[书网]友|网)所?提供)([\\\\u4e00-\\\\u9fa5a-zA-Z0-9_-]+?)(?:为大家)?(?:所作|所?(?:(?:[精倾]心)?[创著]作|提供|写?的(?:《|\"+r+\")))\"));\nif(!ax)ax=result.match(/[^.|,_/\\s\\[\\]（()）【〖〗】。-]+[（(](?![^\\s]+[\\s、：；？！…─“‘《〖【，。:;?!\"'】〗》’”][^(（）)]+|(?:连载中?|完本|大结局|上|中|下|[\\s.一二三四五六七八九十百千万〇零0-9]+)[）)])([^（()）]+?)(?:(?:\\s+|所)?著|的?新书|[/／｜|][^)）]+)?[)）]/)}\nax=ax?ax[1]||ax[2]:\"\"}\n\nif(!ax.length&&~re.indexOf(key)&&!~r.indexOf(key))ax=key;\n\nif(r.indexOf(ax)>0&&!~key.indexOf(r))r=r.split(ax)[0].replace(/[:：]$/,'');\n\nzt=[(小说=key.indexOf(\"小说\"))&&小说^(长=key.length-2),(有声=key.indexOf(\"有声\"))&&有声^长];\nif(zt[0]&&zt[1]){\nrez=\"(?!^)(有声|小说|有声小说)$|^(有声|小说|有声小说)(?!$)\"\n}else if(zt[1]){\nrez=\"(?!^)有声$|^有声(?!$)\"\n}else if(zt[0]){\nrez=\"(?!^)小说$|^小说(?!$)\"\n}else rez=\"☯\";\nif((漫画=key.indexOf(\"漫画\"))&&漫画^长)rez+=\"|(?!^)漫画$|^漫画(?!$)\";\n\nix=r.replace(new RegExp(rez),\"\").split(/[：:]/);i=0;\nwhile(i<ix.length){x=ix[i];\nif(~x.indexOf(key)||~key.indexOf(x))break;i++}\nif(i==ix.length)i=0;\n\njava.put(\"au\",ax);\njava.put(\"bb\",ix.slice(i,i+2).join(\":\"))",
            "wordCount": "div:has(>span:matches(\\S)+span:matches(^新$))>span:first-child@text||p a@text||.chapter-title:first-child@text\n##\\s\\d+$|;$"
        },
        "ruleToc": {
            "chapterList": "@js:if(java.get(\"单\")==''){\nsrc=org.jsoup.Jsoup.parse(src);\n\nif((result=java.get(\"录\"))==\"\"){if(页=(result=src.select('a[href~=\\\\S]:matches(下[一\\\\s]*[页頁]|下[一二三四五六七八九十百千万〇零0-9]{2,}章):not([href~=^#|javascript:])')).size())result=result.first().attr('href')\n}else{网=String(result).split(\"🌕\");\nfor(i=3,页=+网[0],result=网[1]+2+网[3];i<=页;i++)result+='\\n'+网[1]+i+网[3];\nresult=String(result)}\n\nif(页)java.put(\"页\",/,/.test(book.tocUrl)?result.split('\\n').join(',{\"webView\":true}\\n')+',{\"webView\":true}':result);\n\n嗅=()=>String(src).match(/[\\[(]([\"'])<[a-z]+[ >][^\\[\\]()]+<\\/a>(?:[^\\[\\],()]*<\\/[a-z]+>)?\\1[\\])]/);\n转=it=>it.replace(/\\\\[Uu]([0-9a-zA-Z]{4})/g,(_,it)=>String.fromCharCode(parseInt('0x'+it)));\n兜=()=>src.select(':matchesOwn(^$|[0-9〇一二三四五六七八九十])>a:matches(\\\\S):not(:has(*>*>:not(span)),[href~=(?i)passport|\\\\.aspx$|\\\\.php$|^https://[^/]+(/|index\\\\.[a-z]+)?$|(^|[^/])[?/].*((book|[^a-z])(info|case|page|reg|Game|Play)[^a-z]|buy[^a-z]|SystemInfo|hot|sort|desc|asc|top|coins|nutrition|review|ticket|update|(app|author|xiazai|down)(?!=))|/list\\\\d*([/_-][^/_-]+/?)?$|\\\\d+_\\\\d+_\\\\d+|target=iframe|https%],:matches((?i)^((点击|软件|应用|安装|客户|移动|手机|电脑|安卓|苹果|下载|阅读|pc|ap[kp]|ipa|plx|deb|exe|zip|rar|txt|epub)[\\\\s.端版]*(?=$|点击|软件|应用|安装|客户|移动|手机|电脑|安卓|苹果|下载|阅读|pc|ap[kp]|ipa|plx|deb|exe|zip|rar|txt|epub)|[A-Za-z0-9\\\\u4e00-\\\\u9fa5]?返回.*(简介|书页|目录)[A-Za-z0-9\\\\u4e00-\\\\u9fa5]?|[<>-]+|\\\\d+-\\\\d+章|书页|目录|简介|[上下首尾]([一\\\\s]*[页頁]|[\\\\s\\\\d零〇一二三四五六七八九十百]*章)|[↑\\\\[]?[倒正反逆顺順]序[↓\\\\]]?)$))');\n\nif((zt=java.get(\"嗅\"))!=''){\nif(zt>0&&(嗅=嗅())){\nsrc=嗅[0];\nif(zt==2)src=转(src);\nsrc=org.jsoup.Jsoup.parse(src)}\nsrc.select(java.get(\"除\")).remove();\nif(java.get(\"兜\")==1)src=兜();\nsrc=src.select(java.get(\"查\"))\n\nif(!页){for(首=String(java.get(\"首\")).split('\\n'),ss=src.size(),i=0;i<ss;i++)if(首[i]!=src.get(i)){\nif(i>1)src.subList(1,i).clear();break;}}\n\n}else{\nbook.putVariable(\"除\",除=\"meta,link,a:has(img),\"+((zt=java.get(\"全\")!=1)?\"a[href$=\"+String(book.tocUrl).replace(/,\\{\"webView\":true\\}|^.{8}[^/]*/g,'')+\"],\":\"\")+(基=String(java.get(\"基\")),基==''?'':\"a[href$=\"+基.replace(/^.{8}[^/]*/,'')+\"],\")+\"a[href~=javascript:|#|[a-z]+[A-Z][a-z]+Id[=_-]|[^/][/?&]sub[A-Z]|action=list],a:matches(^$|最新章节$|^[^\\\\u4e00-\\\\u9fa5A-Z0-9]*(正文|.{0,2}书架|(免费|在线|开始|立即|全文|从头|点击|正文)+[试阅]读|[^\\\\s\\\\d外内楔前后卷篇章]*(更新调整|[两一二三四五六七八九十]+连更|作者[:：给要有]|双倍月票|感言|推书|推[a-z0-9A-Z_\\\\u4e00-\\\\u9fa5-]+书|[求个请投点下张](月?票|收藏|订阅|推荐)|(感谢|作者)[^\\\\s]*(读者|书友|大家|各位)|[书点]评[^\\\\s]*活动|[没有空]更新|没时间更新|请个?假|关于本书|关于更新|打赏名单|起点活动)[^\\\\s]*)[^\\\\u4e00-\\\\u9fa5A-Z0-9]*$)\");\n\nbook.putVariable(\"嗅\",(基=嗅())?(src=org.jsoup.Jsoup.parse((zt=/\\\\[Uu]([0-9a-zA-Z]{4})/.test(基=基[0]))?转(基):基),zt)?2:1:0);\nsrc.select(除).remove();\n\nif(zt=java.get(\"全\")!=1){\n找=ll=null;\n$=it=>(qc=ll,查=找,ll=src.select(找=it)).size()>14&&(查=it,src=re=ll);\n\nif(!(((ck=java.get(\"ck\"))!=\"\"&&$(\"[href~=\"+ck+\"(?!index(/|\\.[a-z]+)?$)[^.?/_-][^&/_-]*/?$|/[vV][iI][pP][_-]?([Rr]ead|[Cc]hapter|action=article)|([A-Za-z]\\\\d+|\\\\d[A-Za-z]+|[A-Z][a-z]+|[a-z][A-Z]+){3,}[^/?&]*$]\"))||$(\"[href~=^[a-z0-9]+(/|\\\\.[^./]+)?$]\"))){\nif(qc&&qc.size()>ll.size())找=查,ll=qc;\n\n$=it=>(re=src.select(it)).size()&&(查=it,src=re);\n\nif(!($(\"[data-cid]\")||$(\"[href~=(?i)(^|[/_-])(chapter|read)+([_-]?id)?/[^/_-]+[/_-][^/_-]+]\")||$(\"[href~=(?i)(^|[&?/_-](book|novel|comic|manhua|mh?)?)(chapter|read)+([_-]?id)?[?/=]]\")||$(\"[href~=(?i)[&?/_-]cid[&?/_=-]]\")||$(\"[data-href]\"))){\nsrc=兜();\nbook.putVariable(\"兜\",1);\n\nba=(ba=String(java.get(\"ba\"))).match(/(\\?(?:[^=]+=)+)(.+)$/)||ba.match(/(?:[^/_-][/_-]([^/._-]+))?[/_-]([^/._-]+)(?:\\/|\\/index[^/]*|\\.[^/.]+)?$/);\n\nif(xi=(id=ba[2]).match(/\\?[^=]+=([^&]+)/)||id.match(/^[^\\d%]*(\\d{2,}|[1-9])$/)||ba[1]&&ba[1].match(/^[^\\d%]*(\\d{2,})$/))id=xi[1];\n\n$(\"[href~=([^\\\\d]|^)\"+id+\"[/_&-][^\\\\d]*\\\\d+]:not([href~=\"+id+\"[^\\\\d]*$]),[href~=/[vV][iI][pP]|([A-Za-z]\\\\d+|\\\\d[a-zA-Z]+|[A-Z][a-z]+|[a-z][A-Z]+){3,}[^/?]*$|([^\\\\d]|^)\"+id+\"[/_&-][^\\\\d]*\"+id+\"(/|\\\\.[^.]+|&.+)?$]\")||$(\"[title]\")||$(\"[href~=/view/\\\\d+\\\\.[a-zA-Z]+$]\")}\nif(re.size()<ll.size())查=找,src=ll}}\n\nif(!(zt&&re.size()))src=src.select('a'),查='a';\nif(查)book.putVariable(\"查\",查);\nif(页)java.put(\"首\",src)}\n\nsrc}else if((list=java.get(\"单\"))!=1){\n\nif((网=String(list).split(\"🌕\")).length>1){\nfor(i=+网[2],x=+网[0],j=2,list=\"<a href='\"+baseUrl+\"'>正文1</a>\";i<=x;i++,j++)list+=\"<a href='\"+网[1]+i+网[3]+\"'>正文\"+j+\"</a>\"}\n\norg.jsoup.Jsoup.parse(list).select('a')\n\n}else org.jsoup.Jsoup.parse(\"<a href='\"+baseUrl+\"'>正文</a>\").select('a')",
            "chapterName": "text",
            "chapterUrl": "href@js:chapter.putVariable(\"next\",'a[href~=(?:^|[?/])'+(r=result.trim().replace(/([*$|?+(){}\\[\\]\\^\\\\])/g,'\\\\$1')).match(/[^?/=.]+(?:=(?![01]$)[^=]+)*(?=\\/*$|\\.[^?/.]+$|=[01]$)/)[0]+'[=/_-]2(?:\\\\/|\\\\.[^?/.]+)? *$]@href||a[href~=(?:^|[?/])'+r.replace(/\\d+(?=[^\\d]*$)/,it=>+it+1)+' *$]@href||');result+java.get(\"动\")",
            "isVip": "",
            "nextTocUrl": "@js:java.get(\"页\")",
            "updateTime": ""
        },
        "searchUrl": "https://www.baidu.com/s?pn=<0,{{page*10}}>&wd={{\nkey=key.trim();aut=\"#\";\nif(ke=key.match(/^([单跳逆动静字图]+)\\^([\\S\\s]+)/))key=ke[2],java.put(\"custom\",ke[1]);\nz=key.lastIndexOf(\"#\")+1;\ns=key.lastIndexOf(\"$\");\nif(/\\$[a-zA-Z0-9/._-]+$/.test(key))key=key.slice(0,s).concat(\" site:\",key.slice(s+1));\ns=s+1?s:key.length;\nas=key.slice(z?z:s,s);\nif(!/^\\s*$/.test(as)){\naut=as.match(/[^\\s\"]+/)[0];\nkey=key.slice(0,z-1).concat(\" \",key.slice(z))}\njava.put(\"aut\",aut);\njava.put(\"key\",key.match(/[^\\s\"]+/)[0]);\nkey}}",
        "weight": 0
    }
]